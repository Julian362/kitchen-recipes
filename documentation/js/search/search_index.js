var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AmountDto.html",[0,0.144,1,2.545]],["body/classes/AmountDto.html",[0,0.272,1,4.893,2,0.792,3,0.119,4,0.106,5,0.093,6,4.119,7,2.14,8,2.735,9,0.106,10,0.106,11,1.309,12,3.067,13,2.814,14,0.233,15,0.012,16,2.467,17,2.506,18,3.913,19,0.409,20,4.49,21,1.9,22,0.539,23,4.49,24,4.49,25,0.587,26,0.288,27,4.397,28,1.75,29,3.474,30,4.401,31,4.354,32,3.648,33,3.865,34,2.177,35,0.494,36,0.159,37,4.629,38,0.308,39,0.964,40,1.926,41,2.598,42,1.638,43,2.467,44,0.24,45,0.008,46,0.008]],["title/classes/AmountDto-1.html",[0,0.12,1,2.121,47,3.051]],["body/classes/AmountDto-1.html",[0,0.272,1,4.9,2,0.797,3,0.12,4,0.106,5,0.093,7,2.143,8,2.751,9,0.106,10,0.106,11,1.314,12,3.07,13,2.82,14,0.233,15,0.012,16,2.474,17,2.516,18,3.925,19,0.411,21,1.776,22,0.54,25,0.59,26,0.289,28,1.76,29,3.487,32,3.809,33,3.88,34,2.19,35,0.497,36,0.16,38,0.309,39,0.968,40,1.931,41,2.613,42,1.647,43,2.474,44,0.241,45,0.008,46,0.008,48,4.367,49,4.517,50,4.517,51,4.953,52,4.953,53,4.642]],["title/modules/AppModule.html",[54,2.545,55,3.064]],["body/modules/AppModule.html",[0,0.211,3,0.123,4,0.109,5,0.096,9,0.109,15,0.012,26,0.4,36,0.162,38,0.238,42,2.237,45,0.008,46,0.008,54,4.454,55,6.061,56,2.984,57,3.948,58,4.061,59,4.061,60,4.061,61,5.348,62,4.31,63,4.496,64,3.399,65,3.399,66,4.636,67,6.132,68,4.87,69,4.496,70,5.038,71,4.87,72,3.682,73,4.636,74,4.496,75,4.636,76,3.682,77,4.636,78,4.061,79,1.32,80,4.636,81,3.682,82,6.872,83,4.061,84,4.636,85,3.399,86,5.371,87,4.636,88,4.496,89,4.061,90,4.636,91,4.636,92,4.636,93,4.636,94,4.636,95,4.636,96,4.636,97,4.636,98,4.636,99,4.636,100,4.636,101,4.061,102,4.636,103,4.636,104,4.636,105,4.636,106,6.132,107,5.371]],["title/guards/AuthGuard.html",[108,3.064,109,3.064]],["body/guards/AuthGuard.html",[0,0.214,3,0.125,4,0.111,5,0.098,9,0.163,10,0.111,14,0.183,15,0.012,19,0.424,26,0.333,35,0.684,36,0.165,38,0.243,39,0.998,44,0.221,45,0.008,46,0.008,79,1.347,85,3.469,108,4.557,109,5.761,110,4.732,111,4.145,112,4.002,113,1.03,114,7.657,115,1.667,116,4.145,117,7.119,118,4.732,119,1.667,120,1.667,121,1.063,122,0.445,123,6.216,124,1.438,125,6.216,126,7.657,127,4.732,128,6.216,129,5.854,130,6.216,131,1.03,132,1.383,133,5.444,134,1.571,135,0.972,136,1.202,137,1.844,138,3.366,139,4.732,140,4.732,141,4.732,142,4.732,143,3.046,144,4.732,145,4.732,146,1.232,147,4.732]],["title/injectables/AuthService.html",[62,2.305,134,1.057]],["body/injectables/AuthService.html",[0,0.207,3,0.119,4,0.106,5,0.093,9,0.142,10,0.106,14,0.177,15,0.012,19,0.41,22,0.307,26,0.372,35,0.662,36,0.159,38,0.231,39,0.967,44,0.24,45,0.008,46,0.008,62,4.276,79,1.283,85,3.305,112,3.875,113,0.998,115,1.615,116,3.949,117,7.044,119,1.615,120,1.615,121,1.03,122,0.431,124,1.393,131,0.998,132,1.357,134,1.522,135,0.926,136,1.164,137,1.757,143,5.096,146,1.174,148,1.882,149,3.949,150,5.272,151,4.508,152,6.019,153,4.589,154,4.508,155,5.272,156,4.413,157,3.875,158,2.033,159,2.498,160,1.849,161,1.542,162,4.127,163,3.305,164,2.902,165,1.246,166,4.508,167,2.745,168,4.508,169,4.508]],["title/classes/CreateIngredientDto.html",[0,0.144,170,3.064]],["body/classes/CreateIngredientDto.html",[0,0.266,2,0.86,3,0.129,4,0.115,5,0.101,6,4.541,9,0.19,10,0.115,11,1.381,14,0.233,15,0.012,17,2.939,19,0.48,21,1.944,22,0.563,26,0.304,28,1.899,31,4.8,32,3.557,34,2.363,36,0.168,38,0.25,39,1.131,44,0.281,45,0.008,46,0.008,170,5.808,171,3.335,172,5.921,173,2.472,174,4.268,175,4.873,176,3.572,177,4.268,178,4.268,179,4.873,180,2.238,181,2.168,182,5.032]],["title/classes/CreateIngredientUseCase.html",[0,0.144,183,3.064]],["body/classes/CreateIngredientUseCase.html",[0,0.21,2,0.811,3,0.122,4,0.108,5,0.095,9,0.161,10,0.108,14,0.18,15,0.012,19,0.416,21,2.026,26,0.364,28,1.792,36,0.162,38,0.236,39,1.099,44,0.216,45,0.008,46,0.008,113,1.011,115,1.636,119,1.636,120,1.636,121,1.043,122,0.437,124,1.755,131,1.011,132,1.368,135,0.945,136,1.18,137,1.792,146,1.197,161,1.573,165,1.271,172,6.024,183,5.716,184,2.667,185,4.684,186,5.018,187,1.792,188,2.747,189,2.747,190,1.844,191,2.574,192,2.747,193,1.854,194,3.405,195,4.028,196,6.1,197,4.028,198,2.844,199,4.174,200,1.792,201,2.064,202,1.792,203,4.599]],["title/classes/CreateMealPlannerDto.html",[0,0.144,37,2.86]],["body/classes/CreateMealPlannerDto.html",[0,0.263,1,4.771,2,0.764,3,0.115,4,0.102,5,0.089,6,4.332,7,2.256,8,2.636,9,0.102,10,0.102,11,1.277,12,3.044,13,2.283,14,0.235,15,0.012,16,2.136,17,2.772,18,3.389,19,0.452,21,1.629,22,0.543,25,0.424,26,0.281,27,4.666,28,1.687,29,3.389,30,4.294,31,4.274,32,3.594,33,3.771,34,2.099,35,0.644,36,0.155,37,4.868,38,0.3,39,1.066,40,2.181,41,2.505,42,2.136,43,2.794,44,0.272,45,0.008,46,0.008,176,4.294,204,3.438,205,4.329,206,4.329,207,4.329]],["title/classes/CreateMealPlannerUseCase.html",[0,0.144,208,3.064]],["body/classes/CreateMealPlannerUseCase.html",[0,0.168,2,0.588,3,0.088,4,0.078,5,0.069,7,2.229,9,0.149,10,0.078,14,0.17,15,0.012,19,0.392,21,1.196,22,0.432,25,0.659,26,0.338,27,4.631,28,1.298,36,0.129,38,0.171,39,0.925,40,2.2,42,1.777,44,0.204,45,0.006,46,0.006,79,0.949,113,0.808,115,1.545,119,1.307,120,1.307,121,0.985,122,0.413,124,1.759,131,1.05,132,1.364,135,0.684,136,1.362,138,2.362,146,1.833,158,1.601,161,1.14,165,1.591,184,2.469,185,4.336,187,1.298,188,2.388,189,2.388,190,1.473,191,2.237,192,2.54,193,1.343,194,3.025,198,2.954,199,3.334,200,1.298,202,1.298,208,5.161,209,4.336,210,4.872,211,3.718,212,3.2,213,3.666,214,3.718,215,2.919,216,2.28,217,3.883,218,3.332,219,4.872,220,3.332,221,3.869,222,2.569,223,5.031,224,3.136,225,1.683,226,2.28,227,3.572,228,2.443,229,2.443,230,2.029,231,3.334,232,2.792,233,3.332,234,2.443,235,2.443,236,3.332,237,3.572,238,3.332,239,1.909,240,1.496,241,3.332,242,2.029,243,2.443,244,2.919,245,2.443,246,2.443,247,2.443,248,2.443,249,2.443,250,2.443,251,2.443,252,2.443,253,2.443,254,2.443]],["title/classes/CreateRecipeDto.html",[0,0.144,255,3.064]],["body/classes/CreateRecipeDto.html",[0,0.241,2,0.583,3,0.152,4,0.078,5,0.068,6,4.697,9,0.171,10,0.078,11,1.055,12,2.159,13,1.886,14,0.245,15,0.012,16,2.45,17,3.168,18,3.315,19,0.517,21,1.188,22,0.574,25,0.561,26,0.232,28,1.287,29,2.801,30,4.201,31,4.965,32,3.833,34,1.602,35,0.532,36,0.128,38,0.248,39,0.92,41,3.315,42,2.09,43,2.56,44,0.249,45,0.006,46,0.006,122,0.347,158,1.224,173,2.092,174,5.019,176,2.422,178,2.893,180,1.71,181,1.656,182,3.844,255,4.625,256,2.127,257,4.518,258,2.732,259,3.327,260,3.701,261,3.701,262,3.187,263,3.303,264,2.228,265,3.303,266,4.841,267,3.303,268,4.625,269,3.303,270,3.303,271,3.303,272,2.552,273,3.303,274,3.303,275,3.303,276,3.303,277,3.303,278,2.893,279,2.893,280,3.303,281,2.893,282,4.24,283,4.24]],["title/classes/CreateRecipeUseCase.html",[0,0.144,284,3.064]],["body/classes/CreateRecipeUseCase.html",[0,0.178,2,0.64,3,0.096,4,0.085,5,0.075,9,0.155,10,0.085,14,0.178,15,0.012,19,0.412,21,1.271,26,0.348,28,1.414,36,0.137,38,0.186,39,0.97,42,1.89,44,0.214,45,0.007,46,0.007,79,1.033,113,0.859,115,1.621,119,1.39,120,1.39,121,1.034,122,0.433,124,1.726,131,1.093,132,1.4,135,0.745,136,1.275,138,2.512,146,1.815,161,1.241,165,1.432,184,2.568,185,4.511,187,1.414,188,2.484,189,2.484,190,1.567,191,2.328,192,2.484,193,1.463,194,3.129,198,3.073,199,3.546,200,1.414,202,1.414,212,3.33,221,4.114,223,5.234,224,3.335,226,2.483,227,3.798,228,2.66,229,2.66,230,2.21,231,3.546,232,2.512,234,2.66,235,2.66,237,2.66,239,1.203,240,1.629,242,2.21,243,2.66,245,2.66,246,2.66,247,2.66,248,2.66,249,2.66,250,2.66,251,2.66,252,2.66,253,2.66,254,2.66,257,4.999,258,1.772,264,2.889,284,5.314,285,4.511,286,4.114,287,3.675,288,2.881,289,5.181,290,3.628,291,4.538,292,3.628,293,1.833,294,3.178,295,3.628,296,2.881,297,3.178]],["title/classes/CreateUserDto.html",[0,0.144,298,3.064]],["body/classes/CreateUserDto.html",[0,0.261,2,0.811,3,0.122,4,0.108,5,0.095,6,4.62,9,0.108,10,0.108,11,1.33,14,0.238,15,0.012,17,3.043,19,0.497,22,0.571,25,0.597,26,0.293,28,1.792,31,4.883,32,3.832,34,2.23,36,0.162,38,0.236,39,1.099,44,0.277,45,0.008,46,0.008,158,2.042,167,4.748,173,2.417,176,5.344,180,2.154,181,2.087,298,5.716,299,3.652,300,4.989,301,4.439,302,4.599,303,4.599,304,3.927,305,4.599,306,4.599]],["title/classes/CreateUserUseCase.html",[0,0.144,307,3.064]],["body/classes/CreateUserUseCase.html",[0,0.201,2,0.762,3,0.114,4,0.102,5,0.089,9,0.138,10,0.102,14,0.172,15,0.012,19,0.399,22,0.294,26,0.368,28,1.684,36,0.155,38,0.221,39,1.065,44,0.208,45,0.008,46,0.008,62,3.921,113,0.97,115,1.779,119,1.569,120,1.569,121,1.001,122,0.419,124,1.534,131,0.97,132,1.334,135,0.887,136,1.283,143,4.576,146,1.523,156,3.167,158,2.041,161,1.478,162,4.524,163,3.167,165,1.616,184,2.585,185,4.539,187,1.684,188,2.679,189,2.679,190,2.149,191,2.51,192,2.679,193,1.742,199,4.539,200,1.684,202,1.684,214,4.097,230,2.631,232,2.837,300,5.083,307,5.614,308,4.863,309,3.784,310,5.85,311,3.784,312,3.085,313,4.321,314,3.784,315,3.784]],["title/classes/Delegate.html",[0,0.144,316,3.064]],["body/classes/Delegate.html",[0,0.168,2,0.361,3,0.054,4,0.048,5,0.042,7,0.923,9,0.079,10,0.048,11,0.728,14,0.158,15,0.012,19,0.527,21,0.82,26,0.277,36,0.088,38,0.105,39,0.68,40,0.951,44,0.119,45,0.004,46,0.004,62,2.693,112,2.151,113,0.554,115,1.135,119,0.896,120,2.228,121,0.724,122,0.239,124,1.561,131,1.272,132,0.916,135,0.421,136,1.115,146,0.533,158,0.845,162,3.275,163,1.502,165,1.486,183,3.102,188,3.144,189,3.138,191,2.148,192,1.84,194,2.414,200,0.798,202,0.798,208,3.579,211,2.966,212,2.466,213,2.824,214,2.966,232,3.182,240,3.384,264,1.18,284,3.579,287,2.835,307,3.102,316,6.189,317,1.794,318,3.706,319,4.881,320,4.881,321,4.881,322,4.881,323,4.881,324,4.881,325,4.881,326,4.881,327,4.881,328,4.881,329,4.881,330,4.881,331,4.881,332,4.881,333,4.881,334,4.881,335,4.881,336,2.049,337,2.973,338,2.049,339,4.231,340,2.049,341,2.927,342,2.049,343,2.654,344,2.927,345,2.049,346,6.534,347,2.049,348,2.049,349,2.049,350,2.049,351,3.102,352,2.049,353,3.341,354,2.049,355,3.102,356,2.049,357,3.102,358,2.049,359,3.102,360,2.049,361,3.102,362,2.049,363,3.102,364,2.049,365,3.102,366,2.049,367,3.102,368,2.049,369,3.102,370,2.049,371,3.102,372,2.049,373,3.579,374,2.049,375,3.579,376,1.502,377,3.341,378,1.13,379,1.627,380,1.185,381,2.049,382,6.603,383,2.049,384,3.341,385,4.881,386,3.341,387,2.049,388,2.049,389,3.341,390,2.049,391,2.049,392,2.049,393,2.049,394,2.049,395,2.049,396,2.049,397,2.049,398,2.049,399,2.049,400,2.049]],["title/classes/DeleteMealPlannerUseCase.html",[0,0.144,351,3.064]],["body/classes/DeleteMealPlannerUseCase.html",[0,0.208,2,0.799,3,0.12,4,0.107,5,0.093,7,2.294,9,0.16,10,0.107,14,0.178,15,0.012,19,0.411,22,0.494,25,0.591,26,0.348,36,0.16,38,0.232,39,1.09,40,2.291,44,0.214,45,0.008,46,0.008,113,1,115,1.619,119,1.619,120,1.619,121,1.032,122,0.432,124,1.746,131,1,132,1.359,135,0.93,136,1.167,137,1.764,146,1.178,159,2.001,160,1.481,161,1.548,165,1.251,184,2.646,187,1.764,188,2.73,189,2.73,191,2.558,192,2.73,193,1.825,200,1.764,202,1.764,209,4.647,211,4.162,225,2.286,351,5.69,401,4.978,402,2.275,403,2.496,404,3.676,405,2.756,406,1.718,407,3.594]],["title/classes/DeleteRecipeUseCase.html",[0,0.144,376,3.064]],["body/classes/DeleteRecipeUseCase.html",[0,0.209,2,0.808,3,0.121,4,0.108,5,0.095,9,0.161,10,0.108,14,0.179,15,0.012,19,0.414,22,0.496,25,0.595,26,0.349,36,0.161,38,0.235,39,1.097,44,0.216,45,0.008,46,0.008,113,1.008,115,1.632,119,1.632,120,1.632,121,1.041,122,0.436,124,1.752,131,1.008,132,1.365,135,0.941,136,1.177,137,1.785,146,1.193,159,2.017,160,1.493,161,1.567,165,1.266,184,2.662,187,1.785,188,2.743,189,2.743,191,2.57,192,2.743,193,1.847,197,4.012,200,1.785,202,1.785,264,2.85,285,4.675,287,3.994,293,2.314,376,5.709,401,5.008,402,2.293,403,2.526,404,3.705,406,1.732,407,3.637,408,7.278]],["title/classes/DeleteUserUseCase.html",[0,0.144,355,3.064]],["body/classes/DeleteUserUseCase.html",[0,0.211,2,0.816,3,0.122,4,0.109,5,0.096,9,0.162,10,0.109,14,0.18,15,0.012,19,0.417,22,0.498,25,0.599,26,0.351,36,0.162,38,0.237,39,1.102,44,0.217,45,0.008,46,0.008,113,1.015,115,1.643,119,1.643,120,1.643,121,1.048,122,0.439,124,1.758,131,1.015,132,1.371,135,0.95,136,1.184,137,1.803,146,1.205,158,2.045,159,2.031,160,1.503,161,1.583,165,1.278,184,2.675,187,1.803,188,2.754,189,2.754,191,2.581,192,2.754,193,1.865,200,1.803,202,1.803,214,4.192,308,5.033,312,2.439,355,5.725,401,5.033,402,2.308,403,2.552,404,3.73,405,2.818,406,1.744,407,3.674]],["title/classes/GetAllIngredientUseCase.html",[0,0.144,357,3.064]],["body/classes/GetAllIngredientUseCase.html",[0,0.216,2,0.851,3,0.128,4,0.114,5,0.1,9,0.148,10,0.114,14,0.142,15,0.012,19,0.429,21,1.939,26,0.357,36,0.167,38,0.247,39,1.125,44,0.171,45,0.008,46,0.008,113,1.043,115,1.688,119,1.688,120,1.688,121,0.825,122,0.345,124,1.782,131,1.043,132,1.393,135,0.99,136,0.933,137,1.879,146,1.255,159,2.086,160,1.544,161,1.65,165,1.332,184,2.73,186,5.136,187,1.879,188,2.799,189,2.799,191,2.622,192,2.977,193,1.944,194,3.458,200,1.879,201,2.164,202,1.879,215,4.223,357,5.791,378,3.864,403,2.66,409,4.822]],["title/classes/GetAllRecipesUseCase.html",[0,0.144,367,3.064]],["body/classes/GetAllRecipesUseCase.html",[0,0.211,2,0.82,3,0.123,4,0.109,5,0.096,9,0.162,10,0.109,14,0.181,15,0.012,19,0.418,22,0.499,25,0.716,26,0.351,36,0.163,38,0.238,39,1.105,44,0.218,45,0.008,46,0.008,113,1.018,115,1.647,119,1.647,120,1.647,121,1.05,122,0.44,124,1.761,131,1.018,132,1.373,135,0.954,136,1.188,137,1.81,146,1.21,158,1.552,159,2.036,160,1.507,161,1.589,165,1.284,184,2.68,187,1.81,188,2.758,189,2.758,191,2.585,192,2.758,193,1.873,200,1.81,202,1.81,216,4.202,222,3.238,264,2.585,287,4.013,293,2.347,367,5.732,378,3.794,379,5.463,403,2.562,405,2.829,410,4.645]],["title/classes/GetIngredientByNameUseCase.html",[0,0.144,361,3.064]],["body/classes/GetIngredientByNameUseCase.html",[0,0.21,2,0.811,3,0.122,4,0.108,5,0.095,9,0.161,10,0.108,14,0.18,15,0.012,19,0.416,21,2.043,22,0.497,26,0.35,36,0.162,38,0.236,39,1.099,44,0.287,45,0.008,46,0.008,113,1.011,115,1.636,119,1.636,120,1.636,121,1.043,122,0.437,124,1.755,131,1.011,132,1.368,135,0.945,136,1.18,137,1.792,146,1.197,159,2.022,160,1.497,161,1.573,165,1.271,184,2.667,187,1.792,188,2.747,189,2.747,191,2.574,192,2.747,193,1.854,194,3.405,200,1.792,201,2.064,202,1.792,361,5.716,378,3.775,403,2.537,405,2.801,411,5.995,412,6.1,413,4.599]],["title/classes/GetIngredientUseCase.html",[0,0.144,359,3.064]],["body/classes/GetIngredientUseCase.html",[0,0.21,2,0.811,3,0.122,4,0.108,5,0.095,9,0.161,10,0.108,14,0.18,15,0.012,19,0.416,21,2.043,22,0.497,25,0.763,26,0.35,36,0.162,38,0.236,39,1.099,44,0.216,45,0.008,46,0.008,113,1.011,115,1.636,119,1.636,120,1.636,121,1.043,122,0.437,124,1.755,131,1.011,132,1.368,135,0.945,136,1.18,137,1.792,146,1.197,159,2.022,160,1.497,161,1.573,165,1.271,184,2.667,187,1.792,188,2.747,189,2.747,191,2.574,192,2.747,193,1.854,194,3.405,200,1.792,201,2.064,202,1.792,216,4.174,359,5.716,378,3.775,403,2.537,405,2.801,414,5.995,415,4.028]],["title/classes/GetMealPlannerUseCase.html",[0,0.144,363,3.064]],["body/classes/GetMealPlannerUseCase.html",[0,0.208,2,0.799,3,0.12,4,0.107,5,0.093,7,2.294,9,0.16,10,0.107,14,0.178,15,0.012,19,0.411,22,0.494,25,0.759,26,0.348,36,0.16,38,0.232,39,1.09,40,2.291,44,0.214,45,0.008,46,0.008,113,1,115,1.619,119,1.619,120,1.619,121,1.032,122,0.432,124,1.746,131,1,132,1.359,135,0.93,136,1.167,137,1.764,146,1.178,159,2.001,160,1.481,161,1.548,165,1.251,184,2.646,187,1.764,188,2.73,189,2.73,191,2.558,192,2.73,193,1.825,200,1.764,202,1.764,209,4.647,211,4.162,216,4.13,225,2.286,363,5.69,378,3.745,403,2.496,405,2.756,415,3.964]],["title/classes/GetRecipeUseCase.html",[0,0.144,365,3.064]],["body/classes/GetRecipeUseCase.html",[0,0.211,2,0.82,3,0.123,4,0.109,5,0.096,9,0.162,10,0.109,14,0.181,15,0.012,19,0.418,22,0.499,25,0.601,26,0.351,36,0.163,38,0.238,39,1.105,44,0.218,45,0.008,46,0.008,113,1.018,115,1.647,119,1.647,120,1.647,121,1.05,122,0.44,124,1.761,131,1.018,132,1.373,135,0.954,136,1.188,137,1.81,146,1.21,159,2.036,160,1.507,161,1.589,165,1.284,184,2.68,187,1.81,188,2.758,189,2.758,191,2.585,192,2.758,193,1.873,200,1.81,202,1.81,264,2.859,285,4.708,287,4.013,293,2.347,365,5.732,378,3.794,403,2.562,404,3.74,405,2.829,406,1.748,416,4.069]],["title/classes/GetUserUseCase.html",[0,0.144,369,3.064]],["body/classes/GetUserUseCase.html",[0,0.197,2,0.74,3,0.111,4,0.099,5,0.087,9,0.154,10,0.099,14,0.169,15,0.012,19,0.391,22,0.501,25,0.561,26,0.364,36,0.152,38,0.215,39,1.049,44,0.203,45,0.008,46,0.008,62,3.873,79,1.194,112,3.691,113,0.95,115,1.752,119,1.538,120,1.538,121,0.981,122,0.411,124,1.797,131,0.95,132,1.317,135,0.861,136,1.263,143,2.7,146,1.493,156,3.075,158,2.051,159,2.166,160,1.603,161,1.435,162,4.477,163,3.075,165,1.584,184,2.545,187,1.634,188,2.646,189,2.646,191,2.48,192,2.646,193,1.691,200,1.634,202,1.634,214,4.055,226,2.87,230,2.554,231,3.923,232,2.78,240,1.882,242,2.554,308,4.788,309,3.673,311,3.673,312,3.023,314,3.673,315,3.673,369,5.564,378,3.603,404,3.491,406,1.632,417,3.673,418,4.194]],["title/interfaces/IAuthService.html",[35,0.46,162,2.545]],["body/interfaces/IAuthService.html",[3,0.142,4,0.126,5,0.111,9,0.159,10,0.126,14,0.158,15,0.012,19,0.366,25,0.779,26,0.324,35,0.85,36,0.178,38,0.275,44,0.19,45,0.009,46,0.009,112,4.338,113,1.117,121,0.918,122,0.384,124,1.559,131,1.117,132,1.45,135,1.102,136,1.038,143,4.974,150,6.452,153,4.848,155,5.902,158,1.953,159,2.234,160,1.654,162,4.706,419,1.957,420,4.699,421,5.365,422,5.365]],["title/interfaces/IBaseRepository.html",[35,0.46,423,2.545]],["body/interfaces/IBaseRepository.html",[3,0.131,4,0.116,5,0.102,9,0.167,10,0.116,14,0.188,15,0.012,19,0.435,22,0.51,25,0.733,26,0.237,35,0.824,36,0.169,38,0.253,44,0.227,45,0.008,46,0.008,113,1.059,121,1.093,122,0.458,131,1.242,132,1.518,135,1.014,136,1.236,190,2.404,199,4.373,239,2.876,242,3.891,380,2.856,419,1.8,423,4.563,424,4.324,425,5.597,426,3.098,427,2.576,428,2.576,429,4.936,430,4.684,431,4.936,432,2.49,433,4.113]],["title/interfaces/ICreateMealPlannerDto.html",[27,2.545,35,0.46]],["body/interfaces/ICreateMealPlannerDto.html",[3,0.138,4,0.123,5,0.108,7,2.291,8,3.17,9,0.123,10,0.123,11,1.441,12,3.154,13,2.576,14,0.244,15,0.012,16,2.411,22,0.575,27,4.026,35,0.727,36,0.138,40,2.332,43,2.987,44,0.291,45,0.009,46,0.009,190,1.574,198,2.427,258,1.781,419,1.899,434,3.563,435,3.206,436,3.012]],["title/interfaces/ICreateRecipeDto.html",[35,0.46,257,2.691]],["body/interfaces/ICreateRecipeDto.html",[3,0.169,4,0.095,5,0.083,9,0.185,10,0.095,11,1.216,12,2.103,13,2.174,14,0.251,15,0.012,16,2.735,22,0.592,25,0.546,35,0.614,36,0.107,43,2.804,44,0.273,45,0.007,46,0.007,122,0.4,158,1.41,173,2.403,180,1.97,181,1.909,190,1.219,198,1.879,256,2.595,257,3.592,258,2.681,259,3.822,260,4.053,261,4.131,262,3.662,264,3.001,272,2.942,419,1.47,434,2.759,435,2.705,436,3.228]],["title/interfaces/ICreateUserDto.html",[35,0.46,300,2.86]],["body/interfaces/ICreateUserDto.html",[3,0.137,4,0.122,5,0.107,9,0.122,10,0.122,11,1.435,14,0.244,15,0.012,22,0.589,25,0.644,35,0.724,36,0.137,44,0.29,45,0.009,46,0.009,158,2.113,167,4.98,173,2.61,180,2.325,181,2.252,190,1.563,198,2.411,299,4.106,300,4.505,301,4.795,304,4.238,419,1.886,434,3.538]],["title/interfaces/IFindAll.html",[35,0.46,437,2.86]],["body/interfaces/IFindAll.html",[3,0.151,4,0.134,5,0.117,9,0.134,10,0.134,15,0.012,19,0.387,26,0.273,35,0.867,36,0.185,38,0.291,45,0.009,46,0.009,113,1.158,131,1.158,132,1.48,135,1.168,239,1.885,242,4.254,380,3.289,419,2.073,426,3.387,432,3.073,437,5.397,438,6.118,439,4.979,440,5.077,441,5.685,442,7.887]],["title/interfaces/IIngredientDomainModel.html",[35,0.46,443,2.545]],["body/interfaces/IIngredientDomainModel.html",[3,0.138,4,0.122,5,0.107,9,0.195,10,0.122,11,1.439,14,0.244,15,0.012,21,2.053,22,0.59,25,0.71,35,0.726,36,0.138,44,0.29,45,0.009,46,0.009,122,0.473,173,2.532,201,2.331,406,2.244,419,1.894,443,4.02,444,4.549,445,3.555,446,4.967]],["title/interfaces/IIngredientService.html",[35,0.46,194,1.876]],["body/interfaces/IIngredientService.html",[3,0.099,4,0.088,5,0.077,9,0.166,10,0.088,14,0.196,15,0.012,19,0.48,21,2.137,22,0.551,25,0.813,26,0.253,35,0.733,36,0.14,38,0.191,44,0.272,45,0.007,46,0.007,113,0.875,121,1.14,122,0.478,124,1.221,131,1.313,132,1.559,135,0.765,136,1.361,159,2.724,160,2.029,190,2.016,194,2.993,201,1.671,239,2.657,380,2.154,402,2.513,419,1.358,427,2.127,428,2.127,432,2.056,440,4.293,447,3.261,448,3.868,449,2.281,450,3.723,451,3.723,452,2.46,453,3.723,454,3.868,455,3.723,456,2.91,457,3.723,458,3.723]],["title/interfaces/IMealPlannerDomainModel.html",[35,0.46,459,2.691]],["body/interfaces/IMealPlannerDomainModel.html",[3,0.123,4,0.109,5,0.096,7,2.319,9,0.109,10,0.109,11,1.339,12,3.087,13,2.393,14,0.243,15,0.012,16,2.24,22,0.572,25,0.673,26,0.223,35,0.805,36,0.163,38,0.238,40,2.389,43,2.953,44,0.277,45,0.008,46,0.008,122,0.44,159,2.036,160,1.507,258,1.589,406,2.167,419,1.694,435,2.978,436,2.688,443,2.829,445,3.179,459,4.712,460,4.069,461,2.991,462,3.406,463,2.829,464,5.379]],["title/interfaces/IMealPlannerService.html",[35,0.46,211,2.305]],["body/interfaces/IMealPlannerService.html",[3,0.098,4,0.087,5,0.076,7,2.379,9,0.165,10,0.087,14,0.196,15,0.012,19,0.453,22,0.55,25,0.82,26,0.252,35,0.731,36,0.139,38,0.189,40,2.451,44,0.236,45,0.007,46,0.007,113,0.87,121,1.136,122,0.476,124,1.214,131,1.27,132,1.528,135,0.758,136,1.357,159,2.678,160,1.999,190,2.009,211,3.665,217,3.665,225,1.865,239,2.652,380,2.137,402,2.504,419,1.347,427,2.115,428,2.115,432,2.044,449,2.273,452,2.446,456,2.894,461,2.377,465,6.147,466,2.707,467,3.693,468,2.894,469,3.693,470,3.693,471,3.693,472,3.693]],["title/interfaces/IRecipeDomainModel.html",[35,0.46,473,3.064]],["body/interfaces/IRecipeDomainModel.html",[3,0.16,4,0.086,5,0.075,9,0.18,10,0.086,11,1.132,12,2.281,13,2.359,14,0.249,15,0.012,16,2.724,22,0.586,25,0.683,26,0.249,35,0.726,36,0.137,38,0.187,43,2.724,44,0.265,45,0.007,46,0.007,122,0.52,153,2.217,158,1.313,159,1.722,160,1.274,173,2.314,180,1.834,181,1.776,258,2.697,259,3.68,260,3.938,261,4.026,262,3.526,264,3.004,272,2.738,406,1.987,419,1.328,435,2.518,436,3.502,443,2.217,445,2.491,462,2.668,463,3.162,464,5.302,473,4.839,474,3.188,475,3.188,476,5.193]],["title/interfaces/IRecipeService.html",[35,0.46,287,2.204]],["body/interfaces/IRecipeService.html",[3,0.096,4,0.085,5,0.075,9,0.171,10,0.085,14,0.205,15,0.012,19,0.475,22,0.564,25,0.83,26,0.249,35,0.725,36,0.137,38,0.186,44,0.247,45,0.007,46,0.007,113,0.859,121,1.192,122,0.499,124,1.199,131,1.306,132,1.554,135,0.745,136,1.402,158,1.31,159,2.713,160,2.021,190,1.993,222,2.732,239,2.643,264,3.063,287,3.475,293,1.833,380,2.099,402,2.484,419,1.323,427,2.089,428,2.089,432,2.568,449,2.255,452,2.415,456,2.858,468,2.858,477,3.178,478,3.798,479,3.628,480,3.628,481,4.114,482,3.628,483,3.628,484,3.628,485,3.628]],["title/interfaces/IUpdateIngredientDto.html",[35,0.46,486,2.86]],["body/interfaces/IUpdateIngredientDto.html",[3,0.135,4,0.12,5,0.105,9,0.194,10,0.12,11,1.423,14,0.243,15,0.012,16,2.767,21,2.046,22,0.58,35,0.718,36,0.135,44,0.289,45,0.009,46,0.009,122,0.592,171,3.491,173,2.599,180,2.305,181,2.233,198,2.378,419,1.861,446,5.58,449,1.745,486,4.466,487,3.74]],["title/interfaces/IUpdateMealPlannerDto.html",[35,0.46,51,2.86]],["body/interfaces/IUpdateMealPlannerDto.html",[3,0.137,4,0.121,5,0.107,7,2.286,8,3.142,9,0.121,10,0.121,11,1.433,12,3.081,13,2.561,14,0.244,15,0.012,16,2.397,22,0.574,35,0.567,36,0.137,40,2.327,43,3.047,44,0.285,45,0.009,46,0.009,51,4.498,122,0.576,198,2.405,258,1.765,419,1.882,435,3.187,436,2.985,449,1.765,487,3.782]],["title/interfaces/IUpdateRecipesDto.html",[35,0.46,488,2.691]],["body/interfaces/IUpdateRecipesDto.html",[3,0.171,4,0.097,5,0.085,9,0.185,10,0.097,11,1.231,12,2.129,13,2.201,14,0.25,15,0.012,16,2.75,22,0.59,25,0.632,35,0.621,36,0.109,43,2.817,44,0.247,45,0.007,46,0.007,122,0.603,173,2.419,180,1.995,181,1.932,198,1.913,222,2.164,258,2.692,259,3.668,260,4.073,261,4.149,264,2.974,272,2.978,419,1.497,435,2.739,436,3.268,449,1.404,487,3.008,488,3.636,489,3.594]],["title/interfaces/IUpdateRepository.html",[35,0.46,490,2.691]],["body/interfaces/IUpdateRepository.html",[3,0.14,4,0.125,5,0.109,9,0.157,10,0.125,14,0.156,15,0.012,19,0.36,22,0.524,25,0.653,26,0.254,35,0.846,36,0.177,38,0.271,44,0.188,45,0.009,46,0.009,113,1.107,121,0.905,122,0.379,131,1.107,132,1.442,135,1.087,136,1.292,239,2.882,380,3.061,406,1.901,419,1.929,426,3.239,449,2.845,490,4.949,491,4.634,492,4.896,493,5.29,494,5.304]],["title/interfaces/IUseCase.html",[35,0.46,191,1.476]],["body/interfaces/IUseCase.html",[3,0.149,4,0.133,5,0.116,9,0.133,10,0.133,14,0.166,15,0.012,19,0.384,26,0.27,35,0.864,36,0.184,38,0.289,44,0.2,45,0.009,46,0.009,113,1.151,121,0.963,122,0.403,131,1.151,132,1.475,135,1.156,136,1.089,188,2.962,189,2.616,191,2.776,192,2.962,318,6.081,341,6.081,344,6.081,419,2.053,495,6.081,496,4.93,497,5.629]],["title/interfaces/IUserDomainModel.html",[35,0.46,153,2.545]],["body/interfaces/IUserDomainModel.html",[3,0.118,4,0.105,5,0.092,7,1.987,9,0.105,10,0.105,11,1.3,14,0.244,15,0.012,22,0.587,25,0.784,26,0.214,35,0.791,36,0.158,38,0.228,40,1.916,44,0.28,45,0.008,46,0.008,122,0.515,153,4.38,158,2.12,159,1.978,160,1.464,167,4.804,173,2.487,180,2.106,181,2.041,301,4.568,304,3.84,406,2.135,419,1.622,445,3.043,459,2.863,461,2.863,463,2.708,498,3.895,499,5.133,500,5.965]],["title/interfaces/IUserService.html",[35,0.46,214,2.305]],["body/interfaces/IUserService.html",[3,0.102,4,0.09,5,0.079,7,1.867,9,0.168,10,0.09,14,0.199,15,0.012,19,0.46,22,0.554,25,0.808,26,0.299,35,0.743,36,0.143,38,0.197,40,1.924,44,0.24,45,0.007,46,0.007,113,0.893,121,1.156,122,0.484,124,1.247,131,1.283,132,1.538,135,0.788,136,1.377,158,2.175,159,2.697,160,2.012,190,2.043,214,3.727,217,3.727,239,2.514,262,3.147,312,2.022,380,2.219,402,2.546,419,1.399,427,2.172,428,2.172,432,2.1,452,2.512,459,4.582,468,2.972,501,3.359,502,4.567,503,3.046,504,3.835,505,4.72,506,3.835,507,3.835,508,3.835,509,3.835]],["title/modules/InfrastructureModule.html",[54,2.545,61,2.86]],["body/modules/InfrastructureModule.html",[0,0.212,3,0.124,4,0.11,5,0.097,9,0.11,15,0.012,26,0.376,36,0.163,38,0.24,45,0.008,46,0.008,54,4.471,56,3.015,57,3.975,61,5.921,63,4.526,64,3.433,65,3.433,68,4.903,69,3.433,71,4.903,79,1.333,89,5.408,212,4.245,213,4.862,337,5.117,510,4.102,511,4.102,512,4.102,513,4.102,514,5.363,515,5.409,516,4.683,517,5.408,518,4.683,519,4.102,520,4.102,521,3.433,522,4.683,523,4.102]],["title/classes/IngredientDomainModel.html",[0,0.144,201,1.876]],["body/classes/IngredientDomainModel.html",[0,0.256,2,0.856,3,0.128,4,0.114,5,0.1,9,0.19,10,0.114,11,1.378,14,0.241,15,0.012,19,0.507,21,2.027,22,0.575,25,0.688,26,0.233,36,0.167,38,0.249,39,1.128,44,0.281,45,0.008,46,0.008,122,0.453,173,2.33,201,3.552,406,2.119,443,4.533,446,4.809,463,2.955,524,6.761,525,3.321,526,4.852,527,4.852,528,4.852,529,4.852,530,4.852]],["title/classes/IngredientDto.html",[0,0.144,531,3.064]],["body/classes/IngredientDto.html",[0,0.263,2,0.703,3,0.146,4,0.094,5,0.082,9,0.162,10,0.094,11,1.206,12,2.815,13,2.676,14,0.241,15,0.012,16,2.724,17,2.309,18,3.974,19,0.377,21,1.833,22,0.569,25,0.541,26,0.266,28,1.552,29,3.201,32,4.007,33,3.561,34,1.931,35,0.438,36,0.146,38,0.284,39,0.888,41,3.201,42,2.018,43,2.318,44,0.225,45,0.007,46,0.007,48,4.092,52,5.429,173,1.834,180,1.406,181,1.362,198,2.579,256,2.564,258,2.175,259,2.917,260,3.351,261,3.351,264,1.954,268,4.055,272,2.1,488,4.422,531,5.476,532,3.982,533,3.982,534,4.35]],["title/classes/IngredientModel.html",[0,0.144,535,2.86]],["body/classes/IngredientModel.html",[0,0.266,2,0.951,3,0.143,4,0.127,5,0.111,9,0.182,10,0.127,11,1.473,14,0.228,15,0.012,19,0.527,21,1.996,22,0.527,25,0.527,26,0.259,36,0.179,38,0.276,44,0.262,45,0.009,46,0.009,122,0.484,160,1.658,161,1.844,173,2.241,201,3.746,406,1.924,446,3.689,535,5.297,536,4.721,537,3.58,538,3.753,539,5.39,540,4.721,541,5.39,542,5.39]],["title/classes/IngredientMongo.html",[0,0.144,543,2.305]],["body/classes/IngredientMongo.html",[0,0.237,2,0.705,3,0.106,4,0.094,5,0.083,9,0.181,10,0.094,11,1.209,14,0.244,15,0.012,17,2.872,19,0.469,21,1.973,22,0.576,25,0.543,26,0.306,36,0.191,38,0.284,42,2.932,44,0.265,45,0.007,46,0.007,138,1.938,164,2.572,173,2.281,180,1.958,181,1.897,201,3.087,224,2.572,258,1.367,406,1.958,535,4.707,537,3.088,538,3.335,540,3.5,543,4.125,544,2.929,545,5.043,546,2.929,547,4.065,548,3.996,549,5.482,550,3.996,551,4.857,552,3.996,553,5.297,554,4.189,555,2.929,556,2.019,557,3.795,558,2.929,559,2.107,560,2.929,561,2.929,562,2.929,563,2.929,564,3.5,565,4.404]],["title/injectables/IngredientMongoService.html",[134,1.057,566,2.691]],["body/injectables/IngredientMongoService.html",[0,0.172,3,0.091,4,0.081,5,0.071,9,0.168,10,0.081,14,0.201,15,0.012,19,0.486,21,2.134,22,0.544,25,0.762,26,0.328,36,0.132,38,0.177,39,0.803,44,0.272,45,0.007,46,0.007,79,0.983,113,0.829,115,1.341,119,1.341,120,1.341,121,1.169,122,0.49,124,1.157,131,1.292,132,1.543,134,1.264,135,0.709,136,1.379,137,1.346,146,1.78,148,1.441,165,0.954,190,1.948,194,2.638,239,1.658,402,2.428,426,2.424,427,2.016,428,2.016,432,1.948,440,4.147,448,3.665,449,2.204,452,2.331,454,3.665,456,2.758,494,3.97,543,4.232,566,4.589,567,3.024,568,3.665,569,3.453,570,4.847,571,3.453,572,3.453,573,3.453,574,5.643,575,3.453,576,3.453,577,3.453,578,3.453,579,3.453,580,2.742,581,3.453,582,3.453,583,3.453,584,3.453,585,3.453]],["title/injectables/IngredientRepository.html",[134,1.057,570,2.691]],["body/injectables/IngredientRepository.html",[0,0.215,3,0.086,4,0.076,5,0.067,9,0.164,10,0.076,14,0.196,15,0.012,19,0.475,21,2.097,22,0.537,25,0.682,26,0.355,35,0.356,36,0.126,38,0.166,39,1.004,42,1.181,44,0.279,45,0.006,46,0.006,79,0.922,113,0.791,115,1.519,119,1.279,120,1.279,121,1.139,122,0.477,131,1.272,132,1.589,134,1.206,135,0.665,136,1.348,146,1.735,148,1.352,160,1.635,165,0.895,190,1.889,232,1.57,239,2.581,240,1.453,258,2.138,406,1.358,423,3.449,426,3.494,427,1.923,428,1.923,430,3.497,432,2.716,433,3.071,437,3.876,440,4.023,448,3.497,449,2.138,454,3.497,490,3.646,492,3.497,543,4.164,556,1.636,559,1.707,565,2.571,570,4.486,580,2.571,586,2.836,587,2.374,588,3.238,589,3.238,590,3.238,591,3.238,592,3.238,593,3.238,594,2.374,595,2.836,596,2.836,597,2.571,598,3.238,599,2.374,600,2.571,601,2.571,602,3.238,603,2.836]],["title/injectables/IngredientService.html",[134,1.057,212,2.111]],["body/injectables/IngredientService.html",[0,0.209,3,0.121,4,0.107,5,0.094,9,0.178,10,0.107,14,0.214,15,0.012,19,0.515,21,2.113,22,0.53,25,0.74,26,0.291,35,0.667,36,0.161,38,0.234,44,0.276,45,0.008,46,0.008,79,1.299,113,1.006,121,1.243,122,0.521,124,1.404,131,1.254,132,1.419,134,1.534,148,1.904,190,2.061,212,3.671,239,1.513,402,2.287,427,2.446,428,1.839,432,1.778,440,4.389,448,4.448,449,2.332,452,2.127,454,3.344,456,2.516,494,3.623,537,3.306,538,3.669,543,4.008,566,5.255,574,5.314,604,3.996,605,4.562,606,4.562,607,4.562,608,4.562,609,4.562,610,4.562]],["title/classes/Ingredients.html",[0,0.144,258,1.43]],["body/classes/Ingredients.html",[0,0.261,2,0.677,3,0.143,4,0.09,5,0.079,6,3.794,9,0.159,10,0.09,11,1.175,12,2.782,13,2.633,14,0.241,15,0.012,16,2.596,17,2.249,18,3.604,19,0.367,21,1.658,22,0.571,25,0.609,26,0.259,28,1.494,29,3.118,30,4.567,31,5.131,32,3.974,34,1.86,35,0.422,36,0.143,38,0.276,39,0.865,41,3.604,42,2.272,43,2.272,44,0.221,45,0.007,46,0.007,158,0.969,173,1.787,180,1.354,181,1.312,182,4.279,255,4.567,256,2.469,257,4.35,258,2.757,259,2.841,260,3.284,261,3.284,262,2.722,264,1.903,268,3.95,272,2.022,279,3.359,281,3.359,282,4.72,283,4.72,611,3.835,612,3.835,613,3.835]],["title/classes/JwtErrorExceptionFilter.html",[0,0.144,74,3.064]],["body/classes/JwtErrorExceptionFilter.html",[0,0.258,2,0.873,3,0.131,4,0.117,5,0.102,9,0.167,10,0.117,14,0.146,15,0.012,19,0.337,26,0.341,36,0.169,38,0.254,39,1.139,44,0.175,45,0.008,46,0.008,74,5.832,76,5.081,79,1.408,113,1.061,121,0.846,122,0.354,129,3.929,131,0.82,136,1.237,138,3.766,343,5.081,346,3.929,614,5.081,615,3.929,616,6.568,617,6.212,618,5.604,619,7.766,620,6.568,621,6.802,622,4.333,623,5.081,624,6.212,625,4.333,626,3.929,627,4.947,628,4.947,629,4.333,630,4.333,631,5.604,632,4.333,633,5.604,634,4.333,635,5.604,636,4.333]],["title/controllers/KitchenRecipesController.html",[70,3.064,637,3.064]],["body/controllers/KitchenRecipesController.html",[0,0.084,3,0.037,4,0.033,5,0.029,7,2.085,9,0.162,10,0.033,14,0.202,15,0.012,17,2.87,19,0.468,21,1.852,22,0.561,25,0.813,26,0.33,36,0.065,37,2.981,38,0.073,40,2.12,44,0.26,45,0.003,46,0.003,53,2.981,62,2.63,69,1.038,70,3.193,78,1.24,79,0.403,109,1.038,112,0.911,113,0.406,115,0.657,119,0.38,120,0.657,121,1.158,122,0.485,124,1.008,131,1.296,132,1.539,135,0.291,136,1.45,143,1.576,146,1.79,156,1.795,157,2.083,158,1.919,160,1.933,164,0.911,165,1.413,170,4.15,190,1.635,198,3.047,212,2.408,213,2.759,217,3.244,222,2.514,232,2.48,240,0.635,258,1.631,264,2.856,298,3.193,316,3.495,337,2.904,382,1.24,402,1.927,449,1.631,515,3.069,534,2.981,535,0.969,637,2.826,638,6.102,639,1.24,640,2.145,641,3.236,642,3.236,643,2.449,644,2.449,645,3.236,646,3.236,647,2.449,648,3.236,649,3.236,650,3.855,651,3.236,652,3.236,653,3.236,654,2.449,655,3.236,656,2.834,657,3.236,658,1.416,659,1.416,660,1.416,661,1.416,662,1.416,663,5.408,664,1.416,665,1.416,666,1.416,667,1.416,668,1.416,669,2.449,670,1.416,671,1.416,672,1.416,673,1.416,674,1.416,675,1.416,676,1.416,677,1.416,678,1.416,679,1.416,680,1.416,681,1.416,682,1.416,683,1.416,684,2.449,685,2.449,686,1.416,687,1.416,688,1.416,689,1.416,690,1.416,691,1.416,692,1.416,693,1.416,694,1.416,695,1.416,696,1.416,697,1.416,698,2.449,699,1.416,700,1.416,701,3.193,702,1.416,703,1.416,704,1.416,705,1.416,706,1.416,707,1.416,708,1.416,709,1.416,710,1.416,711,3.236,712,2.449,713,2.449,714,1.416,715,3.236,716,1.416,717,0.969,718,1.416,719,1.416,720,0.969,721,1.416,722,4.768,723,1.416,724,1.416,725,1.416,726,1.416,727,1.416,728,4.579,729,1.416,730,1.416,731,1.416,732,6.66,733,2.449,734,1.416,735,1.416,736,1.416,737,5.882,738,1.416,739,6.247,740,1.416,741,1.416,742,1.416,743,1.416,744,1.416,745,1.416,746,1.416,747,1.416,748,1.416,749,1.416,750,1.416,751,1.416,752,1.416,753,1.416,754,1.416,755,1.416,756,1.416,757,1.416,758,1.416,759,1.416,760,1.416,761,1.416,762,1.416,763,1.416,764,1.416,765,1.416,766,1.416,767,1.416,768,1.416,769,1.416,770,1.416,771,1.416,772,1.416,773,1.416,774,1.416,775,1.416]],["title/classes/MealPlannerDomainModel.html",[0,0.144,225,2.111]],["body/classes/MealPlannerDomainModel.html",[0,0.247,2,0.785,3,0.118,4,0.105,5,0.092,7,2.303,9,0.105,10,0.105,11,1.3,12,3.022,13,2.324,14,0.239,15,0.012,16,2.175,19,0.49,22,0.553,25,0.659,26,0.286,36,0.158,38,0.228,39,1.081,40,2.373,43,2.877,44,0.274,45,0.008,46,0.008,122,0.427,159,1.978,160,1.652,201,1.996,225,3.633,258,1.521,406,2.048,435,2.156,436,2.573,459,4.63,461,4.971,462,3.26,463,2.708,525,3.043,776,6.57,777,3.895,778,3.895,779,3.895,780,3.895,781,4.447,782,5.224]],["title/classes/MealPlannerModel.html",[0,0.144,717,2.86]],["body/classes/MealPlannerModel.html",[0,0.264,2,0.933,3,0.14,4,0.125,5,0.109,7,2.237,9,0.125,10,0.125,11,1.456,12,2.758,14,0.233,15,0.012,19,0.524,22,0.499,25,0.518,26,0.254,36,0.177,38,0.271,40,2.305,43,2.67,44,0.26,45,0.009,46,0.009,122,0.479,160,1.639,161,1.81,225,4.201,406,1.901,435,2.565,537,3.549,538,3.728,717,5.261,783,4.634,784,4.634,785,5.29,786,5.29,787,5.29,788,5.29]],["title/classes/MealPlannerMongo.html",[0,0.144,789,2.111]],["body/classes/MealPlannerMongo.html",[0,0.229,2,0.656,3,0.098,4,0.088,5,0.077,7,2.253,9,0.157,10,0.088,11,1.149,12,2.754,13,2.054,14,0.245,15,0.012,16,2.233,17,2.782,19,0.454,22,0.556,25,0.599,26,0.32,36,0.186,38,0.27,40,2.303,42,2.8,43,2.233,44,0.259,45,0.007,46,0.007,122,0.378,138,1.802,164,2.393,180,2.163,181,2.095,224,2.393,225,3.366,258,1.272,406,1.743,435,1.802,537,2.969,538,3.231,543,2.05,545,4.885,546,3.864,547,3.864,549,5.356,553,5.157,554,3.21,555,2.725,556,1.878,557,3.607,558,2.725,559,1.96,560,2.725,561,2.725,562,3.864,717,4.56,789,3.691,790,2.725,791,2.725,792,3.717,793,3.717,794,3.717,795,3.717,796,3.255,797,3.717,798,4.616,799,2.952,800,2.952,801,3.864,802,3.255,803,4.863]],["title/injectables/MealPlannerMongoService.html",[134,1.057,804,2.691]],["body/injectables/MealPlannerMongoService.html",[0,0.17,3,0.09,4,0.08,5,0.07,7,2.371,9,0.167,10,0.08,14,0.2,15,0.012,19,0.464,22,0.542,25,0.798,26,0.327,36,0.131,38,0.175,39,0.796,40,2.443,44,0.241,45,0.007,46,0.007,79,0.971,113,0.822,115,1.329,119,1.329,120,1.329,121,1.164,122,0.488,124,1.147,131,1.244,132,1.507,134,1.253,135,0.701,136,1.373,137,1.329,146,1.668,148,1.424,165,0.943,190,1.937,211,3.22,217,3.753,239,1.643,402,2.414,426,2.403,427,1.998,428,1.998,432,1.931,449,2.328,452,2.311,456,1.882,466,2.501,468,2.734,521,2.501,568,3.633,789,3.864,804,4.57,805,6.218,806,3.412,807,4.831,808,3.412,809,3.412,810,3.412,811,3.412,812,3.412,813,3.412,814,3.412,815,2.988,816,2.709,817,2.501,818,3.412,819,3.412,820,3.412,821,3.412]],["title/injectables/MealPlannerRepository.html",[134,1.057,807,2.691]],["body/injectables/MealPlannerRepository.html",[0,0.215,3,0.086,4,0.077,5,0.067,7,2.362,9,0.164,10,0.077,14,0.197,15,0.012,19,0.455,22,0.537,25,0.752,26,0.347,35,0.358,36,0.127,38,0.167,39,0.913,40,2.434,42,1.188,44,0.237,45,0.006,46,0.006,79,0.927,113,0.794,115,1.524,119,1.285,120,1.285,121,1.142,122,0.478,131,1.228,132,1.566,134,1.211,135,0.669,136,1.351,146,1.631,148,1.359,160,1.639,165,0.9,190,1.895,232,1.579,239,2.584,240,1.462,402,2.362,406,1.784,423,3.461,426,3.501,427,1.931,428,1.931,430,3.512,432,1.867,433,3.084,449,2.144,490,3.658,492,3.512,556,1.645,559,1.717,587,2.387,594,2.387,597,2.586,599,2.387,600,2.586,601,2.586,789,3.819,803,2.586,807,4.495,816,2.586,817,2.387,822,6.116,823,2.852,824,3.256,825,3.256,826,3.804,827,3.256,828,3.256,829,3.256,830,3.256,831,2.586]],["title/injectables/MealPlannerService.html",[134,1.057,337,2.545]],["body/injectables/MealPlannerService.html",[0,0.208,3,0.121,4,0.107,5,0.094,7,2.347,9,0.178,10,0.107,14,0.214,15,0.011,19,0.495,22,0.53,25,0.776,26,0.291,35,0.666,36,0.16,38,0.233,40,2.419,44,0.258,45,0.008,46,0.008,79,1.296,113,1.004,121,1.242,122,0.52,124,1.402,131,1.204,132,1.362,134,1.532,148,1.901,190,2.059,217,3.342,239,1.51,337,4.422,402,2.567,427,2.443,428,1.836,432,1.774,449,2.33,452,2.123,456,2.511,466,3.338,468,2.511,521,3.338,537,3.303,538,3.521,789,3.668,804,5.188,832,3.988,833,4.553,834,4.553,835,4.553,836,4.553,837,4.553]],["title/modules/MongoModule.html",[54,2.545,514,2.86]],["body/modules/MongoModule.html",[0,0.127,3,0.098,4,0.087,5,0.076,15,0.012,26,0.397,36,0.098,44,0.236,45,0.007,46,0.007,54,3.199,56,2.381,57,3.381,63,3.85,64,2.712,65,2.712,68,4.171,69,2.712,71,2.937,79,1.053,107,3.24,514,5.912,517,4.6,519,3.24,520,3.24,521,2.712,523,3.24,543,2.04,554,4.049,556,1.868,563,3.85,566,5.202,570,5.202,580,2.937,789,1.868,800,2.937,801,3.85,804,5.202,807,5.202,815,3.24,816,2.937,817,2.712,838,3.24,839,3.24,840,3.24,841,5.202,842,5.202,843,5.202,844,5.202,845,5.135,846,3.699,847,3.699,848,3.699,849,3.699,850,3.699,851,3.699,852,3.699,853,2.253,854,3.85,855,3.699,856,2.253,857,3.85,858,2.937,859,3.699,860,3.699,861,3.699,862,3.699,863,3.24,864,3.699]],["title/classes/MongoServerErrorExceptionFilter.html",[0,0.144,88,3.064]],["body/classes/MongoServerErrorExceptionFilter.html",[0,0.256,2,0.856,3,0.128,4,0.114,5,0.1,9,0.175,10,0.114,14,0.143,15,0.012,19,0.331,26,0.337,36,0.167,38,0.249,39,1.128,44,0.172,45,0.008,46,0.008,79,1.381,88,5.801,113,1.047,121,0.83,122,0.348,129,3.854,131,0.804,136,1.222,138,3.743,343,5.018,346,3.854,614,5.018,615,3.854,616,6.52,617,6.155,618,5.535,620,6.931,621,6.761,622,4.25,623,5.018,624,6.761,625,4.25,626,3.854,629,4.25,630,4.25,631,5.535,632,4.25,633,5.535,634,4.25,635,5.535,636,4.25,865,5.535,866,5.018,867,5.535,868,7.719,869,3.854,870,4.852]],["title/injectables/MongooseConfigService.html",[134,1.057,845,2.86]],["body/injectables/MongooseConfigService.html",[0,0.212,3,0.124,4,0.11,5,0.097,9,0.145,10,0.11,11,1.344,14,0.182,15,0.012,19,0.47,22,0.318,26,0.331,36,0.163,38,0.24,39,0.99,44,0.245,45,0.008,46,0.008,54,3.755,79,1.331,81,3.712,113,1.022,115,1.654,119,1.654,120,1.654,121,0.799,122,0.335,124,1.697,131,1.022,134,1.559,136,0.904,137,1.821,146,1.217,148,1.951,165,1.291,181,2.679,222,2.464,556,2.361,559,3.868,640,4.094,845,5.36,871,4.094,872,7.336,873,7.336,874,4.674,875,8.106,876,4.674,877,4.674,878,6.166,879,7.336,880,6.166,881,4.094,882,3.712,883,6.166,884,4.674,885,6.9,886,4.674,887,4.674,888,4.674,889,4.674,890,4.674]],["title/classes/RecipeDomainModel.html",[0,0.144,293,2.111]],["body/classes/RecipeDomainModel.html",[0,0.225,2,0.629,3,0.158,4,0.084,5,0.074,9,0.175,10,0.084,11,1.116,12,1.929,13,1.994,14,0.248,15,0.012,16,2.525,19,0.535,22,0.575,25,0.677,26,0.287,36,0.135,38,0.183,39,0.961,43,2.629,44,0.256,45,0.007,46,0.007,122,0.516,158,1.294,159,1.697,160,1.605,173,2.168,180,1.807,181,1.751,201,1.601,258,2.54,259,3.448,260,3.8,261,3.914,262,3.303,264,2.998,272,2.698,293,3.303,312,1.88,406,1.862,435,1.729,436,2.961,462,2.614,463,2.172,473,4.794,475,3.123,525,2.44,782,4.482,891,6.958,892,3.566,893,3.566,894,3.566,895,3.566,896,3.566,897,3.566,898,3.566,899,3.566,900,3.566,901,3.566,902,3.566,903,5.117]],["title/classes/RecipeMongo.html",[0,0.144,853,2.545]],["body/classes/RecipeMongo.html",[0,0.2,2,0.495,3,0.138,4,0.066,5,0.058,9,0.162,10,0.066,11,0.934,12,1.958,13,2.025,14,0.25,15,0.012,16,2.583,17,3.092,19,0.505,22,0.582,25,0.569,26,0.279,36,0.166,38,0.22,42,2.972,43,2.408,44,0.234,45,0.006,46,0.006,122,0.473,138,1.36,158,1.083,164,1.806,173,1.928,180,1.513,181,1.465,222,1.479,224,1.806,258,2.143,259,3.066,260,3.482,261,3.482,262,2.938,264,2.878,272,2.258,293,3.741,406,1.656,435,1.36,537,2.52,538,3.591,543,1.547,545,5.429,546,3.809,547,3.14,549,5.908,553,5.521,554,2.609,555,2.056,556,1.417,557,2.931,558,2.056,559,1.479,560,2.056,561,2.056,562,3.14,720,3.98,796,2.457,798,3.752,799,2.228,800,2.228,853,4.021,854,3.809,904,2.056,905,2.805,906,2.805,907,2.805,908,2.805,909,2.805,910,2.805,911,2.805,912,2.805,913,2.805,914,2.805,915,2.457,916,4.619]],["title/injectables/RecipeMongoService.html",[134,1.057,841,2.691]],["body/injectables/RecipeMongoService.html",[0,0.169,3,0.089,4,0.079,5,0.07,9,0.172,10,0.079,14,0.208,15,0.012,19,0.482,22,0.558,25,0.817,26,0.325,35,0.54,36,0.13,38,0.173,39,0.789,44,0.251,45,0.007,46,0.007,79,0.96,113,0.814,115,1.318,119,1.318,120,1.318,121,1.209,122,0.507,124,1.137,131,1.285,132,1.537,134,1.242,135,0.692,136,1.411,137,1.314,146,1.763,148,1.407,158,1.61,165,0.932,190,1.926,222,3.359,239,1.629,264,3.051,287,3.057,402,2.401,426,2.383,427,1.981,428,1.981,432,2.482,449,2.18,452,2.291,456,2.71,468,2.71,478,3.602,481,3.902,841,4.551,842,4.815,853,4.645,917,2.953,918,3.371,919,3.371,920,3.371,921,3.371,922,3.371,923,3.371,924,3.371,925,3.371,926,2.953,927,3.371,928,3.371,929,3.371,930,3.371,931,3.371,932,3.371]],["title/injectables/RecipeRepository.html",[134,1.057,842,2.691]],["body/injectables/RecipeRepository.html",[0,0.207,3,0.08,4,0.071,5,0.062,9,0.166,10,0.071,14,0.2,15,0.012,19,0.479,22,0.548,25,0.775,26,0.347,35,0.331,36,0.12,38,0.154,39,0.968,42,1.097,44,0.241,45,0.006,46,0.006,79,0.856,113,0.749,115,1.454,119,1.211,120,1.211,121,1.16,122,0.486,131,1.286,132,1.601,134,1.142,135,0.618,136,1.361,146,1.766,148,1.256,158,1.523,160,1.585,165,0.831,190,1.822,222,3.178,232,1.459,239,2.538,240,1.35,262,3.044,264,3.02,402,2.271,406,1.716,423,3.302,426,3.411,427,1.821,428,1.821,430,3.311,432,2.643,433,2.907,437,3.71,440,3.88,449,2.062,478,3.311,490,3.49,492,3.311,556,1.519,559,1.586,587,2.205,594,2.205,595,2.635,596,2.635,597,2.389,599,2.205,600,2.389,601,2.389,826,3.586,831,2.389,842,4.367,853,4.508,916,2.389,933,2.635,934,3.008,935,3.008,936,3.008,937,3.008,938,4.516,939,3.008,940,3.008,941,3.008,942,2.635,943,3.008,944,4.516]],["title/injectables/RecipeService.html",[134,1.057,515,2.691]],["body/injectables/RecipeService.html",[0,0.206,3,0.118,4,0.105,5,0.092,9,0.182,10,0.105,14,0.221,15,0.012,19,0.512,22,0.547,25,0.804,26,0.288,35,0.659,36,0.159,38,0.229,44,0.267,45,0.008,46,0.008,79,1.273,113,0.993,121,1.286,122,0.539,124,1.385,131,1.246,132,1.41,134,1.514,148,1.867,158,1.514,190,2.041,222,3.157,239,1.483,264,3.016,402,2.544,427,2.414,428,1.803,432,2.333,449,2.309,452,2.085,456,2.467,468,2.467,478,4.39,481,3.552,515,4.641,537,3.273,538,3.644,841,5.234,853,4.39,945,3.918,946,4.473,947,4.473,948,4.473,949,4.473,950,4.473,951,4.473]],["title/classes/RecipesModel.html",[0,0.144,720,2.86]],["body/classes/RecipesModel.html",[0,0.21,2,0.811,3,0.162,4,0.108,5,0.095,9,0.172,10,0.108,11,1.33,14,0.243,15,0.011,16,1.677,19,0.562,22,0.542,25,0.597,26,0.221,35,0.671,36,0.162,38,0.236,43,2.496,44,0.243,45,0.008,46,0.008,122,0.559,158,1.162,159,2.022,160,1.497,161,1.573,173,2.022,180,1.624,181,1.573,258,2.342,259,3.216,260,3.609,261,3.609,262,3.081,264,2.959,272,2.425,293,4.279,406,1.737,435,2.23,537,3.319,538,4.003,720,4.989,952,4.028,953,4.599,954,4.599,955,4.599,956,4.599,957,4.599,958,4.599,959,4.599,960,4.599,961,4.599,962,4.599]],["title/classes/UpdateIngredientDto.html",[0,0.144,701,3.064]],["body/classes/UpdateIngredientDto.html",[0,0.265,2,0.851,3,0.128,4,0.114,5,0.1,9,0.189,10,0.114,11,1.372,14,0.233,15,0.012,17,2.924,19,0.477,21,1.939,22,0.562,26,0.302,28,1.879,32,3.751,34,2.338,36,0.167,38,0.247,39,1.125,44,0.28,45,0.008,46,0.008,48,4.78,52,5.082,122,0.566,171,3.3,173,2.462,177,4.223,180,2.222,181,2.153,486,5.082,701,5.791,963,6.136,964,4.822,965,4.822]],["title/classes/UpdateIngredientUseCase.html",[0,0.144,371,3.064]],["body/classes/UpdateIngredientUseCase.html",[0,0.199,2,0.748,3,0.112,4,0.1,5,0.088,9,0.155,10,0.1,14,0.17,15,0.012,19,0.394,21,2.075,22,0.481,25,0.722,26,0.354,28,1.652,36,0.153,38,0.217,39,1.055,44,0.205,45,0.008,46,0.008,113,0.957,115,1.549,119,1.549,120,1.549,121,0.988,122,0.414,124,1.707,131,0.957,132,1.323,135,0.871,136,1.27,137,1.652,138,2.056,146,1.504,161,1.451,165,1.172,184,2.56,186,4.816,187,1.652,188,2.177,189,2.177,191,2.491,192,2.781,193,1.71,194,3.312,195,3.714,200,1.652,201,2.949,202,1.652,216,2.902,230,2.582,240,1.903,371,5.582,449,2.605,486,5.05,966,4.816,967,4.24,968,4.24,969,3.368,970,3.714,971,4.24,972,3.368,973,3.714,974,4.24,975,3.714,976,3.714,977,4.24,978,3.714,979,4.24]],["title/classes/UpdateMealPlannerDto.html",[0,0.144,53,2.86]],["body/classes/UpdateMealPlannerDto.html",[0,0.263,1,4.762,2,0.758,3,0.114,4,0.101,5,0.089,7,2.253,8,2.616,9,0.101,10,0.101,11,1.271,12,3.039,13,2.271,14,0.234,15,0.012,16,2.126,17,2.761,18,3.372,19,0.451,21,1.43,22,0.542,25,0.42,26,0.28,28,1.674,29,3.372,32,3.583,33,3.752,34,2.083,35,0.641,36,0.154,38,0.299,39,1.062,40,2.176,41,2.486,42,1.567,43,2.788,44,0.271,45,0.008,46,0.008,48,4.565,51,5.232,52,4.853,53,4.853,122,0.548,204,3.412,980,3.763,981,4.296,982,5.828,983,4.296,984,4.296]],["title/classes/UpdateMealPlannerUseCase.html",[0,0.144,373,3.064]],["body/classes/UpdateMealPlannerUseCase.html",[0,0.167,2,0.585,3,0.088,4,0.078,5,0.069,7,2.283,9,0.149,10,0.078,14,0.169,15,0.012,19,0.391,21,1.192,22,0.431,25,0.475,26,0.338,27,4.626,28,1.293,36,0.129,38,0.17,39,0.922,40,2.295,42,1.771,44,0.204,45,0.006,46,0.006,79,0.945,113,0.805,115,1.541,119,1.303,120,1.303,121,0.983,122,0.412,124,1.68,131,1.048,132,1.362,135,0.681,136,1.301,138,2.785,146,1.83,161,1.135,165,1.342,184,2.464,187,1.293,188,1.83,189,1.83,191,2.233,192,2.536,193,1.338,194,3.02,200,1.293,202,1.293,209,4.327,211,3.711,212,3.194,217,3.877,221,3.857,223,5.021,225,2.453,226,2.27,227,3.56,228,2.432,229,2.432,230,2.02,231,3.323,232,2.355,234,2.432,235,2.432,237,2.432,239,1.1,240,2.18,242,2.02,243,2.432,244,2.906,245,2.432,246,2.432,247,2.432,248,2.432,249,2.432,250,2.432,251,2.432,252,2.432,253,2.432,254,2.432,258,1.661,286,3.857,288,2.635,296,2.635,373,5.153,404,2.02,406,1.635,417,2.906,449,2.163,656,5.031,966,4.635,969,2.635,972,2.635,985,2.906,986,4.856,987,3.318,988,3.318,989,3.318,990,3.318,991,3.318,992,2.906,993,4.856,994,3.318,995,3.318,996,4.254]],["title/classes/UpdateRecipeDto.html",[0,0.144,534,2.86]],["body/classes/UpdateRecipeDto.html",[0,0.244,2,0.602,3,0.155,4,0.08,5,0.07,9,0.173,10,0.08,11,1.081,12,2.2,13,1.931,14,0.244,15,0.012,16,2.672,17,3.133,18,3.377,19,0.511,21,1.433,22,0.57,25,0.334,26,0.238,28,1.329,29,2.868,32,3.791,33,3.191,34,1.654,35,0.545,36,0.131,38,0.254,39,0.937,41,2.868,42,1.808,43,2.589,44,0.252,45,0.007,46,0.007,48,4.925,52,5.235,122,0.588,173,2.124,180,1.75,181,1.696,198,1.591,204,2.709,256,2.196,258,2.429,259,3.378,260,3.743,261,3.743,264,2.262,268,4.697,272,2.613,278,2.988,488,4.57,531,5.204,534,4.384,963,5.96,980,4.341,997,3.412,998,3.412,999,3.412,1000,3.412,1001,3.412,1002,3.412,1003,3.412,1004,3.412,1005,3.412]],["title/classes/UpdateRecipeUseCase.html",[0,0.144,375,3.064]],["body/classes/UpdateRecipeUseCase.html",[0,0.158,2,0.545,3,0.082,4,0.073,5,0.064,9,0.176,10,0.073,14,0.18,15,0.012,19,0.416,21,1.131,22,0.497,25,0.598,26,0.329,28,1.204,36,0.122,38,0.158,39,0.885,44,0.217,45,0.006,46,0.006,79,0.879,113,0.764,115,1.478,119,1.236,120,1.236,121,1.045,122,0.438,124,1.642,131,1.136,132,1.424,133,4.035,135,0.634,136,1.325,138,2.671,146,1.848,161,1.057,165,1.273,184,2.545,187,1.204,188,1.736,189,1.736,191,2.157,192,2.462,193,1.245,194,2.932,200,1.204,202,1.204,212,3.085,226,2.114,227,3.377,228,2.265,229,2.265,230,1.881,231,3.153,232,2.234,234,2.265,235,2.265,237,2.265,239,1.024,240,2.068,242,1.881,243,2.265,245,2.265,246,2.265,247,2.265,248,2.265,249,2.265,250,2.265,251,2.265,252,2.265,253,2.265,254,2.265,264,2.96,285,4.47,286,3.659,287,3.444,288,2.453,291,4.035,293,2.327,294,2.706,296,2.453,297,2.706,375,5.022,404,1.881,406,1.86,416,2.706,449,2.428,488,4.8,623,4.85,966,4.789,969,2.453,970,2.706,972,2.453,973,2.706,975,2.706,976,2.706,978,2.706,985,2.706,992,2.706,996,4.035,1006,4.607,1007,4.607,1008,3.089,1009,3.089,1010,3.089,1011,3.089,1012,3.089,1013,3.089,1014,3.089,1015,3.089,1016,3.089,1017,3.089,1018,3.089,1019,3.089,1020,3.089,1021,3.089,1022,3.089,1023,3.089,1024,3.089,1025,4.607,1026,3.089]],["title/classes/UserDomainModel.html",[0,0.144,312,2.204]],["body/classes/UserDomainModel.html",[0,0.244,2,0.755,3,0.113,4,0.101,5,0.088,7,1.957,9,0.101,10,0.101,11,1.267,14,0.242,15,0.012,19,0.52,22,0.574,25,0.778,26,0.279,36,0.154,38,0.219,39,1.06,40,1.879,44,0.271,45,0.008,46,0.008,122,0.507,153,4.312,158,2.108,159,1.927,160,1.62,167,4.65,173,2.348,180,2.053,181,1.989,225,2.162,301,4.312,304,3.742,312,3.733,406,2.016,461,2.755,463,2.607,499,4.846,525,2.929,777,3.749,778,3.749,779,3.749,780,3.749,1027,6.842,1028,4.28,1029,4.28,1030,4.28,1031,5.813]],["title/classes/UserModel.html",[0,0.144,157,2.691]],["body/classes/UserModel.html",[0,0.261,2,0.9,3,0.135,4,0.12,5,0.105,7,1.41,9,0.12,10,0.12,11,1.423,14,0.231,15,0.011,19,0.546,22,0.534,25,0.704,26,0.245,36,0.173,38,0.261,40,1.452,44,0.255,45,0.009,46,0.009,122,0.544,157,4.884,158,2.061,160,1.602,161,1.745,167,4.383,173,2.164,180,1.802,181,1.745,301,3.975,304,3.284,312,4.431,406,1.858,499,4.466,537,3.49,538,3.889,1032,4.468,1033,5.101,1034,5.101,1035,5.101,1036,5.101,1037,5.101,1038,5.101]],["title/classes/UserMongo.html",[0,0.144,856,2.545]],["body/classes/UserMongo.html",[0,0.219,2,0.596,3,0.089,4,0.08,5,0.07,7,1.762,9,0.08,10,0.08,11,1.072,14,0.246,15,0.012,17,2.953,19,0.482,22,0.575,25,0.747,26,0.306,36,0.179,38,0.252,40,1.652,42,2.989,44,0.251,45,0.007,46,0.007,122,0.352,138,1.637,157,4.104,158,2.127,160,1.424,164,2.174,167,4.308,173,1.924,180,2.049,181,1.985,224,3.167,301,3.534,304,3.735,312,3.729,406,1.652,433,2.174,499,3.971,537,2.814,538,3.43,545,5.185,546,4.254,547,3.606,549,5.486,551,5.584,553,5.353,554,3.534,555,2.475,556,1.706,557,3.366,558,2.475,559,1.78,560,2.475,561,2.475,562,3.606,789,1.706,799,3.906,817,2.475,856,3.882,857,2.475,863,2.957,1039,2.475,1040,3.376,1041,4.919,1042,3.376,1043,3.376,1044,3.376,1045,3.376,1046,3.376,1047,3.376,1048,3.376,1049,4.919,1050,2.957,1051,3.906]],["title/injectables/UserMongoService.html",[134,1.057,843,2.691]],["body/injectables/UserMongoService.html",[0,0.174,3,0.093,4,0.083,5,0.072,7,1.397,9,0.169,10,0.083,14,0.202,15,0.012,19,0.469,22,0.545,25,0.796,26,0.344,36,0.134,38,0.18,39,0.812,40,1.439,44,0.244,45,0.007,46,0.007,79,0.998,113,0.838,115,1.356,119,1.356,120,1.356,121,1.176,122,0.493,124,1.169,131,1.253,132,1.58,134,1.278,135,0.72,136,1.386,137,1.366,146,1.689,148,1.464,158,2.167,165,0.969,190,1.962,214,3.27,217,3.794,239,2.376,262,2.995,402,2.445,426,2.451,427,2.038,428,2.038,432,1.97,449,1.729,452,2.357,468,2.788,502,4.346,503,2.784,568,3.706,789,3.475,843,4.613,844,4.867,856,4.189,858,2.784,942,3.071,1052,3.071,1053,3.506,1054,3.506,1055,3.506,1056,3.506,1057,3.506,1058,3.506,1059,3.506,1060,3.506,1061,3.506,1062,3.506,1063,3.506,1064,3.506]],["title/injectables/UserRepository.html",[134,1.057,844,2.691]],["body/injectables/UserRepository.html",[0,0.219,3,0.09,4,0.08,5,0.07,7,1.763,9,0.167,10,0.08,14,0.2,15,0.012,19,0.462,22,0.541,25,0.785,26,0.34,36,0.13,38,0.173,39,0.791,40,1.816,42,1.233,44,0.241,45,0.007,46,0.007,79,0.963,113,0.816,115,1.558,119,1.321,120,1.321,121,1.16,122,0.486,131,1.241,132,1.573,134,1.245,135,0.695,136,1.369,146,1.661,148,1.412,158,2.16,160,1.664,165,0.934,190,1.929,232,1.64,239,2.571,240,1.518,301,2.059,402,2.404,406,1.93,423,3.537,426,3.701,427,1.985,428,1.985,432,1.919,452,2.296,499,2.314,502,3.61,505,4.313,556,1.708,559,1.783,587,2.479,594,2.479,599,2.479,603,2.962,789,3.425,826,3.911,831,2.685,844,4.556,856,4.129,858,2.685,926,2.962,1051,2.685,1065,2.962,1066,3.381,1067,4.924,1068,3.381,1069,3.381,1070,3.381,1071,3.381,1072,3.381,1073,3.381,1074,3.381,1075,3.381,1076,3.381]],["title/injectables/UserService.html",[134,1.057,213,2.418]],["body/injectables/UserService.html",[0,0.211,3,0.123,4,0.109,5,0.096,7,1.281,9,0.179,10,0.109,14,0.215,15,0.012,19,0.498,22,0.532,25,0.78,26,0.294,35,0.675,36,0.162,38,0.238,40,1.32,44,0.259,45,0.008,46,0.008,79,1.32,113,1.017,121,1.251,122,0.524,124,1.419,131,1.212,132,1.518,134,1.55,148,1.935,158,2.143,190,2.078,213,4.231,217,3.383,239,2.278,262,2.342,402,2.59,427,2.472,428,1.869,432,1.806,449,1.586,452,2.161,468,2.557,502,4.496,503,3.682,537,3.332,538,3.546,789,3.098,843,5.209,856,3.735,1077,4.061,1078,4.636,1079,4.636,1080,4.636,1081,4.636,1082,4.636]],["title/injectables/ValidateMongoId.html",[134,1.057,728,3.064]],["body/injectables/ValidateMongoId.html",[0,0.222,3,0.133,4,0.118,5,0.104,9,0.152,10,0.118,14,0.148,15,0.012,19,0.341,22,0.553,25,0.698,26,0.31,36,0.171,38,0.257,39,1.036,44,0.178,45,0.009,46,0.009,79,1.427,113,1.07,121,0.857,122,0.359,131,1.07,134,1.631,136,1.248,146,1.305,148,2.092,240,2.25,568,5.232,728,5.525,869,3.98,882,6.339,1083,5.652,1084,4.39,1085,6.453,1086,7.536,1087,6.453,1088,6.992,1089,7.798,1090,5.012,1091,5.012,1092,7.136,1093,5.012,1094,5.012,1095,5.012,1096,5.012,1097,5.012,1098,5.012]],["title/coverage.html",[1099,4.542]],["body/coverage.html",[0,0.292,1,2.297,5,0.049,6,3.759,7,1.954,8,3.759,14,0.07,15,0.012,21,0.926,27,1.45,35,0.868,37,1.63,45,0.005,46,0.005,48,3.736,51,1.63,53,1.63,62,1.314,70,1.746,72,1.891,74,1.746,76,1.891,88,1.746,108,1.746,109,1.746,111,2.086,134,1.929,149,2.086,153,1.45,157,1.533,162,1.45,170,1.746,171,3.204,183,1.746,184,3.029,185,3.644,186,3.432,187,3.029,191,0.841,194,1.069,201,1.069,208,1.746,209,3.644,211,1.314,212,1.203,213,1.378,214,1.314,225,1.203,240,1.069,255,1.746,256,3.736,257,1.533,258,0.815,284,1.746,285,3.644,287,1.256,293,1.203,298,1.746,299,2.995,300,1.63,307,1.746,308,3.432,312,1.256,316,1.746,317,2.086,337,1.45,351,1.746,355,1.746,357,1.746,359,1.746,361,1.746,363,1.746,365,1.746,367,1.746,369,1.746,371,1.746,373,1.746,375,1.746,376,1.746,378,3.567,379,1.891,401,3.432,411,2.086,414,2.086,420,2.086,423,1.45,424,2.086,434,3.204,437,1.63,438,2.086,439,2.086,443,1.45,444,2.086,445,3.644,447,2.086,459,1.533,460,2.086,461,2.428,465,2.086,466,3.432,473,1.746,474,2.086,477,2.086,486,1.63,487,3.432,488,1.533,489,2.086,490,1.533,491,2.086,495,2.086,496,2.086,498,2.086,501,2.086,515,1.533,524,2.086,525,3.644,531,1.746,534,1.63,535,1.63,536,2.086,543,1.314,544,2.765,563,1.746,566,1.533,567,2.086,570,1.533,586,2.086,604,2.086,614,2.995,615,2.995,637,1.746,638,2.086,639,2.086,701,1.746,717,1.63,720,1.63,728,1.746,776,2.086,783,2.086,784,2.086,789,1.203,790,2.765,791,2.765,801,1.746,804,1.533,805,2.086,807,1.533,822,2.086,823,2.086,832,2.086,841,1.533,842,1.533,843,1.533,844,1.533,845,1.63,853,1.45,854,1.746,856,1.45,857,1.746,865,2.086,866,1.891,867,2.086,871,2.086,891,2.086,904,2.765,917,2.086,933,2.086,945,2.086,952,2.086,966,3.432,1027,2.086,1032,2.086,1039,2.765,1052,2.086,1065,2.086,1077,2.086,1083,2.086,1084,2.086,1099,1.891,1100,2.381,1101,2.381,1102,2.381,1103,8.767,1104,2.381,1105,6.467,1106,7.943,1107,7.073,1108,7.706,1109,3.771,1110,3.771,1111,5.325,1112,6.467,1113,6.706,1114,2.381,1115,2.381,1116,5.803,1117,6.173,1118,2.086,1119,2.086,1120,2.381,1121,2.086,1122,2.381,1123,2.381]],["title/dependencies.html",[57,3.239,1124,3.051]],["body/dependencies.html",[0,0.251,15,0.012,34,2.955,45,0.01,46,0.01,57,3.923,79,1.735,81,4.839,83,5.337,85,4.467,135,1.252,556,3.078,559,3.213,626,4.839,869,4.839,1088,5.337,1125,7.793,1126,6.094,1127,6.094,1128,6.094,1129,6.094,1130,6.094,1131,6.094,1132,6.094,1133,6.094,1134,6.094,1135,6.094,1136,6.094,1137,6.094]],["title/miscellaneous/functions.html",[1138,2.242,1139,4.407]],["body/miscellaneous/functions.html",[10,0.156,15,0.01,45,0.01,46,0.01,1119,5.818,1121,7.272,1138,4.276,1139,5.818,1140,6.642,1141,6.642]],["title/index.html",[10,0.082,1142,3.483,1143,3.483]],["body/index.html",[4,0.093,9,0.093,15,0.011,45,0.007,46,0.007,86,3.446,425,3.446,426,1.908,446,2.692,866,3.124,1099,3.124,1144,3.934,1145,3.934,1146,5.485,1147,3.934,1148,3.934,1149,3.934,1150,3.934,1151,3.934,1152,7.441,1153,8.374,1154,6.315,1155,7.788,1156,3.934,1157,5.485,1158,3.934,1159,5.485,1160,3.934,1161,7.185,1162,5.485,1163,7.185,1164,6.832,1165,3.934,1166,7.636,1167,3.934,1168,5.485,1169,3.934,1170,6.315,1171,3.934,1172,6.832,1173,3.934,1174,5.485,1175,3.934,1176,3.934,1177,5.485,1178,3.934,1179,3.934,1180,3.934,1181,3.934,1182,3.934,1183,3.934,1184,5.485,1185,6.315,1186,3.934,1187,3.934,1188,3.934,1189,5.485,1190,3.934,1191,3.934,1192,3.934,1193,3.934,1194,3.934,1195,3.934,1196,3.934,1197,3.934,1198,3.934,1199,3.934,1200,3.934,1201,3.934,1202,3.934,1203,3.934,1204,6.832,1205,3.934,1206,3.934,1207,3.934,1208,3.934,1209,3.934,1210,3.934,1211,3.934,1212,3.934,1213,3.934,1214,3.934,1215,3.934,1216,3.934,1217,3.934,1218,3.934,1219,3.934,1220,5.485,1221,3.934,1222,3.934,1223,3.934,1224,3.934,1225,3.934,1226,3.934,1227,3.934,1228,5.485,1229,3.934,1230,3.934,1231,3.934,1232,3.934,1233,3.934,1234,3.934,1235,3.934,1236,3.934,1237,3.934,1238,3.934,1239,3.934,1240,6.315,1241,3.934,1242,3.934,1243,3.934,1244,7.636,1245,3.934,1246,3.934,1247,3.934,1248,7.441,1249,3.934,1250,3.934,1251,5.485,1252,3.934,1253,3.934,1254,3.934,1255,5.485,1256,5.485,1257,3.934,1258,3.934,1259,3.934,1260,5.485,1261,5.485,1262,3.934,1263,3.934,1264,3.934,1265,3.934,1266,3.934,1267,3.446,1268,3.934,1269,3.934,1270,3.934,1271,3.934,1272,3.934,1273,3.934,1274,3.934,1275,3.934,1276,3.934,1277,3.446,1278,3.934,1279,3.934,1280,3.934,1281,3.934,1282,3.934,1283,3.934,1284,3.446]],["title/modules.html",[56,3.682]],["body/modules.html",[15,0.01,45,0.01,46,0.01,55,4.786,56,4.203,61,4.468,514,4.468,1267,7.026,1285,8.021,1286,8.021,1287,8.021]],["title/overview.html",[1288,5.01]],["body/overview.html",[2,0.757,15,0.012,45,0.008,46,0.008,47,5.098,55,5.601,56,2.761,57,3.747,58,3.756,59,3.756,60,3.756,61,5.817,62,3.644,63,4.267,64,3.144,65,3.144,108,3.144,148,1.79,212,3.948,213,4.522,337,4.759,419,1.564,510,3.756,511,3.756,512,3.756,513,3.756,514,5.969,515,5.031,566,5.031,570,5.031,637,3.144,804,5.031,807,5.031,838,3.756,839,3.756,840,3.756,841,5.031,842,5.031,843,5.031,844,5.031,845,4.522,1288,3.756,1289,4.288,1290,4.288,1291,4.288,1292,4.288]],["title/properties.html",[11,1.097,1124,3.051]],["body/properties.html",[9,0.156,11,1.444,15,0.011,45,0.01,46,0.01,1277,5.801,1284,5.801,1293,6.623,1294,6.623,1295,6.623]],["title/miscellaneous/typealiases.html",[1138,2.242,1296,5.031]],["body/miscellaneous/typealiases.html",[10,0.143,14,0.214,15,0.01,21,1.782,45,0.01,46,0.01,158,1.532,171,4.97,172,5.767,190,1.833,198,2.826,433,3.902,434,4.148,443,3.691,544,4.444,554,3.691,557,5.516,565,5.767,790,4.444,791,5.324,803,6.175,904,4.444,916,6.175,1039,4.444,1051,5.767,1138,3.902,1297,6.061,1298,6.061,1299,5.309,1300,5.309,1301,5.309,1302,5.309]],["title/miscellaneous/variables.html",[1138,2.242,1303,4.407]],["body/miscellaneous/variables.html",[5,0.119,10,0.135,14,0.169,15,0.011,21,1.409,45,0.009,46,0.009,72,5.581,101,5.029,158,1.451,160,1.409,544,4.209,554,4.28,563,5.152,564,5.029,790,4.209,791,5.152,801,5.568,802,5.029,854,5.568,857,5.152,881,7.111,882,6.448,904,4.209,915,5.029,1039,4.209,1050,5.029,1118,5.029,1138,3.696,1299,5.029,1300,5.029,1301,5.029,1302,5.029,1303,5.029,1304,5.742,1305,5.742,1306,5.742,1307,5.742,1308,5.742,1309,5.742,1310,5.742,1311,5.742]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"modules/InfrastructureModule.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/Ingredients.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"modules/MongoModule.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{}}}],["0.0.1",{"_index":1294,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":47,"title":{"classes/AmountDto-1.html":{}},"body":{"overview.html":{}}}],["1/1",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["10.0.3",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1290,"title":{},"body":{"overview.html":{}}}],["18/18",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":1292,"title":{},"body":{"overview.html":{}}}],["2.3.1",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1105,"title":{},"body":{"coverage.html":{}}}],["21/21",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["2d",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["3",{"_index":1289,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["43",{"_index":1291,"title":{},"body":{"overview.html":{}}}],["4df9",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.1.0",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["7.0.3",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["9.2.2",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["9/9",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["92.railway.app:7172",{"_index":889,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["_id",{"_index":406,"title":{},"body":{"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUserDomainModel.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientRepository.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerRepository.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeRepository.html":{},"classes/RecipesModel.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserRepository.html":{}}}],["abda",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acceder",{"_index":1171,"title":{},"body":{"index.html":{}}}],["activate",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{}}}],["add",{"_index":505,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserRepository.html":{}}}],["addmealplanner",{"_index":502,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["addmealplanner(_id",{"_index":1067,"title":{},"body":{"injectables/UserRepository.html":{}}}],["addmealplanner(userid",{"_index":503,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UserMongoService.html":{},"injectables/UserService.html":{}}}],["además",{"_index":1184,"title":{},"body":{"index.html":{}}}],["administrar",{"_index":1167,"title":{},"body":{"index.html":{}}}],["agregar",{"_index":1206,"title":{},"body":{"index.html":{}}}],["ajustar",{"_index":1203,"title":{},"body":{"index.html":{}}}],["algunos",{"_index":1211,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":1297,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all.interface",{"_index":596,"title":{},"body":{"injectables/IngredientRepository.html":{},"injectables/RecipeRepository.html":{}}}],["all.interface.ts",{"_index":439,"title":{},"body":{"interfaces/IFindAll.html":{},"coverage.html":{}}}],["all.interface.ts:17",{"_index":441,"title":{},"body":{"interfaces/IFindAll.html":{}}}],["almacenar",{"_index":1181,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":1268,"title":{},"body":{"index.html":{}}}],["amount",{"_index":12,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateRecipeDto.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"classes/IngredientDto.html":{},"classes/Ingredients.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateRecipeDto.html":{}}}],["amountdto",{"_index":1,"title":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{}},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateMealPlannerDto.html":{},"classes/UpdateMealPlannerDto.html":{},"coverage.html":{}}}],["aplicación",{"_index":1152,"title":{},"body":{"index.html":{}}}],["app",{"_index":1246,"title":{},"body":{"index.html":{}}}],["app_filter",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":1141,"title":{},"body":{"miscellaneous/functions.html":{}}}],["application/delegate",{"_index":710,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["application/interface",{"_index":200,"title":{},"body":{"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["application/use",{"_index":377,"title":{},"body":{"classes/Delegate.html":{}}}],["applications",{"_index":1151,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":55,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["aquellas",{"_index":1233,"title":{},"body":{"index.html":{}}}],["args",{"_index":344,"title":{},"body":{"classes/Delegate.html":{},"interfaces/IUseCase.html":{}}}],["argumentmetadata",{"_index":1089,"title":{},"body":{"injectables/ValidateMongoId.html":{}}}],["argumentshost",{"_index":621,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["array",{"_index":436,"title":{},"body":{"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"classes/MealPlannerDomainModel.html":{},"classes/RecipeDomainModel.html":{}}}],["arrayminsize",{"_index":281,"title":{},"body":{"classes/CreateRecipeDto.html":{},"classes/Ingredients.html":{}}}],["arrayminsize(1",{"_index":283,"title":{},"body":{"classes/CreateRecipeDto.html":{},"classes/Ingredients.html":{}}}],["auth",{"_index":112,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Delegate.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"controllers/KitchenRecipesController.html":{}}}],["authguard",{"_index":109,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"controllers/KitchenRecipesController.html":{},"coverage.html":{}}}],["authheader",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authheader.split",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{}}}],["author",{"_index":1277,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":62,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/GetUserUseCase.html":{},"controllers/KitchenRecipesController.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":547,"title":{},"body":{"classes/IngredientMongo.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeMongo.html":{},"classes/UserMongo.html":{}}}],["ayudar",{"_index":1162,"title":{},"body":{"index.html":{}}}],["backers",{"_index":1269,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":1091,"title":{},"body":{"injectables/ValidateMongoId.html":{}}}],["badrequestexception('invalid",{"_index":1098,"title":{},"body":{"injectables/ValidateMongoId.html":{}}}],["base",{"_index":425,"title":{},"body":{"interfaces/IBaseRepository.html":{},"index.html":{}}}],["body",{"_index":722,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["boolean",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["bootstrap",{"_index":1121,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":1287,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1285,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1147,"title":{},"body":{"index.html":{}}}],["buscan",{"_index":1234,"title":{},"body":{"index.html":{}}}],["buscar",{"_index":1187,"title":{},"body":{"index.html":{}}}],["cada",{"_index":1209,"title":{},"body":{"index.html":{}}}],["calorías",{"_index":1222,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":114,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":125,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capacidad",{"_index":1202,"title":{},"body":{"index.html":{}}}],["características",{"_index":1199,"title":{},"body":{"index.html":{}}}],["case",{"_index":189,"title":{},"body":{"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IUseCase.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["case.interface.ts",{"_index":496,"title":{},"body":{"interfaces/IUseCase.html":{},"coverage.html":{}}}],["case.interface.ts:17",{"_index":497,"title":{},"body":{"interfaces/IUseCase.html":{}}}],["case.ts",{"_index":187,"title":{},"body":{"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"coverage.html":{}}}],["case.ts:14",{"_index":403,"title":{},"body":{"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{}}}],["case.ts:15",{"_index":195,"title":{},"body":{"classes/CreateIngredientUseCase.html":{},"classes/UpdateIngredientUseCase.html":{}}}],["case.ts:16",{"_index":309,"title":{},"body":{"classes/CreateUserUseCase.html":{},"classes/GetUserUseCase.html":{}}}],["case.ts:24",{"_index":288,"title":{},"body":{"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["case.ts:28",{"_index":215,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/GetAllIngredientUseCase.html":{}}}],["case.ts:29",{"_index":405,"title":{},"body":{"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{}}}],["case.ts:30",{"_index":197,"title":{},"body":{"classes/CreateIngredientUseCase.html":{},"classes/DeleteRecipeUseCase.html":{}}}],["case.ts:31",{"_index":967,"title":{},"body":{"classes/UpdateIngredientUseCase.html":{}}}],["case.ts:38",{"_index":311,"title":{},"body":{"classes/CreateUserUseCase.html":{},"classes/GetUserUseCase.html":{}}}],["case.ts:43",{"_index":290,"title":{},"body":{"classes/CreateRecipeUseCase.html":{}}}],["case.ts:44",{"_index":985,"title":{},"body":{"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["case.ts:50",{"_index":218,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{}}}],["case.ts:59",{"_index":292,"title":{},"body":{"classes/CreateRecipeUseCase.html":{}}}],["case.ts:74",{"_index":220,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{}}}],["case.ts:75",{"_index":987,"title":{},"body":{"classes/UpdateMealPlannerUseCase.html":{}}}],["case.ts:80",{"_index":1008,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["case.ts:90",{"_index":1009,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["cases",{"_index":318,"title":{},"body":{"classes/Delegate.html":{},"interfaces/IUseCase.html":{}}}],["cases/create/create",{"_index":185,"title":{},"body":{"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"coverage.html":{}}}],["cases/delete/delete",{"_index":401,"title":{},"body":{"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"coverage.html":{}}}],["cases/get/get",{"_index":378,"title":{},"body":{"classes/Delegate.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"coverage.html":{}}}],["cases/update/update",{"_index":966,"title":{},"body":{"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"coverage.html":{}}}],["catch",{"_index":617,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["catch(exception",{"_index":618,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["catch(mongoservererror",{"_index":870,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{}}}],["catch(tokenexpirederror",{"_index":628,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{}}}],["catcherror",{"_index":227,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["cddc0e7e63ea",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":221,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{}}}],["class",{"_index":0,"title":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"classes/Ingredients.html":{},"classes/JwtErrorExceptionFilter.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{}},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"modules/InfrastructureModule.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/Ingredients.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"modules/MongoModule.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"classes/Ingredients.html":{},"classes/JwtErrorExceptionFilter.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_infrastructuremodule",{"_index":510,"title":{},"body":{"modules/InfrastructureModule.html":{},"overview.html":{}}}],["cluster_infrastructuremodule_exports",{"_index":511,"title":{},"body":{"modules/InfrastructureModule.html":{},"overview.html":{}}}],["cluster_infrastructuremodule_imports",{"_index":512,"title":{},"body":{"modules/InfrastructureModule.html":{},"overview.html":{}}}],["cluster_infrastructuremodule_providers",{"_index":513,"title":{},"body":{"modules/InfrastructureModule.html":{},"overview.html":{}}}],["cluster_mongomodule",{"_index":838,"title":{},"body":{"modules/MongoModule.html":{},"overview.html":{}}}],["cluster_mongomodule_exports",{"_index":839,"title":{},"body":{"modules/MongoModule.html":{},"overview.html":{}}}],["cluster_mongomodule_providers",{"_index":840,"title":{},"body":{"modules/MongoModule.html":{},"overview.html":{}}}],["cocina",{"_index":1169,"title":{},"body":{"index.html":{}}}],["cocinar",{"_index":1235,"title":{},"body":{"index.html":{}}}],["collection",{"_index":560,"title":{},"body":{"classes/IngredientMongo.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeMongo.html":{},"classes/UserMongo.html":{}}}],["comentarios",{"_index":1208,"title":{},"body":{"index.html":{}}}],["como",{"_index":1201,"title":{},"body":{"index.html":{}}}],["compras",{"_index":1192,"title":{},"body":{"index.html":{}}}],["config",{"_index":872,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["config/mongo.config",{"_index":848,"title":{},"body":{"modules/MongoModule.html":{}}}],["configmodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":875,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["const",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/IngredientMongo.html":{},"classes/JwtErrorExceptionFilter.html":{},"classes/MealPlannerMongo.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"classes/RecipeMongo.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserMongo.html":{}}}],["constructor",{"_index":115,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MongooseConfigService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{}}}],["constructor(configservice",{"_index":874,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["constructor(ingredientrepository",{"_index":569,"title":{},"body":{"injectables/IngredientMongoService.html":{}}}],["constructor(jwtservice",{"_index":116,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["constructor(mealplannerrepository",{"_index":806,"title":{},"body":{"injectables/MealPlannerMongoService.html":{}}}],["constructor(private",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientUseCase.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"injectables/IngredientMongoService.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MongooseConfigService.html":{},"injectables/RecipeMongoService.html":{},"classes/UpdateIngredientUseCase.html":{},"injectables/UserMongoService.html":{}}}],["constructor(reciperepository",{"_index":918,"title":{},"body":{"injectables/RecipeMongoService.html":{}}}],["constructor(recipesservice",{"_index":336,"title":{},"body":{"classes/Delegate.html":{}}}],["constructor(repository",{"_index":587,"title":{},"body":{"injectables/IngredientRepository.html":{},"injectables/MealPlannerRepository.html":{},"injectables/RecipeRepository.html":{},"injectables/UserRepository.html":{}}}],["constructor(service",{"_index":193,"title":{},"body":{"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["constructor(userrepository",{"_index":1053,"title":{},"body":{"injectables/UserMongoService.html":{}}}],["context",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{},"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["context.getresponse",{"_index":630,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["context.switchtohttp().getrequest",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{}}}],["controlar",{"_index":1219,"title":{},"body":{"index.html":{}}}],["controller",{"_index":637,"title":{"controllers/KitchenRecipesController.html":{}},"body":{"controllers/KitchenRecipesController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/InfrastructureModule.html":{},"controllers/KitchenRecipesController.html":{},"modules/MongoModule.html":{}}}],["coverage",{"_index":1099,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["crear",{"_index":1190,"title":{},"body":{"index.html":{}}}],["create",{"_index":190,"title":{},"body":{"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUserService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["create(entity",{"_index":428,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUserService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["created",{"_index":199,"title":{},"body":{"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"interfaces/IBaseRepository.html":{}}}],["createingredient",{"_index":641,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["createingredient(ingredient",{"_index":658,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["createingredientdto",{"_index":170,"title":{"classes/CreateIngredientDto.html":{}},"body":{"classes/CreateIngredientDto.html":{},"controllers/KitchenRecipesController.html":{},"coverage.html":{}}}],["createingredientusecase",{"_index":183,"title":{"classes/CreateIngredientUseCase.html":{}},"body":{"classes/CreateIngredientUseCase.html":{},"classes/Delegate.html":{},"coverage.html":{}}}],["createingredientusecase(this.ingredientservice",{"_index":383,"title":{},"body":{"classes/Delegate.html":{}}}],["createmealplanner",{"_index":642,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["createmealplanner(id",{"_index":661,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["createmealplannerdto",{"_index":37,"title":{"classes/CreateMealPlannerDto.html":{}},"body":{"classes/AmountDto.html":{},"classes/CreateMealPlannerDto.html":{},"controllers/KitchenRecipesController.html":{},"coverage.html":{}}}],["createmealplannerusecase",{"_index":208,"title":{"classes/CreateMealPlannerUseCase.html":{}},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/Delegate.html":{},"coverage.html":{}}}],["createmongooseoptions",{"_index":873,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["createrecipe",{"_index":643,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["createrecipe(@body",{"_index":764,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["createrecipe(recipe",{"_index":665,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["createrecipedto",{"_index":255,"title":{"classes/CreateRecipeDto.html":{}},"body":{"classes/CreateRecipeDto.html":{},"classes/Ingredients.html":{},"coverage.html":{}}}],["createrecipeusecase",{"_index":284,"title":{"classes/CreateRecipeUseCase.html":{}},"body":{"classes/CreateRecipeUseCase.html":{},"classes/Delegate.html":{},"coverage.html":{}}}],["creates",{"_index":119,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MongooseConfigService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{}}}],["createuser",{"_index":644,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["createuser(@body",{"_index":767,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["createuser(user",{"_index":668,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["createuserdto",{"_index":298,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/KitchenRecipesController.html":{},"coverage.html":{}}}],["createuserusecase",{"_index":307,"title":{"classes/CreateUserUseCase.html":{}},"body":{"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"coverage.html":{}}}],["createuserusecase(this.userservice",{"_index":388,"title":{},"body":{"classes/Delegate.html":{}}}],["data",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserUseCase.html":{},"classes/GetUserUseCase.html":{},"controllers/KitchenRecipesController.html":{}}}],["database",{"_index":878,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["datos",{"_index":1183,"title":{},"body":{"index.html":{}}}],["dbname",{"_index":890,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["de",{"_index":1153,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":17,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateUserDto.html":{},"classes/IngredientDto.html":{},"classes/IngredientMongo.html":{},"classes/Ingredients.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeMongo.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UserMongo.html":{}}}],["default",{"_index":881,"title":{},"body":{"injectables/MongooseConfigService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserService.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/Ingredients.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{}}}],["delegate",{"_index":316,"title":{"classes/Delegate.html":{}},"body":{"classes/Delegate.html":{},"controllers/KitchenRecipesController.html":{},"coverage.html":{}}}],["delete",{"_index":402,"title":{},"body":{"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUserService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientService.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["delete('meal",{"_index":751,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["delete('recipe/:id",{"_index":753,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["delete('user/:id",{"_index":755,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["delete(_id",{"_index":826,"title":{},"body":{"injectables/MealPlannerRepository.html":{},"injectables/RecipeRepository.html":{},"injectables/UserRepository.html":{}}}],["delete(id",{"_index":468,"title":{},"body":{"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUserService.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeService.html":{},"injectables/UserMongoService.html":{},"injectables/UserService.html":{}}}],["deleted",{"_index":574,"title":{},"body":{"injectables/IngredientMongoService.html":{},"injectables/IngredientService.html":{}}}],["deleteingredientusecase",{"_index":353,"title":{},"body":{"classes/Delegate.html":{}}}],["deletemealplanner",{"_index":645,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["deletemealplanner(id",{"_index":671,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["deletemealplannerusecase",{"_index":351,"title":{"classes/DeleteMealPlannerUseCase.html":{}},"body":{"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"coverage.html":{}}}],["deletemealplannerusecase(this.mealplannerservice",{"_index":391,"title":{},"body":{"classes/Delegate.html":{}}}],["deleterecipe",{"_index":646,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["deleterecipe(id",{"_index":674,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["deleterecipeusecase",{"_index":376,"title":{"classes/DeleteRecipeUseCase.html":{}},"body":{"classes/Delegate.html":{},"classes/DeleteRecipeUseCase.html":{},"coverage.html":{}}}],["deleterecipeusecase(this.recipesservice",{"_index":390,"title":{},"body":{"classes/Delegate.html":{}}}],["deleteuser",{"_index":647,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["deleteuser(@param('id",{"_index":756,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["deleteuser(id",{"_index":677,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["deleteuserusecase",{"_index":355,"title":{"classes/DeleteUserUseCase.html":{}},"body":{"classes/Delegate.html":{},"classes/DeleteUserUseCase.html":{},"coverage.html":{}}}],["deleteuserusecase(this.userservice",{"_index":392,"title":{},"body":{"classes/Delegate.html":{}}}],["dependencies",{"_index":57,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/InfrastructureModule.html":{},"modules/MongoModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"modules/InfrastructureModule.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/Ingredients.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":635,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["development",{"_index":1247,"title":{},"body":{"index.html":{}}}],["dieta",{"_index":1232,"title":{},"body":{"index.html":{}}}],["diseñada",{"_index":1160,"title":{},"body":{"index.html":{}}}],["document",{"_index":433,"title":{},"body":{"interfaces/IBaseRepository.html":{},"injectables/IngredientRepository.html":{},"injectables/MealPlannerRepository.html":{},"injectables/RecipeRepository.html":{},"classes/UserMongo.html":{},"miscellaneous/typealiases.html":{}}}],["documentation",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["domain",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"classes/MealPlannerDomainModel.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipesModel.html":{},"classes/UserDomainModel.html":{}}}],["domain/dto",{"_index":28,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/IngredientDto.html":{},"classes/Ingredients.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["domain/models",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"classes/IngredientModel.html":{},"classes/MealPlannerModel.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserModel.html":{}}}],["domain/models/ingredient.domain",{"_index":458,"title":{},"body":{"interfaces/IIngredientService.html":{}}}],["domain/models/meal",{"_index":472,"title":{},"body":{"interfaces/IMealPlannerService.html":{}}}],["domain/models/recipes.domain",{"_index":485,"title":{},"body":{"interfaces/IRecipeService.html":{}}}],["domain/models/user.domain",{"_index":509,"title":{},"body":{"interfaces/IUserService.html":{}}}],["domain/services",{"_index":202,"title":{},"body":{"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["domain/services/auth.service",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/GetUserUseCase.html":{}}}],["domain/services/ingredient.service",{"_index":578,"title":{},"body":{"injectables/IngredientMongoService.html":{}}}],["domain/services/meal",{"_index":813,"title":{},"body":{"injectables/MealPlannerMongoService.html":{}}}],["domain/services/recipes.service",{"_index":925,"title":{},"body":{"injectables/RecipeMongoService.html":{}}}],["domain/services/user.service",{"_index":1059,"title":{},"body":{"injectables/UserMongoService.html":{}}}],["donde",{"_index":1179,"title":{},"body":{"index.html":{}}}],["dto",{"_index":198,"title":{},"body":{"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"classes/IngredientDto.html":{},"controllers/KitchenRecipesController.html":{},"classes/UpdateRecipeDto.html":{},"miscellaneous/typealiases.html":{}}}],["e2e",{"_index":1257,"title":{},"body":{"index.html":{}}}],["e91cfe58",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":41,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateRecipeDto.html":{},"classes/IngredientDto.html":{},"classes/Ingredients.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateRecipeDto.html":{}}}],["eca0",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["efficient",{"_index":1148,"title":{},"body":{"index.html":{}}}],["eficiente",{"_index":1238,"title":{},"body":{"index.html":{}}}],["el",{"_index":1156,"title":{},"body":{"index.html":{}}}],["elecciones",{"_index":1217,"title":{},"body":{"index.html":{}}}],["email",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IUserDomainModel.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{}}}],["en",{"_index":1182,"title":{},"body":{"index.html":{}}}],["entidad",{"_index":235,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["entities",{"_index":442,"title":{},"body":{"interfaces/IFindAll.html":{}}}],["entity",{"_index":239,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUserService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["entity._id",{"_index":1075,"title":{},"body":{"injectables/UserRepository.html":{}}}],["entity.description",{"_index":975,"title":{},"body":{"classes/UpdateIngredientUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["entity.name",{"_index":972,"title":{},"body":{"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["entity.notes",{"_index":992,"title":{},"body":{"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["entity.nutritioninfo",{"_index":1024,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["entity.photourl",{"_index":978,"title":{},"body":{"classes/UpdateIngredientUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["entity.servings",{"_index":1021,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["entity.steps",{"_index":1018,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["env.${process.env.scope?.trimend",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["environments",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["error.exception",{"_index":867,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["es",{"_index":1158,"title":{},"body":{"index.html":{}}}],["especialmente",{"_index":1225,"title":{},"body":{"index.html":{}}}],["esto",{"_index":1223,"title":{},"body":{"index.html":{}}}],["exception",{"_index":624,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["exception.message",{"_index":632,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["exceptionfilter",{"_index":616,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["exec",{"_index":1076,"title":{},"body":{"injectables/UserRepository.html":{}}}],["execute",{"_index":192,"title":{},"body":{"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IUseCase.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["execute(...args",{"_index":341,"title":{},"body":{"classes/Delegate.html":{},"interfaces/IUseCase.html":{}}}],["execute(_id",{"_index":404,"title":{},"body":{"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["execute(id",{"_index":216,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/UpdateIngredientUseCase.html":{}}}],["execute(ingredient",{"_index":196,"title":{},"body":{"classes/CreateIngredientUseCase.html":{}}}],["execute(name",{"_index":412,"title":{},"body":{"classes/GetIngredientByNameUseCase.html":{}}}],["execute(recipe",{"_index":289,"title":{},"body":{"classes/CreateRecipeUseCase.html":{}}}],["execute(user",{"_index":310,"title":{},"body":{"classes/CreateUserUseCase.html":{}}}],["execution",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{}}}],["executioncontext",{"_index":126,"title":{},"body":{"guards/AuthGuard.html":{}}}],["exist",{"_index":223,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{}}}],["expiresin",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"modules/InfrastructureModule.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/Ingredients.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"modules/MongoModule.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{}}}],["exports",{"_index":517,"title":{},"body":{"modules/InfrastructureModule.html":{},"modules/MongoModule.html":{}}}],["express",{"_index":626,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"dependencies.html":{}}}],["extends",{"_index":537,"title":{},"body":{"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientService.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerService.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserService.html":{}}}],["false",{"_index":224,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/IngredientMongo.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeMongo.html":{},"classes/UserMongo.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"modules/InfrastructureModule.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/Ingredients.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"modules/MongoModule.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["filter.ts",{"_index":615,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["filter.ts:28",{"_index":622,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["filters/jwt.exception",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"classes/JwtErrorExceptionFilter.html":{},"coverage.html":{}}}],["filters/mongo",{"_index":865,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["find",{"_index":432,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUserService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["findall",{"_index":440,"title":{},"body":{"interfaces/IFindAll.html":{},"interfaces/IIngredientService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"injectables/RecipeRepository.html":{}}}],["findallbyuserid",{"_index":478,"title":{},"body":{"interfaces/IRecipeService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{}}}],["findallbyuserid(id",{"_index":481,"title":{},"body":{"interfaces/IRecipeService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeService.html":{}}}],["findallbyuserid(userid",{"_index":938,"title":{},"body":{"injectables/RecipeRepository.html":{}}}],["findbyid",{"_index":427,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUserService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["findbyid(document",{"_index":430,"title":{},"body":{"interfaces/IBaseRepository.html":{},"injectables/IngredientRepository.html":{},"injectables/MealPlannerRepository.html":{},"injectables/RecipeRepository.html":{}}}],["findbyid(id",{"_index":452,"title":{},"body":{"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUserService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientService.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeService.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["findbyname",{"_index":448,"title":{},"body":{"interfaces/IIngredientService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{}}}],["findbyname(name",{"_index":454,"title":{},"body":{"interfaces/IIngredientService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{}}}],["findoneandupdate",{"_index":1074,"title":{},"body":{"injectables/UserRepository.html":{}}}],["forkjoin",{"_index":228,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["forkjoin(observables).pipe",{"_index":251,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["found",{"_index":242,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFindAll.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["framework",{"_index":1146,"title":{},"body":{"index.html":{}}}],["from(this.repository.create(entity",{"_index":599,"title":{},"body":{"injectables/IngredientRepository.html":{},"injectables/MealPlannerRepository.html":{},"injectables/RecipeRepository.html":{},"injectables/UserRepository.html":{}}}],["from(this.repository.find",{"_index":944,"title":{},"body":{"injectables/RecipeRepository.html":{}}}],["from(this.repository.find().exec",{"_index":602,"title":{},"body":{"injectables/IngredientRepository.html":{}}}],["from(this.repository.findbyid(document",{"_index":600,"title":{},"body":{"injectables/IngredientRepository.html":{},"injectables/MealPlannerRepository.html":{},"injectables/RecipeRepository.html":{}}}],["from(this.repository.findbyidanddelete(_id",{"_index":831,"title":{},"body":{"injectables/MealPlannerRepository.html":{},"injectables/RecipeRepository.html":{},"injectables/UserRepository.html":{}}}],["from(this.repository.findbyidandupdate(_id",{"_index":601,"title":{},"body":{"injectables/IngredientRepository.html":{},"injectables/MealPlannerRepository.html":{},"injectables/RecipeRepository.html":{}}}],["from(this.repository.findone",{"_index":603,"title":{},"body":{"injectables/IngredientRepository.html":{},"injectables/UserRepository.html":{}}}],["function",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1139,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["generatetoken",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{}}}],["generatetoken(id",{"_index":421,"title":{},"body":{"interfaces/IAuthService.html":{}}}],["generatetoken(user",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["gestión",{"_index":1154,"title":{},"body":{"index.html":{}}}],["get('ingredient",{"_index":733,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["get('ingredient/:id",{"_index":740,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["get('meal",{"_index":745,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["get('recipe/:id",{"_index":749,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["get('recipes/:id",{"_index":736,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["get('user/:id",{"_index":698,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["getallingredientusecase",{"_index":357,"title":{"classes/GetAllIngredientUseCase.html":{}},"body":{"classes/Delegate.html":{},"classes/GetAllIngredientUseCase.html":{},"coverage.html":{}}}],["getallingredientusecase(this.ingredientservice",{"_index":394,"title":{},"body":{"classes/Delegate.html":{}}}],["getallrecipesusecase",{"_index":367,"title":{"classes/GetAllRecipesUseCase.html":{}},"body":{"classes/Delegate.html":{},"classes/GetAllRecipesUseCase.html":{},"coverage.html":{}}}],["getallrecipesusecase(this.recipesservice",{"_index":400,"title":{},"body":{"classes/Delegate.html":{}}}],["getingredientbyid",{"_index":648,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["getingredientbyid(id",{"_index":680,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["getingredientbyname",{"_index":649,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["getingredientbyname(name",{"_index":683,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["getingredientbynameusecase",{"_index":361,"title":{"classes/GetIngredientByNameUseCase.html":{}},"body":{"classes/Delegate.html":{},"classes/GetIngredientByNameUseCase.html":{},"coverage.html":{}}}],["getingredientbynameusecase(this.ingredientservice",{"_index":396,"title":{},"body":{"classes/Delegate.html":{}}}],["getingredients",{"_index":650,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["getingredientusecase",{"_index":359,"title":{"classes/GetIngredientUseCase.html":{}},"body":{"classes/Delegate.html":{},"classes/GetIngredientUseCase.html":{},"coverage.html":{}}}],["getingredientusecase(this.ingredientservice",{"_index":395,"title":{},"body":{"classes/Delegate.html":{}}}],["getmealplanner",{"_index":651,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["getmealplanner(id",{"_index":688,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["getmealplannerusecase",{"_index":363,"title":{"classes/GetMealPlannerUseCase.html":{}},"body":{"classes/Delegate.html":{},"classes/GetMealPlannerUseCase.html":{},"coverage.html":{}}}],["getmealplannerusecase(this.mealplannerservice",{"_index":397,"title":{},"body":{"classes/Delegate.html":{}}}],["getrecipe",{"_index":1006,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["getrecipe(_id",{"_index":1007,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["getrecipes",{"_index":652,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["getrecipes(id",{"_index":691,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["getrecipesbyuserid",{"_index":653,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["getrecipesbyuserid(id",{"_index":694,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["getrecipeusecase",{"_index":365,"title":{"classes/GetRecipeUseCase.html":{}},"body":{"classes/Delegate.html":{},"classes/GetRecipeUseCase.html":{},"coverage.html":{}}}],["getrecipeusecase(this.recipesservice",{"_index":398,"title":{},"body":{"classes/Delegate.html":{}}}],["getting",{"_index":1142,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":654,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["getuser(@param('id",{"_index":747,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["getuser(id",{"_index":697,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["getuserusecase",{"_index":369,"title":{"classes/GetUserUseCase.html":{}},"body":{"classes/Delegate.html":{},"classes/GetUserUseCase.html":{},"coverage.html":{}}}],["getuserusecase(this.userservice",{"_index":399,"title":{},"body":{"classes/Delegate.html":{}}}],["global",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["google",{"_index":304,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IUserDomainModel.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{}}}],["googleid",{"_index":301,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IUserDomainModel.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserRepository.html":{}}}],["grow",{"_index":1264,"title":{},"body":{"index.html":{}}}],["guard",{"_index":108,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":110,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hacer",{"_index":1216,"title":{},"body":{"index.html":{}}}],["here",{"_index":1274,"title":{},"body":{"index.html":{}}}],["host",{"_index":620,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":629,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["https://nestjs.com",{"_index":1281,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":625,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["httpstatus.conflict",{"_index":634,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["hydrateddocument",{"_index":557,"title":{},"body":{"classes/IngredientMongo.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeMongo.html":{},"classes/UserMongo.html":{},"miscellaneous/typealiases.html":{}}}],["iauthservice",{"_index":162,"title":{"interfaces/IAuthService.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"coverage.html":{}}}],["ibaserepository",{"_index":423,"title":{"interfaces/IBaseRepository.html":{}},"body":{"interfaces/IBaseRepository.html":{},"injectables/IngredientRepository.html":{},"injectables/MealPlannerRepository.html":{},"injectables/RecipeRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["icreateingredientdto",{"_index":172,"title":{},"body":{"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"miscellaneous/typealiases.html":{}}}],["icreatemealplannerdto",{"_index":27,"title":{"interfaces/ICreateMealPlannerDto.html":{}},"body":{"classes/AmountDto.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"interfaces/ICreateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"coverage.html":{}}}],["icreaterecipedto",{"_index":257,"title":{"interfaces/ICreateRecipeDto.html":{}},"body":{"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"interfaces/ICreateRecipeDto.html":{},"classes/Ingredients.html":{},"coverage.html":{}}}],["icreateuserdto",{"_index":300,"title":{"interfaces/ICreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"interfaces/ICreateUserDto.html":{},"coverage.html":{}}}],["id",{"_index":25,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/Ingredients.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{}}}],["id.pipe",{"_index":730,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["id.pipe.ts",{"_index":1084,"title":{},"body":{"injectables/ValidateMongoId.html":{},"coverage.html":{}}}],["id.pipe.ts:26",{"_index":1090,"title":{},"body":{"injectables/ValidateMongoId.html":{}}}],["id.use",{"_index":414,"title":{},"body":{"classes/GetIngredientUseCase.html":{},"coverage.html":{}}}],["identifier",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":243,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["ids.map((id",{"_index":247,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["ifindall",{"_index":437,"title":{"interfaces/IFindAll.html":{}},"body":{"interfaces/IFindAll.html":{},"injectables/IngredientRepository.html":{},"injectables/RecipeRepository.html":{},"coverage.html":{}}}],["iingredientdomainmodel",{"_index":443,"title":{"interfaces/IIngredientDomainModel.html":{}},"body":{"interfaces/IIngredientDomainModel.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IRecipeDomainModel.html":{},"classes/IngredientDomainModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iingredientdomainmodel['_id",{"_index":464,"title":{},"body":{"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IRecipeDomainModel.html":{}}}],["iingredientservice",{"_index":194,"title":{"interfaces/IIngredientService.html":{}},"body":{"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/Delegate.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"interfaces/IIngredientService.html":{},"injectables/IngredientMongoService.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"coverage.html":{}}}],["imealplannerdomainmodel",{"_index":459,"title":{"interfaces/IMealPlannerDomainModel.html":{}},"body":{"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"classes/MealPlannerDomainModel.html":{},"coverage.html":{}}}],["imealplannerdomainmodel['_id",{"_index":500,"title":{},"body":{"interfaces/IUserDomainModel.html":{}}}],["imealplannerservice",{"_index":211,"title":{"interfaces/IMealPlannerService.html":{}},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"interfaces/IMealPlannerService.html":{},"injectables/MealPlannerMongoService.html":{},"classes/UpdateMealPlannerUseCase.html":{},"coverage.html":{}}}],["implements",{"_index":39,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"classes/Ingredients.html":{},"classes/JwtErrorExceptionFilter.html":{},"classes/MealPlannerDomainModel.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeDomainModel.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/ValidateMongoId.html":{}}}],["import",{"_index":26,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"modules/InfrastructureModule.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/Ingredients.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"modules/MongoModule.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{}}}],["imports",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/InfrastructureModule.html":{},"modules/MongoModule.html":{}}}],["incluir",{"_index":1198,"title":{},"body":{"index.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/Ingredients.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"modules/InfrastructureModule.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/Ingredients.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"modules/MongoModule.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{}}}],["información",{"_index":1213,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/InfrastructureModule.html":{}}}],["infrastructure/controllers/kitchen",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["infrastructure/dto/create",{"_index":711,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["infrastructure/dto/update",{"_index":715,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["infrastructure/infrastructure.module",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["infrastructure/models",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"classes/IngredientMongo.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeMongo.html":{},"classes/UserMongo.html":{}}}],["infrastructure/models/meal",{"_index":718,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["infrastructure/models/recipes.model",{"_index":721,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["infrastructure/persistence",{"_index":926,"title":{},"body":{"injectables/RecipeMongoService.html":{},"injectables/UserRepository.html":{}}}],["infrastructure/persistence/database/mongo/repositories/ingredient.repository",{"_index":579,"title":{},"body":{"injectables/IngredientMongoService.html":{}}}],["infrastructure/persistence/database/mongo/repositories/meal",{"_index":814,"title":{},"body":{"injectables/MealPlannerMongoService.html":{}}}],["infrastructure/persistence/database/mongo/repositories/recipe.repository",{"_index":927,"title":{},"body":{"injectables/RecipeMongoService.html":{}}}],["infrastructure/services",{"_index":726,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["infrastructure/services/secret",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["infrastructure/utils",{"_index":727,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["infrastructure/utils/exception",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["infrastructure/utils/pipes/mongo",{"_index":729,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["infrastructure/utils/services/auth.service",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"controllers/KitchenRecipesController.html":{}}}],["infrastructuremodule",{"_index":61,"title":{"modules/InfrastructureModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InfrastructureModule.html":{},"modules.html":{},"overview.html":{}}}],["ingesta",{"_index":1221,"title":{},"body":{"index.html":{}}}],["ingredient",{"_index":21,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/Delegate.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IIngredientService.html":{},"interfaces/IUpdateIngredientDto.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/Ingredients.html":{},"controllers/KitchenRecipesController.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ingredient.description",{"_index":974,"title":{},"body":{"classes/UpdateIngredientUseCase.html":{}}}],["ingredient.domain",{"_index":462,"title":{},"body":{"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IRecipeDomainModel.html":{},"classes/MealPlannerDomainModel.html":{},"classes/RecipeDomainModel.html":{}}}],["ingredient.dto",{"_index":712,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["ingredient.dto.ts",{"_index":171,"title":{},"body":{"classes/CreateIngredientDto.html":{},"interfaces/IUpdateIngredientDto.html":{},"classes/UpdateIngredientDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ingredient.dto.ts:20",{"_index":177,"title":{},"body":{"classes/CreateIngredientDto.html":{},"classes/UpdateIngredientDto.html":{}}}],["ingredient.dto.ts:28",{"_index":964,"title":{},"body":{"classes/UpdateIngredientDto.html":{}}}],["ingredient.dto.ts:29",{"_index":175,"title":{},"body":{"classes/CreateIngredientDto.html":{}}}],["ingredient.dto.ts:36",{"_index":965,"title":{},"body":{"classes/UpdateIngredientDto.html":{}}}],["ingredient.dto.ts:38",{"_index":179,"title":{},"body":{"classes/CreateIngredientDto.html":{}}}],["ingredient.ingredientid",{"_index":245,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["ingredient.name",{"_index":971,"title":{},"body":{"classes/UpdateIngredientUseCase.html":{}}}],["ingredient.photourl",{"_index":977,"title":{},"body":{"classes/UpdateIngredientUseCase.html":{}}}],["ingredient.schema",{"_index":796,"title":{},"body":{"classes/MealPlannerMongo.html":{},"classes/RecipeMongo.html":{}}}],["ingredient.use",{"_index":186,"title":{},"body":{"classes/CreateIngredientUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/UpdateIngredientUseCase.html":{},"coverage.html":{}}}],["ingredientdocument",{"_index":565,"title":{},"body":{"classes/IngredientMongo.html":{},"injectables/IngredientRepository.html":{},"miscellaneous/typealiases.html":{}}}],["ingredientdomainmodel",{"_index":201,"title":{"classes/IngredientDomainModel.html":{}},"body":{"classes/CreateIngredientUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IIngredientService.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"classes/MealPlannerDomainModel.html":{},"classes/RecipeDomainModel.html":{},"classes/UpdateIngredientUseCase.html":{},"coverage.html":{}}}],["ingredientdomainmodel:17",{"_index":539,"title":{},"body":{"classes/IngredientModel.html":{}}}],["ingredientdomainmodel:21",{"_index":548,"title":{},"body":{"classes/IngredientMongo.html":{}}}],["ingredientdomainmodel:23",{"_index":541,"title":{},"body":{"classes/IngredientModel.html":{}}}],["ingredientdomainmodel:29",{"_index":540,"title":{},"body":{"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{}}}],["ingredientdomainmodel:35",{"_index":542,"title":{},"body":{"classes/IngredientModel.html":{}}}],["ingredientdomainmodel:37",{"_index":550,"title":{},"body":{"classes/IngredientMongo.html":{}}}],["ingredientdomainmodel:45",{"_index":552,"title":{},"body":{"classes/IngredientMongo.html":{}}}],["ingredientdomainmodel['_id",{"_index":782,"title":{},"body":{"classes/MealPlannerDomainModel.html":{},"classes/RecipeDomainModel.html":{}}}],["ingredientdto",{"_index":531,"title":{"classes/IngredientDto.html":{}},"body":{"classes/IngredientDto.html":{},"classes/UpdateRecipeDto.html":{},"coverage.html":{}}}],["ingredientes",{"_index":1189,"title":{},"body":{"index.html":{}}}],["ingredientid",{"_index":13,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateRecipeDto.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"classes/IngredientDto.html":{},"classes/Ingredients.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateRecipeDto.html":{}}}],["ingredientmodel",{"_index":535,"title":{"classes/IngredientModel.html":{}},"body":{"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"controllers/KitchenRecipesController.html":{},"coverage.html":{}}}],["ingredientmongo",{"_index":543,"title":{"classes/IngredientMongo.html":{}},"body":{"classes/IngredientMongo.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/MealPlannerMongo.html":{},"modules/MongoModule.html":{},"classes/RecipeMongo.html":{},"coverage.html":{}}}],["ingredientmongo.name",{"_index":800,"title":{},"body":{"classes/MealPlannerMongo.html":{},"modules/MongoModule.html":{},"classes/RecipeMongo.html":{}}}],["ingredientmongo['_id",{"_index":798,"title":{},"body":{"classes/MealPlannerMongo.html":{},"classes/RecipeMongo.html":{}}}],["ingredientmongoservice",{"_index":566,"title":{"injectables/IngredientMongoService.html":{}},"body":{"injectables/IngredientMongoService.html":{},"injectables/IngredientService.html":{},"modules/MongoModule.html":{},"coverage.html":{},"overview.html":{}}}],["ingredientmongoservice:29",{"_index":605,"title":{},"body":{"injectables/IngredientService.html":{}}}],["ingredientmongoservice:38",{"_index":607,"title":{},"body":{"injectables/IngredientService.html":{}}}],["ingredientmongoservice:48",{"_index":609,"title":{},"body":{"injectables/IngredientService.html":{}}}],["ingredientmongoservice:56",{"_index":606,"title":{},"body":{"injectables/IngredientService.html":{}}}],["ingredientmongoservice:65",{"_index":608,"title":{},"body":{"injectables/IngredientService.html":{}}}],["ingredientrepository",{"_index":570,"title":{"injectables/IngredientRepository.html":{}},"body":{"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"modules/MongoModule.html":{},"coverage.html":{},"overview.html":{}}}],["ingredients",{"_index":258,"title":{"classes/Ingredients.html":{}},"body":{"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"classes/IngredientDto.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientRepository.html":{},"classes/Ingredients.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"classes/RecipesModel.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"coverage.html":{}}}],["ingredientservice",{"_index":212,"title":{"injectables/IngredientService.html":{}},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/Delegate.html":{},"modules/InfrastructureModule.html":{},"injectables/IngredientService.html":{},"controllers/KitchenRecipesController.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["ingredientsschema",{"_index":563,"title":{},"body":{"classes/IngredientMongo.html":{},"modules/MongoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ingresar",{"_index":1180,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":538,"title":{},"body":{"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientService.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerService.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":134,"title":{"injectables/AuthService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"injectables/MongooseConfigService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"injectables/MongooseConfigService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{},"coverage.html":{}}}],["injectables",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"injectables/MongooseConfigService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{},"overview.html":{}}}],["injectmodel",{"_index":594,"title":{},"body":{"injectables/IngredientRepository.html":{},"injectables/MealPlannerRepository.html":{},"injectables/RecipeRepository.html":{},"injectables/UserRepository.html":{}}}],["injectmodel(ingredientmongo.name",{"_index":598,"title":{},"body":{"injectables/IngredientRepository.html":{}}}],["injectmodel(mealplannermongo.name",{"_index":830,"title":{},"body":{"injectables/MealPlannerRepository.html":{}}}],["injectmodel(recipemongo.name",{"_index":943,"title":{},"body":{"injectables/RecipeRepository.html":{}}}],["injectmodel(usermongo.name",{"_index":1072,"title":{},"body":{"injectables/UserRepository.html":{}}}],["installation",{"_index":1243,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1245,"title":{},"body":{"index.html":{}}}],["instance",{"_index":120,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MongooseConfigService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{}}}],["interface",{"_index":35,"title":{"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{}},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateRecipeDto.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"classes/IngredientDto.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/Ingredients.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateRecipeDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["interface/find",{"_index":595,"title":{},"body":{"injectables/IngredientRepository.html":{},"injectables/RecipeRepository.html":{}}}],["interface/update.interface",{"_index":597,"title":{},"body":{"injectables/IngredientRepository.html":{},"injectables/MealPlannerRepository.html":{},"injectables/RecipeRepository.html":{}}}],["interfaces",{"_index":419,"title":{},"body":{"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"overview.html":{}}}],["interfaces/ingredient.domain",{"_index":530,"title":{},"body":{"classes/IngredientDomainModel.html":{}}}],["interfaces/meal",{"_index":781,"title":{},"body":{"classes/MealPlannerDomainModel.html":{}}}],["interfaces/recipes.domain",{"_index":902,"title":{},"body":{"classes/RecipeDomainModel.html":{}}}],["interfaces/user.domain",{"_index":1030,"title":{},"body":{"classes/UserDomainModel.html":{}}}],["irecipedomainmodel",{"_index":473,"title":{"interfaces/IRecipeDomainModel.html":{}},"body":{"interfaces/IRecipeDomainModel.html":{},"classes/RecipeDomainModel.html":{},"coverage.html":{}}}],["irecipeservice",{"_index":287,"title":{"interfaces/IRecipeService.html":{}},"body":{"classes/CreateRecipeUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetRecipeUseCase.html":{},"interfaces/IRecipeService.html":{},"injectables/RecipeMongoService.html":{},"classes/UpdateRecipeUseCase.html":{},"coverage.html":{}}}],["isarray",{"_index":29,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateRecipeDto.html":{},"classes/IngredientDto.html":{},"classes/Ingredients.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateRecipeDto.html":{}}}],["isarray()@isstring({each",{"_index":265,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["isarray()@validatenested({each",{"_index":204,"title":{},"body":{"classes/CreateMealPlannerDto.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateRecipeDto.html":{}}}],["isexistingredients",{"_index":286,"title":{},"body":{"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["isexistingredients(mealplanner",{"_index":986,"title":{},"body":{"classes/UpdateMealPlannerUseCase.html":{}}}],["isexistingredients(recipe",{"_index":291,"title":{},"body":{"classes/CreateRecipeUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["isexistrecipes",{"_index":210,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{}}}],["isexistrecipes(mealplanner",{"_index":219,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{}}}],["isglobal",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["ismongoid",{"_index":30,"title":{},"body":{"classes/AmountDto.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateRecipeDto.html":{},"classes/Ingredients.html":{}}}],["isnotempty",{"_index":31,"title":{},"body":{"classes/AmountDto.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateUserDto.html":{},"classes/Ingredients.html":{}}}],["isnotempty()@isnumber",{"_index":611,"title":{},"body":{"classes/Ingredients.html":{}}}],["isnotempty()@isstring",{"_index":176,"title":{},"body":{"classes/CreateIngredientDto.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateUserDto.html":{}}}],["isnotempty()@isstring()@ismongoid",{"_index":279,"title":{},"body":{"classes/CreateRecipeDto.html":{},"classes/Ingredients.html":{}}}],["isnotempty({each",{"_index":276,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["isnumber",{"_index":18,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateRecipeDto.html":{},"classes/IngredientDto.html":{},"classes/Ingredients.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateRecipeDto.html":{}}}],["isnumber()@isoptional",{"_index":1002,"title":{},"body":{"classes/UpdateRecipeDto.html":{}}}],["isnumber()@ispositive",{"_index":274,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["isoptional",{"_index":52,"title":{},"body":{"classes/AmountDto-1.html":{},"classes/IngredientDto.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateRecipeDto.html":{}}}],["isoptional()@isstring",{"_index":982,"title":{},"body":{"classes/UpdateMealPlannerDto.html":{}}}],["ispositive",{"_index":282,"title":{},"body":{"classes/CreateRecipeDto.html":{},"classes/Ingredients.html":{}}}],["isstring",{"_index":32,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateUserDto.html":{},"classes/IngredientDto.html":{},"classes/Ingredients.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateRecipeDto.html":{}}}],["isstring()@ismongoid",{"_index":23,"title":{},"body":{"classes/AmountDto.html":{}}}],["isstring()@isnotempty",{"_index":174,"title":{},"body":{"classes/CreateIngredientDto.html":{},"classes/CreateRecipeDto.html":{}}}],["isstring()@isoptional",{"_index":963,"title":{},"body":{"classes/UpdateIngredientDto.html":{},"classes/UpdateRecipeDto.html":{}}}],["isstring({each",{"_index":1004,"title":{},"body":{"classes/UpdateRecipeDto.html":{}}}],["isurl",{"_index":182,"title":{},"body":{"classes/CreateIngredientDto.html":{},"classes/CreateRecipeDto.html":{},"classes/Ingredients.html":{}}}],["isurl()@isnotempty",{"_index":178,"title":{},"body":{"classes/CreateIngredientDto.html":{},"classes/CreateRecipeDto.html":{}}}],["iupdateingredientdto",{"_index":486,"title":{"interfaces/IUpdateIngredientDto.html":{}},"body":{"interfaces/IUpdateIngredientDto.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"coverage.html":{}}}],["iupdatemealplannerdto",{"_index":51,"title":{"interfaces/IUpdateMealPlannerDto.html":{}},"body":{"classes/AmountDto-1.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerDto.html":{},"coverage.html":{}}}],["iupdaterecipesdto",{"_index":488,"title":{"interfaces/IUpdateRecipesDto.html":{}},"body":{"interfaces/IUpdateRecipesDto.html":{},"classes/IngredientDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"coverage.html":{}}}],["iupdaterepository",{"_index":490,"title":{"interfaces/IUpdateRepository.html":{}},"body":{"interfaces/IUpdateRepository.html":{},"injectables/IngredientRepository.html":{},"injectables/MealPlannerRepository.html":{},"injectables/RecipeRepository.html":{},"coverage.html":{}}}],["iusecase",{"_index":191,"title":{"interfaces/IUseCase.html":{}},"body":{"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IUseCase.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"coverage.html":{}}}],["iuserdomainmodel",{"_index":153,"title":{"interfaces/IUserDomainModel.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IAuthService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IUserDomainModel.html":{},"classes/UserDomainModel.html":{},"coverage.html":{}}}],["iuserdomainmodel['_id",{"_index":476,"title":{},"body":{"interfaces/IRecipeDomainModel.html":{}}}],["iuserservice",{"_index":214,"title":{"interfaces/IUserService.html":{}},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IUserService.html":{},"injectables/UserMongoService.html":{},"coverage.html":{}}}],["join",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["jsonwebtoken",{"_index":627,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{}}}],["jwt",{"_index":123,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwtconstants",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["jwterrorexceptionfilter",{"_index":74,"title":{"classes/JwtErrorExceptionFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/JwtErrorExceptionFilter.html":{},"coverage.html":{}}}],["jwtmodule",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule.register",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtservice",{"_index":117,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["kamil",{"_index":1278,"title":{},"body":{"index.html":{}}}],["kitchen",{"_index":640,"title":{},"body":{"controllers/KitchenRecipesController.html":{},"injectables/MongooseConfigService.html":{}}}],["kitchenrecipescontroller",{"_index":70,"title":{"controllers/KitchenRecipesController.html":{}},"body":{"modules/AppModule.html":{},"controllers/KitchenRecipesController.html":{},"coverage.html":{}}}],["la",{"_index":1172,"title":{},"body":{"index.html":{}}}],["las",{"_index":1204,"title":{},"body":{"index.html":{}}}],["license",{"_index":1284,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1261,"title":{},"body":{"index.html":{}}}],["list",{"_index":268,"title":{},"body":{"classes/CreateRecipeDto.html":{},"classes/IngredientDto.html":{},"classes/Ingredients.html":{},"classes/UpdateRecipeDto.html":{}}}],["listas",{"_index":1191,"title":{},"body":{"index.html":{}}}],["literal",{"_index":435,"title":{},"body":{"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"classes/RecipesModel.html":{}}}],["los",{"_index":1163,"title":{},"body":{"index.html":{}}}],["lowercase",{"_index":1041,"title":{},"body":{"classes/UserMongo.html":{}}}],["main",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["manera",{"_index":1236,"title":{},"body":{"index.html":{}}}],["mantener",{"_index":1230,"title":{},"body":{"index.html":{}}}],["map",{"_index":229,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["map((entity",{"_index":237,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["map((results",{"_index":252,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["matching",{"_index":46,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"modules/InfrastructureModule.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/Ingredients.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"modules/MongoModule.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["meal",{"_index":7,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["mealplanner",{"_index":217,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IUserService.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerService.html":{},"classes/UpdateMealPlannerUseCase.html":{},"injectables/UserMongoService.html":{},"injectables/UserService.html":{}}}],["mealplanner.amount",{"_index":993,"title":{},"body":{"classes/UpdateMealPlannerUseCase.html":{}}}],["mealplanner.amount.map((ingredient",{"_index":244,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{}}}],["mealplanner.name",{"_index":989,"title":{},"body":{"classes/UpdateMealPlannerUseCase.html":{}}}],["mealplanner.notes",{"_index":991,"title":{},"body":{"classes/UpdateMealPlannerUseCase.html":{}}}],["mealplannerdocument",{"_index":803,"title":{},"body":{"classes/MealPlannerMongo.html":{},"injectables/MealPlannerRepository.html":{},"miscellaneous/typealiases.html":{}}}],["mealplannerdomainmodel",{"_index":225,"title":{"classes/MealPlannerDomainModel.html":{}},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"interfaces/IMealPlannerService.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UserDomainModel.html":{},"coverage.html":{}}}],["mealplannerdomainmodel:18",{"_index":785,"title":{},"body":{"classes/MealPlannerModel.html":{}}}],["mealplannerdomainmodel:21",{"_index":792,"title":{},"body":{"classes/MealPlannerMongo.html":{}}}],["mealplannerdomainmodel:24",{"_index":787,"title":{},"body":{"classes/MealPlannerModel.html":{}}}],["mealplannerdomainmodel:29",{"_index":794,"title":{},"body":{"classes/MealPlannerMongo.html":{}}}],["mealplannerdomainmodel:30",{"_index":786,"title":{},"body":{"classes/MealPlannerModel.html":{}}}],["mealplannerdomainmodel:36",{"_index":788,"title":{},"body":{"classes/MealPlannerModel.html":{}}}],["mealplannerdomainmodel:45",{"_index":793,"title":{},"body":{"classes/MealPlannerMongo.html":{}}}],["mealplannerdomainmodel:53",{"_index":795,"title":{},"body":{"classes/MealPlannerMongo.html":{}}}],["mealplannerdomainmodel['_id",{"_index":1031,"title":{},"body":{"classes/UserDomainModel.html":{}}}],["mealplannerid",{"_index":499,"title":{},"body":{"interfaces/IUserDomainModel.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserRepository.html":{}}}],["mealplannermodel",{"_index":717,"title":{"classes/MealPlannerModel.html":{}},"body":{"controllers/KitchenRecipesController.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"coverage.html":{}}}],["mealplannermongo",{"_index":789,"title":{"classes/MealPlannerMongo.html":{}},"body":{"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"modules/MongoModule.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["mealplannermongo.name",{"_index":863,"title":{},"body":{"modules/MongoModule.html":{},"classes/UserMongo.html":{}}}],["mealplannermongo['_id",{"_index":1049,"title":{},"body":{"classes/UserMongo.html":{}}}],["mealplannermongoservice",{"_index":804,"title":{"injectables/MealPlannerMongoService.html":{}},"body":{"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerService.html":{},"modules/MongoModule.html":{},"coverage.html":{},"overview.html":{}}}],["mealplannermongoservice:30",{"_index":833,"title":{},"body":{"injectables/MealPlannerService.html":{}}}],["mealplannermongoservice:39",{"_index":835,"title":{},"body":{"injectables/MealPlannerService.html":{}}}],["mealplannermongoservice:49",{"_index":836,"title":{},"body":{"injectables/MealPlannerService.html":{}}}],["mealplannermongoservice:61",{"_index":834,"title":{},"body":{"injectables/MealPlannerService.html":{}}}],["mealplannerrepository",{"_index":807,"title":{"injectables/MealPlannerRepository.html":{}},"body":{"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"modules/MongoModule.html":{},"coverage.html":{},"overview.html":{}}}],["mealplannerschema",{"_index":801,"title":{},"body":{"classes/MealPlannerMongo.html":{},"modules/MongoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mealplannerservice",{"_index":337,"title":{"injectables/MealPlannerService.html":{}},"body":{"classes/Delegate.html":{},"modules/InfrastructureModule.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MealPlannerService.html":{},"coverage.html":{},"overview.html":{}}}],["menús",{"_index":1195,"title":{},"body":{"index.html":{}}}],["message",{"_index":631,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["metadata",{"_index":1088,"title":{},"body":{"injectables/ValidateMongoId.html":{},"dependencies.html":{}}}],["methods",{"_index":113,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{}}}],["miscellaneous",{"_index":1138,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1260,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1251,"title":{},"body":{"index.html":{}}}],["model",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"classes/IngredientModel.html":{},"injectables/IngredientRepository.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"injectables/MealPlannerRepository.html":{},"classes/RecipeDomainModel.html":{},"injectables/RecipeRepository.html":{},"classes/RecipesModel.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["model.interface",{"_index":463,"title":{},"body":{"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IUserDomainModel.html":{},"classes/IngredientDomainModel.html":{},"classes/MealPlannerDomainModel.html":{},"classes/RecipeDomainModel.html":{},"classes/UserDomainModel.html":{}}}],["model.interface.ts",{"_index":445,"title":{},"body":{"interfaces/IIngredientDomainModel.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IUserDomainModel.html":{},"coverage.html":{}}}],["model.ts",{"_index":525,"title":{},"body":{"classes/IngredientDomainModel.html":{},"classes/MealPlannerDomainModel.html":{},"classes/RecipeDomainModel.html":{},"classes/UserDomainModel.html":{},"coverage.html":{}}}],["model.ts:17",{"_index":526,"title":{},"body":{"classes/IngredientDomainModel.html":{}}}],["model.ts:18",{"_index":777,"title":{},"body":{"classes/MealPlannerDomainModel.html":{},"classes/UserDomainModel.html":{}}}],["model.ts:19",{"_index":892,"title":{},"body":{"classes/RecipeDomainModel.html":{}}}],["model.ts:23",{"_index":528,"title":{},"body":{"classes/IngredientDomainModel.html":{}}}],["model.ts:24",{"_index":779,"title":{},"body":{"classes/MealPlannerDomainModel.html":{},"classes/UserDomainModel.html":{}}}],["model.ts:25",{"_index":895,"title":{},"body":{"classes/RecipeDomainModel.html":{}}}],["model.ts:29",{"_index":527,"title":{},"body":{"classes/IngredientDomainModel.html":{}}}],["model.ts:30",{"_index":778,"title":{},"body":{"classes/MealPlannerDomainModel.html":{},"classes/UserDomainModel.html":{}}}],["model.ts:31",{"_index":893,"title":{},"body":{"classes/RecipeDomainModel.html":{}}}],["model.ts:35",{"_index":529,"title":{},"body":{"classes/IngredientDomainModel.html":{}}}],["model.ts:36",{"_index":780,"title":{},"body":{"classes/MealPlannerDomainModel.html":{},"classes/UserDomainModel.html":{}}}],["model.ts:37",{"_index":894,"title":{},"body":{"classes/RecipeDomainModel.html":{}}}],["model.ts:42",{"_index":1029,"title":{},"body":{"classes/UserDomainModel.html":{}}}],["model.ts:43",{"_index":898,"title":{},"body":{"classes/RecipeDomainModel.html":{}}}],["model.ts:48",{"_index":1028,"title":{},"body":{"classes/UserDomainModel.html":{}}}],["model.ts:49",{"_index":900,"title":{},"body":{"classes/RecipeDomainModel.html":{}}}],["model.ts:55",{"_index":896,"title":{},"body":{"classes/RecipeDomainModel.html":{}}}],["model.ts:61",{"_index":899,"title":{},"body":{"classes/RecipeDomainModel.html":{}}}],["model.ts:67",{"_index":897,"title":{},"body":{"classes/RecipeDomainModel.html":{}}}],["model.ts:73",{"_index":901,"title":{},"body":{"classes/RecipeDomainModel.html":{}}}],["models/user.model",{"_index":731,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["module",{"_index":54,"title":{"modules/AppModule.html":{},"modules/InfrastructureModule.html":{},"modules/MongoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InfrastructureModule.html":{},"modules/MongoModule.html":{},"injectables/MongooseConfigService.html":{}}}],["modules",{"_index":56,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/InfrastructureModule.html":{},"modules/MongoModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":568,"title":{},"body":{"injectables/IngredientMongoService.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/UserMongoService.html":{},"injectables/ValidateMongoId.html":{}}}],["mongodb",{"_index":869,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{},"injectables/ValidateMongoId.html":{},"dependencies.html":{}}}],["mongodb://mongo:0cqhiabzlpby2op9ywsz@containers",{"_index":887,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["mongomodule",{"_index":514,"title":{"modules/MongoModule.html":{}},"body":{"modules/InfrastructureModule.html":{},"modules/MongoModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":559,"title":{},"body":{"classes/IngredientMongo.html":{},"injectables/IngredientRepository.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeRepository.html":{},"classes/UserMongo.html":{},"injectables/UserRepository.html":{},"dependencies.html":{}}}],["mongooseconfigservice",{"_index":845,"title":{"injectables/MongooseConfigService.html":{}},"body":{"modules/MongoModule.html":{},"injectables/MongooseConfigService.html":{},"coverage.html":{},"overview.html":{}}}],["mongoosemodule",{"_index":847,"title":{},"body":{"modules/MongoModule.html":{}}}],["mongoosemodule.forfeature",{"_index":861,"title":{},"body":{"modules/MongoModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":860,"title":{},"body":{"modules/MongoModule.html":{}}}],["mongoosemoduleoptions",{"_index":879,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["mongooseoptionsfactory",{"_index":885,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["mongoservererror",{"_index":868,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{}}}],["mongoservererrorexceptionfilter",{"_index":88,"title":{"classes/MongoServerErrorExceptionFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["more",{"_index":1273,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":1279,"title":{},"body":{"index.html":{}}}],["más",{"_index":1237,"title":{},"body":{"index.html":{}}}],["móvil",{"_index":1178,"title":{},"body":{"index.html":{}}}],["name",{"_index":44,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/Ingredients.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"modules/MongoModule.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{}}}],["name.use",{"_index":411,"title":{},"body":{"classes/GetIngredientByNameUseCase.html":{},"coverage.html":{}}}],["name/:name",{"_index":685,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["necesarios",{"_index":1193,"title":{},"body":{"index.html":{}}}],["nest",{"_index":1240,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1283,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"modules/InfrastructureModule.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"modules/MongoModule.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"injectables/MongooseConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":556,"title":{},"body":{"classes/IngredientMongo.html":{},"injectables/IngredientRepository.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerRepository.html":{},"modules/MongoModule.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeRepository.html":{},"classes/UserMongo.html":{},"injectables/UserRepository.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":240,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/Delegate.html":{},"classes/GetUserUseCase.html":{},"injectables/IngredientRepository.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MealPlannerRepository.html":{},"injectables/RecipeRepository.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"injectables/UserRepository.html":{},"injectables/ValidateMongoId.html":{},"coverage.html":{}}}],["node.js",{"_index":1145,"title":{},"body":{"index.html":{}}}],["notas",{"_index":1207,"title":{},"body":{"index.html":{}}}],["notes",{"_index":43,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateRecipeDto.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"classes/IngredientDto.html":{},"classes/Ingredients.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"classes/RecipesModel.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateRecipeDto.html":{}}}],["notfoundexception",{"_index":226,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["notfoundexception('ingredient",{"_index":296,"title":{},"body":{"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["notfoundexception('recipe",{"_index":241,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{}}}],["notfoundexception('user",{"_index":418,"title":{},"body":{"classes/GetUserUseCase.html":{}}}],["npm",{"_index":1244,"title":{},"body":{"index.html":{}}}],["null",{"_index":249,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["number",{"_index":16,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateRecipeDto.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"classes/IngredientDto.html":{},"classes/Ingredients.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"classes/RecipesModel.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateRecipeDto.html":{}}}],["nutricional",{"_index":1214,"title":{},"body":{"index.html":{}}}],["nutrition",{"_index":272,"title":{},"body":{"classes/CreateRecipeDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IUpdateRecipesDto.html":{},"classes/IngredientDto.html":{},"classes/Ingredients.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"classes/RecipesModel.html":{},"classes/UpdateRecipeDto.html":{}}}],["nutritioninfo",{"_index":259,"title":{},"body":{"classes/CreateRecipeDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IUpdateRecipesDto.html":{},"classes/IngredientDto.html":{},"classes/Ingredients.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"classes/RecipesModel.html":{},"classes/UpdateRecipeDto.html":{}}}],["o",{"_index":1177,"title":{},"body":{"index.html":{}}}],["object",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objectid",{"_index":1093,"title":{},"body":{"injectables/ValidateMongoId.html":{}}}],["objectid(value",{"_index":1096,"title":{},"body":{"injectables/ValidateMongoId.html":{}}}],["objectid.isvalid(value",{"_index":1094,"title":{},"body":{"injectables/ValidateMongoId.html":{}}}],["observable",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["observables",{"_index":246,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["of(false",{"_index":250,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["open",{"_index":1262,"title":{},"body":{"index.html":{}}}],["optional",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientModel.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{}}}],["options",{"_index":880,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["organizar",{"_index":1165,"title":{},"body":{"index.html":{}}}],["out",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/InfrastructureModule.html":{},"modules/MongoModule.html":{},"overview.html":{}}}],["overview",{"_index":1288,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1124,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":1161,"title":{},"body":{"index.html":{}}}],["param",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/ValidateMongoId.html":{}}}],["param('id",{"_index":737,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["param('name",{"_index":742,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["parameters",{"_index":121,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{}}}],["path",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["permitir",{"_index":1186,"title":{},"body":{"index.html":{}}}],["persistence/database/mongo/mongo.module",{"_index":518,"title":{},"body":{"modules/InfrastructureModule.html":{}}}],["persistence/database/mongo/services/ingredient.service",{"_index":610,"title":{},"body":{"injectables/IngredientService.html":{}}}],["persistence/database/mongo/services/meal",{"_index":837,"title":{},"body":{"injectables/MealPlannerService.html":{}}}],["persistence/database/mongo/services/recipe.service",{"_index":951,"title":{},"body":{"injectables/RecipeService.html":{}}}],["persistence/database/mongo/services/user.service",{"_index":1082,"title":{},"body":{"injectables/UserService.html":{}}}],["personalización",{"_index":1200,"title":{},"body":{"index.html":{}}}],["personas",{"_index":1227,"title":{},"body":{"index.html":{}}}],["photo",{"_index":180,"title":{},"body":{"classes/CreateIngredientDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUserDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientMongo.html":{},"classes/Ingredients.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{}}}],["photourl",{"_index":173,"title":{},"body":{"classes/CreateIngredientDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUserDomainModel.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"classes/Ingredients.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{}}}],["pipetransform",{"_index":1092,"title":{},"body":{"injectables/ValidateMongoId.html":{}}}],["placeholder",{"_index":623,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["planificada",{"_index":1239,"title":{},"body":{"index.html":{}}}],["planificar",{"_index":1194,"title":{},"body":{"index.html":{}}}],["planner",{"_index":40,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["planner.domain",{"_index":461,"title":{},"body":{"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IUserDomainModel.html":{},"classes/MealPlannerDomainModel.html":{},"classes/UserDomainModel.html":{},"coverage.html":{}}}],["planner.dto",{"_index":713,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["planner.dto.ts",{"_index":8,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateMealPlannerDto.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerDto.html":{},"coverage.html":{}}}],["planner.dto.ts:26",{"_index":983,"title":{},"body":{"classes/UpdateMealPlannerDto.html":{}}}],["planner.dto.ts:27",{"_index":205,"title":{},"body":{"classes/CreateMealPlannerDto.html":{}}}],["planner.dto.ts:35",{"_index":981,"title":{},"body":{"classes/UpdateMealPlannerDto.html":{}}}],["planner.dto.ts:36",{"_index":207,"title":{},"body":{"classes/CreateMealPlannerDto.html":{}}}],["planner.dto.ts:43",{"_index":984,"title":{},"body":{"classes/UpdateMealPlannerDto.html":{}}}],["planner.dto.ts:45",{"_index":206,"title":{},"body":{"classes/CreateMealPlannerDto.html":{}}}],["planner.dto.ts:59",{"_index":49,"title":{},"body":{"classes/AmountDto-1.html":{}}}],["planner.dto.ts:61",{"_index":20,"title":{},"body":{"classes/AmountDto.html":{}}}],["planner.dto.ts:66",{"_index":50,"title":{},"body":{"classes/AmountDto-1.html":{}}}],["planner.dto.ts:69",{"_index":24,"title":{},"body":{"classes/AmountDto.html":{}}}],["planner.model",{"_index":719,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["planner.model.ts",{"_index":784,"title":{},"body":{"classes/MealPlannerModel.html":{},"coverage.html":{}}}],["planner.repository",{"_index":815,"title":{},"body":{"injectables/MealPlannerMongoService.html":{},"modules/MongoModule.html":{}}}],["planner.repository.ts",{"_index":823,"title":{},"body":{"injectables/MealPlannerRepository.html":{},"coverage.html":{}}}],["planner.repository.ts:26",{"_index":824,"title":{},"body":{"injectables/MealPlannerRepository.html":{}}}],["planner.repository.ts:44",{"_index":829,"title":{},"body":{"injectables/MealPlannerRepository.html":{}}}],["planner.repository.ts:54",{"_index":825,"title":{},"body":{"injectables/MealPlannerRepository.html":{}}}],["planner.repository.ts:64",{"_index":828,"title":{},"body":{"injectables/MealPlannerRepository.html":{}}}],["planner.repository.ts:74",{"_index":827,"title":{},"body":{"injectables/MealPlannerRepository.html":{}}}],["planner.schema",{"_index":817,"title":{},"body":{"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"modules/MongoModule.html":{},"classes/UserMongo.html":{}}}],["planner.schema.ts",{"_index":791,"title":{},"body":{"classes/MealPlannerMongo.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["planner.service",{"_index":521,"title":{},"body":{"modules/InfrastructureModule.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerService.html":{},"modules/MongoModule.html":{}}}],["planner.service.ts",{"_index":466,"title":{},"body":{"interfaces/IMealPlannerService.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerService.html":{},"coverage.html":{}}}],["planner.service.ts:15",{"_index":808,"title":{},"body":{"injectables/MealPlannerMongoService.html":{}}}],["planner.service.ts:21",{"_index":467,"title":{},"body":{"interfaces/IMealPlannerService.html":{}}}],["planner.service.ts:29",{"_index":470,"title":{},"body":{"interfaces/IMealPlannerService.html":{}}}],["planner.service.ts:30",{"_index":809,"title":{},"body":{"injectables/MealPlannerMongoService.html":{}}}],["planner.service.ts:38",{"_index":471,"title":{},"body":{"interfaces/IMealPlannerService.html":{}}}],["planner.service.ts:39",{"_index":811,"title":{},"body":{"injectables/MealPlannerMongoService.html":{}}}],["planner.service.ts:46",{"_index":469,"title":{},"body":{"interfaces/IMealPlannerService.html":{}}}],["planner.service.ts:49",{"_index":812,"title":{},"body":{"injectables/MealPlannerMongoService.html":{}}}],["planner.service.ts:61",{"_index":810,"title":{},"body":{"injectables/MealPlannerMongoService.html":{}}}],["planner.use",{"_index":209,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"coverage.html":{}}}],["planner/:id",{"_index":663,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["planners",{"_index":797,"title":{},"body":{"classes/MealPlannerMongo.html":{}}}],["please",{"_index":1271,"title":{},"body":{"index.html":{}}}],["por",{"_index":1188,"title":{},"body":{"index.html":{}}}],["porciones",{"_index":1205,"title":{},"body":{"index.html":{}}}],["post",{"_index":723,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["post('ingredient",{"_index":758,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["post('meal",{"_index":761,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["post('recipe",{"_index":763,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["post('user",{"_index":669,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["private",{"_index":232,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/GetUserUseCase.html":{},"injectables/IngredientRepository.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MealPlannerRepository.html":{},"injectables/RecipeRepository.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"injectables/UserRepository.html":{}}}],["process.cwd",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":1253,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1144,"title":{},"body":{"index.html":{}}}],["project",{"_index":1263,"title":{},"body":{"index.html":{}}}],["prop",{"_index":553,"title":{},"body":{"classes/IngredientMongo.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeMongo.html":{},"classes/UserMongo.html":{}}}],["prop({type",{"_index":545,"title":{},"body":{"classes/IngredientMongo.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeMongo.html":{},"classes/UserMongo.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateUserDto.html":{},"classes/Delegate.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUserDomainModel.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"classes/Ingredients.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"properties.html":{}}}],["proporcionar",{"_index":1212,"title":{},"body":{"index.html":{}}}],["provide",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/InfrastructureModule.html":{},"modules/MongoModule.html":{}}}],["public",{"_index":408,"title":{},"body":{"classes/DeleteRecipeUseCase.html":{}}}],["puede",{"_index":1185,"title":{},"body":{"index.html":{}}}],["pueden",{"_index":1170,"title":{},"body":{"index.html":{}}}],["put",{"_index":724,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["put('ingredient/:id",{"_index":770,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["put('meal",{"_index":772,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["put('recipe/:id",{"_index":774,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["que",{"_index":1228,"title":{},"body":{"index.html":{}}}],["quieren",{"_index":1229,"title":{},"body":{"index.html":{}}}],["read",{"_index":1272,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MongooseConfigService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{}}}],["receta",{"_index":1210,"title":{},"body":{"index.html":{}}}],["recetas",{"_index":1155,"title":{},"body":{"index.html":{}}}],["recipe",{"_index":264,"title":{},"body":{"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetRecipeUseCase.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateRecipesDto.html":{},"classes/IngredientDto.html":{},"classes/Ingredients.html":{},"controllers/KitchenRecipesController.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["recipe.description",{"_index":1012,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["recipe.dto",{"_index":716,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["recipe.dto.ts",{"_index":256,"title":{},"body":{"classes/CreateRecipeDto.html":{},"interfaces/ICreateRecipeDto.html":{},"classes/IngredientDto.html":{},"classes/Ingredients.html":{},"classes/UpdateRecipeDto.html":{},"coverage.html":{}}}],["recipe.dto.ts:104",{"_index":280,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["recipe.dto.ts:106",{"_index":533,"title":{},"body":{"classes/IngredientDto.html":{}}}],["recipe.dto.ts:121",{"_index":612,"title":{},"body":{"classes/Ingredients.html":{}}}],["recipe.dto.ts:130",{"_index":613,"title":{},"body":{"classes/Ingredients.html":{}}}],["recipe.dto.ts:26",{"_index":999,"title":{},"body":{"classes/UpdateRecipeDto.html":{}}}],["recipe.dto.ts:29",{"_index":269,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["recipe.dto.ts:35",{"_index":998,"title":{},"body":{"classes/UpdateRecipeDto.html":{}}}],["recipe.dto.ts:38",{"_index":263,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["recipe.dto.ts:43",{"_index":997,"title":{},"body":{"classes/UpdateRecipeDto.html":{}}}],["recipe.dto.ts:48",{"_index":267,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["recipe.dto.ts:51",{"_index":1001,"title":{},"body":{"classes/UpdateRecipeDto.html":{}}}],["recipe.dto.ts:57",{"_index":273,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["recipe.dto.ts:59",{"_index":1005,"title":{},"body":{"classes/UpdateRecipeDto.html":{}}}],["recipe.dto.ts:67",{"_index":278,"title":{},"body":{"classes/CreateRecipeDto.html":{},"classes/UpdateRecipeDto.html":{}}}],["recipe.dto.ts:75",{"_index":1003,"title":{},"body":{"classes/UpdateRecipeDto.html":{}}}],["recipe.dto.ts:76",{"_index":270,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["recipe.dto.ts:83",{"_index":1000,"title":{},"body":{"classes/UpdateRecipeDto.html":{}}}],["recipe.dto.ts:85",{"_index":275,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["recipe.dto.ts:94",{"_index":271,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["recipe.dto.ts:99",{"_index":532,"title":{},"body":{"classes/IngredientDto.html":{}}}],["recipe.ingredients",{"_index":1025,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["recipe.ingredients.map((ingredient",{"_index":297,"title":{},"body":{"classes/CreateRecipeUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["recipe.name",{"_index":1011,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["recipe.notes",{"_index":1015,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["recipe.nutritioninfo",{"_index":1023,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["recipe.photourl",{"_index":1013,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["recipe.servings",{"_index":1020,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["recipe.steps",{"_index":1017,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["recipe.use",{"_index":285,"title":{},"body":{"classes/CreateRecipeUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"coverage.html":{}}}],["recipedocument",{"_index":916,"title":{},"body":{"classes/RecipeMongo.html":{},"injectables/RecipeRepository.html":{},"miscellaneous/typealiases.html":{}}}],["recipedomainmodel",{"_index":293,"title":{"classes/RecipeDomainModel.html":{}},"body":{"classes/CreateRecipeUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetRecipeUseCase.html":{},"interfaces/IRecipeService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"classes/RecipesModel.html":{},"classes/UpdateRecipeUseCase.html":{},"coverage.html":{}}}],["recipedomainmodel:102",{"_index":914,"title":{},"body":{"classes/RecipeMongo.html":{}}}],["recipedomainmodel:19",{"_index":953,"title":{},"body":{"classes/RecipesModel.html":{}}}],["recipedomainmodel:22",{"_index":905,"title":{},"body":{"classes/RecipeMongo.html":{}}}],["recipedomainmodel:25",{"_index":956,"title":{},"body":{"classes/RecipesModel.html":{}}}],["recipedomainmodel:30",{"_index":908,"title":{},"body":{"classes/RecipeMongo.html":{}}}],["recipedomainmodel:31",{"_index":954,"title":{},"body":{"classes/RecipesModel.html":{}}}],["recipedomainmodel:37",{"_index":955,"title":{},"body":{"classes/RecipesModel.html":{}}}],["recipedomainmodel:38",{"_index":906,"title":{},"body":{"classes/RecipeMongo.html":{}}}],["recipedomainmodel:43",{"_index":959,"title":{},"body":{"classes/RecipesModel.html":{}}}],["recipedomainmodel:49",{"_index":961,"title":{},"body":{"classes/RecipesModel.html":{}}}],["recipedomainmodel:54",{"_index":907,"title":{},"body":{"classes/RecipeMongo.html":{}}}],["recipedomainmodel:55",{"_index":957,"title":{},"body":{"classes/RecipesModel.html":{}}}],["recipedomainmodel:61",{"_index":960,"title":{},"body":{"classes/RecipesModel.html":{}}}],["recipedomainmodel:62",{"_index":911,"title":{},"body":{"classes/RecipeMongo.html":{}}}],["recipedomainmodel:67",{"_index":958,"title":{},"body":{"classes/RecipesModel.html":{}}}],["recipedomainmodel:70",{"_index":913,"title":{},"body":{"classes/RecipeMongo.html":{}}}],["recipedomainmodel:73",{"_index":962,"title":{},"body":{"classes/RecipesModel.html":{}}}],["recipedomainmodel:78",{"_index":909,"title":{},"body":{"classes/RecipeMongo.html":{}}}],["recipedomainmodel:86",{"_index":912,"title":{},"body":{"classes/RecipeMongo.html":{}}}],["recipedomainmodel:94",{"_index":910,"title":{},"body":{"classes/RecipeMongo.html":{}}}],["recipemongo",{"_index":853,"title":{"classes/RecipeMongo.html":{}},"body":{"modules/MongoModule.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"coverage.html":{}}}],["recipemongo.name",{"_index":864,"title":{},"body":{"modules/MongoModule.html":{}}}],["recipemongoservice",{"_index":841,"title":{"injectables/RecipeMongoService.html":{}},"body":{"modules/MongoModule.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeService.html":{},"coverage.html":{},"overview.html":{}}}],["recipemongoservice:29",{"_index":946,"title":{},"body":{"injectables/RecipeService.html":{}}}],["recipemongoservice:38",{"_index":949,"title":{},"body":{"injectables/RecipeService.html":{}}}],["recipemongoservice:48",{"_index":950,"title":{},"body":{"injectables/RecipeService.html":{}}}],["recipemongoservice:57",{"_index":947,"title":{},"body":{"injectables/RecipeService.html":{}}}],["recipemongoservice:67",{"_index":948,"title":{},"body":{"injectables/RecipeService.html":{}}}],["reciperepository",{"_index":842,"title":{"injectables/RecipeRepository.html":{}},"body":{"modules/MongoModule.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"coverage.html":{},"overview.html":{}}}],["recipes",{"_index":222,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateRecipesDto.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{}}}],["recipes.controller",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["recipes.controller.ts",{"_index":639,"title":{},"body":{"controllers/KitchenRecipesController.html":{},"coverage.html":{}}}],["recipes.controller.ts:112",{"_index":682,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["recipes.controller.ts:127",{"_index":686,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["recipes.controller.ts:142",{"_index":690,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["recipes.controller.ts:159",{"_index":699,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["recipes.controller.ts:175",{"_index":693,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["recipes.controller.ts:190",{"_index":673,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["recipes.controller.ts:205",{"_index":676,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["recipes.controller.ts:220",{"_index":679,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["recipes.controller.ts:233",{"_index":660,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["recipes.controller.ts:249",{"_index":664,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["recipes.controller.ts:265",{"_index":667,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["recipes.controller.ts:280",{"_index":670,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["recipes.controller.ts:297",{"_index":703,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["recipes.controller.ts:314",{"_index":706,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["recipes.controller.ts:331",{"_index":709,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["recipes.controller.ts:84",{"_index":687,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["recipes.controller.ts:97",{"_index":696,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["recipes.dto.ts",{"_index":489,"title":{},"body":{"interfaces/IUpdateRecipesDto.html":{},"coverage.html":{}}}],["recipes.use",{"_index":379,"title":{},"body":{"classes/Delegate.html":{},"classes/GetAllRecipesUseCase.html":{},"coverage.html":{}}}],["recipeservice",{"_index":515,"title":{"injectables/RecipeService.html":{}},"body":{"modules/InfrastructureModule.html":{},"controllers/KitchenRecipesController.html":{},"injectables/RecipeService.html":{},"coverage.html":{},"overview.html":{}}}],["recipesmodel",{"_index":720,"title":{"classes/RecipesModel.html":{}},"body":{"controllers/KitchenRecipesController.html":{},"classes/RecipeMongo.html":{},"classes/RecipesModel.html":{},"coverage.html":{}}}],["recipesschema",{"_index":854,"title":{},"body":{"modules/MongoModule.html":{},"classes/RecipeMongo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recipesservice",{"_index":339,"title":{},"body":{"classes/Delegate.html":{}}}],["ref",{"_index":799,"title":{},"body":{"classes/MealPlannerMongo.html":{},"classes/RecipeMongo.html":{},"classes/UserMongo.html":{}}}],["reflect",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["repositories",{"_index":1060,"title":{},"body":{"injectables/UserMongoService.html":{}}}],["repositories/ingredient.repository",{"_index":849,"title":{},"body":{"modules/MongoModule.html":{}}}],["repositories/meal",{"_index":850,"title":{},"body":{"modules/MongoModule.html":{}}}],["repositories/recipe.repository",{"_index":851,"title":{},"body":{"modules/MongoModule.html":{}}}],["repositories/user.repository",{"_index":852,"title":{},"body":{"modules/MongoModule.html":{}}}],["repository",{"_index":426,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/IFindAll.html":{},"interfaces/IUpdateRepository.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"index.html":{}}}],["request",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.headers.login",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{}}}],["required",{"_index":549,"title":{},"body":{"classes/IngredientMongo.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeMongo.html":{},"classes/UserMongo.html":{}}}],["reset",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/InfrastructureModule.html":{},"modules/MongoModule.html":{},"overview.html":{}}}],["response",{"_index":343,"title":{},"body":{"classes/Delegate.html":{},"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["response.status(statuscode).json",{"_index":636,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["result",{"_index":254,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["results",{"_index":45,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"modules/InfrastructureModule.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/Ingredients.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"modules/MongoModule.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.every((result",{"_index":253,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["return",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MongooseConfigService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/ValidateMongoId.html":{}}}],["returns",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{}}}],["run",{"_index":1248,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"dependencies.html":{}}}],["saludables",{"_index":1218,"title":{},"body":{"index.html":{}}}],["scalable",{"_index":1149,"title":{},"body":{"index.html":{}}}],["schema",{"_index":554,"title":{},"body":{"classes/IngredientMongo.html":{},"classes/MealPlannerMongo.html":{},"modules/MongoModule.html":{},"classes/RecipeMongo.html":{},"classes/UserMongo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schemafactory",{"_index":555,"title":{},"body":{"classes/IngredientMongo.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeMongo.html":{},"classes/UserMongo.html":{}}}],["schemafactory.createforclass(ingredientmongo",{"_index":564,"title":{},"body":{"classes/IngredientMongo.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(mealplannermongo",{"_index":802,"title":{},"body":{"classes/MealPlannerMongo.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(recipemongo",{"_index":915,"title":{},"body":{"classes/RecipeMongo.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(usermongo",{"_index":1050,"title":{},"body":{"classes/UserMongo.html":{},"miscellaneous/variables.html":{}}}],["schemas",{"_index":942,"title":{},"body":{"injectables/RecipeRepository.html":{},"injectables/UserMongoService.html":{}}}],["schemas/ingredient.schema",{"_index":580,"title":{},"body":{"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"modules/MongoModule.html":{}}}],["schemas/meal",{"_index":816,"title":{},"body":{"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"modules/MongoModule.html":{}}}],["schemas/recipe.schema",{"_index":855,"title":{},"body":{"modules/MongoModule.html":{}}}],["schemas/user.schema",{"_index":858,"title":{},"body":{"modules/MongoModule.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{}}}],["schematypes",{"_index":558,"title":{},"body":{"classes/IngredientMongo.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeMongo.html":{},"classes/UserMongo.html":{}}}],["schematypes.objectid",{"_index":562,"title":{},"body":{"classes/IngredientMongo.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeMongo.html":{},"classes/UserMongo.html":{}}}],["secret",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["secret.ts",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seguimiento",{"_index":1231,"title":{},"body":{"index.html":{}}}],["semanales",{"_index":1196,"title":{},"body":{"index.html":{}}}],["ser",{"_index":1224,"title":{},"body":{"index.html":{}}}],["server",{"_index":866,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{},"coverage.html":{},"index.html":{}}}],["service",{"_index":124,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUserService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientService.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerService.html":{},"injectables/MongooseConfigService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeService.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"injectables/UserMongoService.html":{},"injectables/UserService.html":{}}}],["services/ingredient.service",{"_index":519,"title":{},"body":{"modules/InfrastructureModule.html":{},"modules/MongoModule.html":{}}}],["services/meal",{"_index":520,"title":{},"body":{"modules/InfrastructureModule.html":{},"modules/MongoModule.html":{}}}],["services/recipe..service",{"_index":522,"title":{},"body":{"modules/InfrastructureModule.html":{}}}],["services/recipe.service",{"_index":859,"title":{},"body":{"modules/MongoModule.html":{}}}],["services/user.service",{"_index":523,"title":{},"body":{"modules/InfrastructureModule.html":{},"modules/MongoModule.html":{}}}],["servings",{"_index":260,"title":{},"body":{"classes/CreateRecipeDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IUpdateRecipesDto.html":{},"classes/IngredientDto.html":{},"classes/Ingredients.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"classes/RecipesModel.html":{},"classes/UpdateRecipeDto.html":{}}}],["side",{"_index":1150,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["sitio",{"_index":1175,"title":{},"body":{"index.html":{}}}],["sobre",{"_index":1215,"title":{},"body":{"index.html":{}}}],["software",{"_index":1157,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"modules/InfrastructureModule.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/Ingredients.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"modules/MongoModule.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{},"index.html":{}}}],["sponsors",{"_index":1266,"title":{},"body":{"index.html":{}}}],["src/.../create",{"_index":1298,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../ingredient.schema.ts",{"_index":1299,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1140,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../meal",{"_index":1300,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../recipe.schema.ts",{"_index":1301,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../secret.ts",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1302,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["src/application/delegate/delegate.delegate.ts",{"_index":317,"title":{},"body":{"classes/Delegate.html":{},"coverage.html":{}}}],["src/application/delegate/delegate.delegate.ts:104",{"_index":349,"title":{},"body":{"classes/Delegate.html":{}}}],["src/application/delegate/delegate.delegate.ts:111",{"_index":352,"title":{},"body":{"classes/Delegate.html":{}}}],["src/application/delegate/delegate.delegate.ts:117",{"_index":350,"title":{},"body":{"classes/Delegate.html":{}}}],["src/application/delegate/delegate.delegate.ts:123",{"_index":354,"title":{},"body":{"classes/Delegate.html":{}}}],["src/application/delegate/delegate.delegate.ts:130",{"_index":370,"title":{},"body":{"classes/Delegate.html":{}}}],["src/application/delegate/delegate.delegate.ts:136",{"_index":374,"title":{},"body":{"classes/Delegate.html":{}}}],["src/application/delegate/delegate.delegate.ts:145",{"_index":372,"title":{},"body":{"classes/Delegate.html":{}}}],["src/application/delegate/delegate.delegate.ts:155",{"_index":356,"title":{},"body":{"classes/Delegate.html":{}}}],["src/application/delegate/delegate.delegate.ts:161",{"_index":358,"title":{},"body":{"classes/Delegate.html":{}}}],["src/application/delegate/delegate.delegate.ts:167",{"_index":360,"title":{},"body":{"classes/Delegate.html":{}}}],["src/application/delegate/delegate.delegate.ts:173",{"_index":362,"title":{},"body":{"classes/Delegate.html":{}}}],["src/application/delegate/delegate.delegate.ts:179",{"_index":364,"title":{},"body":{"classes/Delegate.html":{}}}],["src/application/delegate/delegate.delegate.ts:185",{"_index":368,"title":{},"body":{"classes/Delegate.html":{}}}],["src/application/delegate/delegate.delegate.ts:191",{"_index":366,"title":{},"body":{"classes/Delegate.html":{}}}],["src/application/delegate/delegate.delegate.ts:38",{"_index":338,"title":{},"body":{"classes/Delegate.html":{}}}],["src/application/delegate/delegate.delegate.ts:63",{"_index":340,"title":{},"body":{"classes/Delegate.html":{}}}],["src/application/delegate/delegate.delegate.ts:72",{"_index":342,"title":{},"body":{"classes/Delegate.html":{}}}],["src/application/delegate/delegate.delegate.ts:79",{"_index":345,"title":{},"body":{"classes/Delegate.html":{}}}],["src/application/delegate/delegate.delegate.ts:85",{"_index":348,"title":{},"body":{"classes/Delegate.html":{}}}],["src/application/delegate/delegate.delegate.ts:94",{"_index":347,"title":{},"body":{"classes/Delegate.html":{}}}],["src/application/interface/use",{"_index":495,"title":{},"body":{"interfaces/IUseCase.html":{},"coverage.html":{}}}],["src/application/use",{"_index":184,"title":{},"body":{"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"coverage.html":{}}}],["src/domain/dto/create",{"_index":434,"title":{},"body":{"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/domain/dto/update",{"_index":487,"title":{},"body":{"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"coverage.html":{}}}],["src/domain/models/ingredient.domain",{"_index":524,"title":{},"body":{"classes/IngredientDomainModel.html":{},"coverage.html":{}}}],["src/domain/models/interfaces/ingredient.domain",{"_index":444,"title":{},"body":{"interfaces/IIngredientDomainModel.html":{},"coverage.html":{}}}],["src/domain/models/interfaces/meal",{"_index":460,"title":{},"body":{"interfaces/IMealPlannerDomainModel.html":{},"coverage.html":{}}}],["src/domain/models/interfaces/recipes.domain",{"_index":474,"title":{},"body":{"interfaces/IRecipeDomainModel.html":{},"coverage.html":{}}}],["src/domain/models/interfaces/user.domain",{"_index":498,"title":{},"body":{"interfaces/IUserDomainModel.html":{},"coverage.html":{}}}],["src/domain/models/meal",{"_index":776,"title":{},"body":{"classes/MealPlannerDomainModel.html":{},"coverage.html":{}}}],["src/domain/models/recipes.domain",{"_index":891,"title":{},"body":{"classes/RecipeDomainModel.html":{},"coverage.html":{}}}],["src/domain/models/user.domain",{"_index":1027,"title":{},"body":{"classes/UserDomainModel.html":{},"coverage.html":{}}}],["src/domain/services/auth.service.ts",{"_index":420,"title":{},"body":{"interfaces/IAuthService.html":{},"coverage.html":{}}}],["src/domain/services/auth.service.ts:18",{"_index":422,"title":{},"body":{"interfaces/IAuthService.html":{}}}],["src/domain/services/ingredient.service.ts",{"_index":447,"title":{},"body":{"interfaces/IIngredientService.html":{},"coverage.html":{}}}],["src/domain/services/ingredient.service.ts:21",{"_index":450,"title":{},"body":{"interfaces/IIngredientService.html":{}}}],["src/domain/services/ingredient.service.ts:29",{"_index":453,"title":{},"body":{"interfaces/IIngredientService.html":{}}}],["src/domain/services/ingredient.service.ts:38",{"_index":457,"title":{},"body":{"interfaces/IIngredientService.html":{}}}],["src/domain/services/ingredient.service.ts:45",{"_index":451,"title":{},"body":{"interfaces/IIngredientService.html":{}}}],["src/domain/services/ingredient.service.ts:53",{"_index":455,"title":{},"body":{"interfaces/IIngredientService.html":{}}}],["src/domain/services/meal",{"_index":465,"title":{},"body":{"interfaces/IMealPlannerService.html":{},"coverage.html":{}}}],["src/domain/services/recipes.service.ts",{"_index":477,"title":{},"body":{"interfaces/IRecipeService.html":{},"coverage.html":{}}}],["src/domain/services/recipes.service.ts:21",{"_index":479,"title":{},"body":{"interfaces/IRecipeService.html":{}}}],["src/domain/services/recipes.service.ts:29",{"_index":483,"title":{},"body":{"interfaces/IRecipeService.html":{}}}],["src/domain/services/recipes.service.ts:38",{"_index":484,"title":{},"body":{"interfaces/IRecipeService.html":{}}}],["src/domain/services/recipes.service.ts:46",{"_index":480,"title":{},"body":{"interfaces/IRecipeService.html":{}}}],["src/domain/services/recipes.service.ts:54",{"_index":482,"title":{},"body":{"interfaces/IRecipeService.html":{}}}],["src/domain/services/user.service.ts",{"_index":501,"title":{},"body":{"interfaces/IUserService.html":{},"coverage.html":{}}}],["src/domain/services/user.service.ts:22",{"_index":506,"title":{},"body":{"interfaces/IUserService.html":{}}}],["src/domain/services/user.service.ts:30",{"_index":508,"title":{},"body":{"interfaces/IUserService.html":{}}}],["src/domain/services/user.service.ts:38",{"_index":507,"title":{},"body":{"interfaces/IUserService.html":{}}}],["src/domain/services/user.service.ts:47",{"_index":504,"title":{},"body":{"interfaces/IUserService.html":{}}}],["src/infrastructure/controllers/kitchen",{"_index":638,"title":{},"body":{"controllers/KitchenRecipesController.html":{},"coverage.html":{}}}],["src/infrastructure/dto/create",{"_index":6,"title":{},"body":{"classes/AmountDto.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateUserDto.html":{},"classes/Ingredients.html":{},"coverage.html":{}}}],["src/infrastructure/dto/update",{"_index":48,"title":{},"body":{"classes/AmountDto-1.html":{},"classes/IngredientDto.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateRecipeDto.html":{},"coverage.html":{}}}],["src/infrastructure/infrastructure.module.ts",{"_index":516,"title":{},"body":{"modules/InfrastructureModule.html":{}}}],["src/infrastructure/models/ingredient.model.ts",{"_index":536,"title":{},"body":{"classes/IngredientModel.html":{},"coverage.html":{}}}],["src/infrastructure/models/meal",{"_index":783,"title":{},"body":{"classes/MealPlannerModel.html":{},"coverage.html":{}}}],["src/infrastructure/models/recipes.model.ts",{"_index":952,"title":{},"body":{"classes/RecipesModel.html":{},"coverage.html":{}}}],["src/infrastructure/models/user.model.ts",{"_index":1032,"title":{},"body":{"classes/UserModel.html":{},"coverage.html":{}}}],["src/infrastructure/persistence/database/mongo/config/mongo.config.ts",{"_index":871,"title":{},"body":{"injectables/MongooseConfigService.html":{},"coverage.html":{}}}],["src/infrastructure/persistence/database/mongo/config/mongo.config.ts:17",{"_index":876,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["src/infrastructure/persistence/database/mongo/config/mongo.config.ts:31",{"_index":884,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["src/infrastructure/persistence/database/mongo/config/mongo.config.ts:38",{"_index":877,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["src/infrastructure/persistence/database/mongo/mongo.module.ts",{"_index":846,"title":{},"body":{"modules/MongoModule.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/ingredient.repository.ts",{"_index":586,"title":{},"body":{"injectables/IngredientRepository.html":{},"coverage.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/ingredient.repository.ts:29",{"_index":588,"title":{},"body":{"injectables/IngredientRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/ingredient.repository.ts:46",{"_index":589,"title":{},"body":{"injectables/IngredientRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/ingredient.repository.ts:55",{"_index":591,"title":{},"body":{"injectables/IngredientRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/ingredient.repository.ts:65",{"_index":593,"title":{},"body":{"injectables/IngredientRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/ingredient.repository.ts:73",{"_index":590,"title":{},"body":{"injectables/IngredientRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/ingredient.repository.ts:82",{"_index":592,"title":{},"body":{"injectables/IngredientRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/interface/base.interface.ts",{"_index":424,"title":{},"body":{"interfaces/IBaseRepository.html":{},"coverage.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/interface/base.interface.ts:18",{"_index":429,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/interface/base.interface.ts:26",{"_index":431,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/interface/find",{"_index":438,"title":{},"body":{"interfaces/IFindAll.html":{},"coverage.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/interface/update.interface.ts",{"_index":491,"title":{},"body":{"interfaces/IUpdateRepository.html":{},"coverage.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/interface/update.interface.ts:19",{"_index":493,"title":{},"body":{"interfaces/IUpdateRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/meal",{"_index":822,"title":{},"body":{"injectables/MealPlannerRepository.html":{},"coverage.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/recipe.repository.ts",{"_index":933,"title":{},"body":{"injectables/RecipeRepository.html":{},"coverage.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/recipe.repository.ts:26",{"_index":934,"title":{},"body":{"injectables/RecipeRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/recipe.repository.ts:44",{"_index":941,"title":{},"body":{"injectables/RecipeRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/recipe.repository.ts:53",{"_index":935,"title":{},"body":{"injectables/RecipeRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/recipe.repository.ts:62",{"_index":940,"title":{},"body":{"injectables/RecipeRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/recipe.repository.ts:71",{"_index":936,"title":{},"body":{"injectables/RecipeRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/recipe.repository.ts:79",{"_index":937,"title":{},"body":{"injectables/RecipeRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/recipe.repository.ts:89",{"_index":939,"title":{},"body":{"injectables/RecipeRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/user.repository.ts",{"_index":1065,"title":{},"body":{"injectables/UserRepository.html":{},"coverage.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/user.repository.ts:17",{"_index":1066,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/user.repository.ts:34",{"_index":1069,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/user.repository.ts:43",{"_index":1071,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/user.repository.ts:52",{"_index":1070,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/repositories/user.repository.ts:63",{"_index":1068,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/infrastructure/persistence/database/mongo/schemas/ingredient.schema.ts",{"_index":544,"title":{},"body":{"classes/IngredientMongo.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/persistence/database/mongo/schemas/meal",{"_index":790,"title":{},"body":{"classes/MealPlannerMongo.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/persistence/database/mongo/schemas/recipe.schema.ts",{"_index":904,"title":{},"body":{"classes/RecipeMongo.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/persistence/database/mongo/schemas/user.schema.ts",{"_index":1039,"title":{},"body":{"classes/UserMongo.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/persistence/database/mongo/services/ingredient.service.ts",{"_index":567,"title":{},"body":{"injectables/IngredientMongoService.html":{},"coverage.html":{}}}],["src/infrastructure/persistence/database/mongo/services/ingredient.service.ts:15",{"_index":571,"title":{},"body":{"injectables/IngredientMongoService.html":{}}}],["src/infrastructure/persistence/database/mongo/services/ingredient.service.ts:29",{"_index":572,"title":{},"body":{"injectables/IngredientMongoService.html":{}}}],["src/infrastructure/persistence/database/mongo/services/ingredient.service.ts:38",{"_index":575,"title":{},"body":{"injectables/IngredientMongoService.html":{}}}],["src/infrastructure/persistence/database/mongo/services/ingredient.service.ts:48",{"_index":577,"title":{},"body":{"injectables/IngredientMongoService.html":{}}}],["src/infrastructure/persistence/database/mongo/services/ingredient.service.ts:56",{"_index":573,"title":{},"body":{"injectables/IngredientMongoService.html":{}}}],["src/infrastructure/persistence/database/mongo/services/ingredient.service.ts:65",{"_index":576,"title":{},"body":{"injectables/IngredientMongoService.html":{}}}],["src/infrastructure/persistence/database/mongo/services/meal",{"_index":805,"title":{},"body":{"injectables/MealPlannerMongoService.html":{},"coverage.html":{}}}],["src/infrastructure/persistence/database/mongo/services/recipe.service.ts",{"_index":917,"title":{},"body":{"injectables/RecipeMongoService.html":{},"coverage.html":{}}}],["src/infrastructure/persistence/database/mongo/services/recipe.service.ts:15",{"_index":919,"title":{},"body":{"injectables/RecipeMongoService.html":{}}}],["src/infrastructure/persistence/database/mongo/services/recipe.service.ts:29",{"_index":920,"title":{},"body":{"injectables/RecipeMongoService.html":{}}}],["src/infrastructure/persistence/database/mongo/services/recipe.service.ts:38",{"_index":923,"title":{},"body":{"injectables/RecipeMongoService.html":{}}}],["src/infrastructure/persistence/database/mongo/services/recipe.service.ts:48",{"_index":924,"title":{},"body":{"injectables/RecipeMongoService.html":{}}}],["src/infrastructure/persistence/database/mongo/services/recipe.service.ts:57",{"_index":921,"title":{},"body":{"injectables/RecipeMongoService.html":{}}}],["src/infrastructure/persistence/database/mongo/services/recipe.service.ts:67",{"_index":922,"title":{},"body":{"injectables/RecipeMongoService.html":{}}}],["src/infrastructure/persistence/database/mongo/services/user.service.ts",{"_index":1052,"title":{},"body":{"injectables/UserMongoService.html":{},"coverage.html":{}}}],["src/infrastructure/persistence/database/mongo/services/user.service.ts:17",{"_index":1054,"title":{},"body":{"injectables/UserMongoService.html":{}}}],["src/infrastructure/persistence/database/mongo/services/user.service.ts:31",{"_index":1056,"title":{},"body":{"injectables/UserMongoService.html":{}}}],["src/infrastructure/persistence/database/mongo/services/user.service.ts:40",{"_index":1058,"title":{},"body":{"injectables/UserMongoService.html":{}}}],["src/infrastructure/persistence/database/mongo/services/user.service.ts:50",{"_index":1057,"title":{},"body":{"injectables/UserMongoService.html":{}}}],["src/infrastructure/persistence/database/mongo/services/user.service.ts:61",{"_index":1055,"title":{},"body":{"injectables/UserMongoService.html":{}}}],["src/infrastructure/services/ingredient.service.ts",{"_index":604,"title":{},"body":{"injectables/IngredientService.html":{},"coverage.html":{}}}],["src/infrastructure/services/meal",{"_index":832,"title":{},"body":{"injectables/MealPlannerService.html":{},"coverage.html":{}}}],["src/infrastructure/services/recipe..service.ts",{"_index":945,"title":{},"body":{"injectables/RecipeService.html":{},"coverage.html":{}}}],["src/infrastructure/services/secret.ts",{"_index":1118,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/services/user.service.ts",{"_index":1077,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/infrastructure/utils/exception",{"_index":614,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["src/infrastructure/utils/guards/auth.guard.ts",{"_index":111,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/infrastructure/utils/guards/auth.guard.ts:14",{"_index":118,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/infrastructure/utils/guards/auth.guard.ts:29",{"_index":127,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/infrastructure/utils/pipes/mongo",{"_index":1083,"title":{},"body":{"injectables/ValidateMongoId.html":{},"coverage.html":{}}}],["src/infrastructure/utils/services/auth.service.ts",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/infrastructure/utils/services/auth.service.ts:17",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/infrastructure/utils/services/auth.service.ts:34",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":1119,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":1249,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1252,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1254,"title":{},"body":{"index.html":{}}}],["started",{"_index":1143,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1242,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["statuscode",{"_index":633,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["stay",{"_index":1275,"title":{},"body":{"index.html":{}}}],["steps",{"_index":261,"title":{},"body":{"classes/CreateRecipeDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IUpdateRecipesDto.html":{},"classes/IngredientDto.html":{},"classes/Ingredients.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"classes/RecipesModel.html":{},"classes/UpdateRecipeDto.html":{}}}],["strict",{"_index":1048,"title":{},"body":{"classes/UserMongo.html":{}}}],["string",{"_index":22,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/Ingredients.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{}}}],["string(new",{"_index":1095,"title":{},"body":{"injectables/ValidateMongoId.html":{}}}],["su",{"_index":1220,"title":{},"body":{"index.html":{}}}],["support",{"_index":1267,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sus",{"_index":1168,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1286,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":230,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/GetUserUseCase.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["switchmap((entidad",{"_index":234,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["switchmap((entity",{"_index":969,"title":{},"body":{"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["switchmap((user",{"_index":314,"title":{},"body":{"classes/CreateUserUseCase.html":{},"classes/GetUserUseCase.html":{}}}],["table",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["también",{"_index":1197,"title":{},"body":{"index.html":{}}}],["template",{"_index":380,"title":{},"body":{"classes/Delegate.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUserService.html":{}}}],["test",{"_index":1256,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1259,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1258,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1255,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1265,"title":{},"body":{"index.html":{}}}],["this.authservice",{"_index":389,"title":{},"body":{"classes/Delegate.html":{}}}],["this.authservice.generatetoken(user",{"_index":315,"title":{},"body":{"classes/CreateUserUseCase.html":{},"classes/GetUserUseCase.html":{}}}],["this.configservice.get('mongo_url",{"_index":883,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["this.delegate",{"_index":382,"title":{},"body":{"classes/Delegate.html":{},"controllers/KitchenRecipesController.html":{}}}],["this.delegate.execute",{"_index":735,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.execute(...args",{"_index":381,"title":{},"body":{"classes/Delegate.html":{}}}],["this.delegate.execute(id",{"_index":739,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.execute(ingredient",{"_index":760,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.execute(name",{"_index":744,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.execute(recipe",{"_index":766,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.execute(user",{"_index":769,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.tocreateingredient",{"_index":759,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.tocreatemealplanner",{"_index":762,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.tocreaterecipe",{"_index":765,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.tocreateuser",{"_index":768,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.todeletemealplanner",{"_index":752,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.todeleterecipe",{"_index":754,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.todeleteuser",{"_index":757,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.togetallingredients",{"_index":734,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.togetingredient",{"_index":741,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.togetingredientbynames",{"_index":743,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.togetmealplanner",{"_index":746,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.togetrecipe",{"_index":750,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.togetrecipesbyuser",{"_index":738,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.togetuser",{"_index":748,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.toupdateingredient",{"_index":771,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.toupdatemealplanner",{"_index":773,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.delegate.toupdaterecipe",{"_index":775,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["this.getrecipe(_id).pipe",{"_index":1010,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["this.ingredientrepository.create(entity",{"_index":581,"title":{},"body":{"injectables/IngredientMongoService.html":{}}}],["this.ingredientrepository.findall",{"_index":584,"title":{},"body":{"injectables/IngredientMongoService.html":{}}}],["this.ingredientrepository.findbyid(id",{"_index":582,"title":{},"body":{"injectables/IngredientMongoService.html":{}}}],["this.ingredientrepository.findbyname(name",{"_index":585,"title":{},"body":{"injectables/IngredientMongoService.html":{}}}],["this.ingredientrepository.update(id",{"_index":583,"title":{},"body":{"injectables/IngredientMongoService.html":{}}}],["this.ingredientservice",{"_index":385,"title":{},"body":{"classes/Delegate.html":{}}}],["this.ingredientservice.findbyid(id).pipe",{"_index":248,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["this.isexistingredients(mealplanner).pipe",{"_index":994,"title":{},"body":{"classes/UpdateMealPlannerUseCase.html":{}}}],["this.isexistingredients(recipe).pipe",{"_index":294,"title":{},"body":{"classes/CreateRecipeUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["this.isexistrecipes(mealplanner).pipe",{"_index":233,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{}}}],["this.jwtservice.sign",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.mealplannerrepository.create(entity",{"_index":818,"title":{},"body":{"injectables/MealPlannerMongoService.html":{}}}],["this.mealplannerrepository.delete(id",{"_index":821,"title":{},"body":{"injectables/MealPlannerMongoService.html":{}}}],["this.mealplannerrepository.findbyid(id",{"_index":819,"title":{},"body":{"injectables/MealPlannerMongoService.html":{}}}],["this.mealplannerrepository.update(id",{"_index":820,"title":{},"body":{"injectables/MealPlannerMongoService.html":{}}}],["this.mealplannerservice",{"_index":386,"title":{},"body":{"classes/Delegate.html":{}}}],["this.reciperepository.create(entity",{"_index":928,"title":{},"body":{"injectables/RecipeMongoService.html":{}}}],["this.reciperepository.delete(id",{"_index":931,"title":{},"body":{"injectables/RecipeMongoService.html":{}}}],["this.reciperepository.findallbyuserid(id",{"_index":932,"title":{},"body":{"injectables/RecipeMongoService.html":{}}}],["this.reciperepository.findbyid(id",{"_index":929,"title":{},"body":{"injectables/RecipeMongoService.html":{}}}],["this.reciperepository.update(id",{"_index":930,"title":{},"body":{"injectables/RecipeMongoService.html":{}}}],["this.recipesservice",{"_index":384,"title":{},"body":{"classes/Delegate.html":{}}}],["this.repository",{"_index":1073,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.service.create(ingredient",{"_index":203,"title":{},"body":{"classes/CreateIngredientUseCase.html":{}}}],["this.service.create(mealplanner).pipe",{"_index":236,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{}}}],["this.service.create(recipe",{"_index":295,"title":{},"body":{"classes/CreateRecipeUseCase.html":{}}}],["this.service.create(user).pipe",{"_index":313,"title":{},"body":{"classes/CreateUserUseCase.html":{}}}],["this.service.delete(_id",{"_index":407,"title":{},"body":{"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{}}}],["this.service.findall",{"_index":409,"title":{},"body":{"classes/GetAllIngredientUseCase.html":{}}}],["this.service.findallbyuserid(id",{"_index":410,"title":{},"body":{"classes/GetAllRecipesUseCase.html":{}}}],["this.service.findbyid(_id",{"_index":416,"title":{},"body":{"classes/GetRecipeUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["this.service.findbyid(_id).pipe",{"_index":417,"title":{},"body":{"classes/GetUserUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{}}}],["this.service.findbyid(id",{"_index":415,"title":{},"body":{"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{}}}],["this.service.findbyid(id).pipe",{"_index":968,"title":{},"body":{"classes/UpdateIngredientUseCase.html":{}}}],["this.service.findbyname(name",{"_index":413,"title":{},"body":{"classes/GetIngredientByNameUseCase.html":{}}}],["this.service.update(_id",{"_index":996,"title":{},"body":{"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["this.service.update(id",{"_index":979,"title":{},"body":{"classes/UpdateIngredientUseCase.html":{}}}],["this.userrepository.addmealplanner(userid",{"_index":1064,"title":{},"body":{"injectables/UserMongoService.html":{}}}],["this.userrepository.create(entity",{"_index":1061,"title":{},"body":{"injectables/UserMongoService.html":{}}}],["this.userrepository.delete(id",{"_index":1063,"title":{},"body":{"injectables/UserMongoService.html":{}}}],["this.userrepository.findbyid(id",{"_index":1062,"title":{},"body":{"injectables/UserMongoService.html":{}}}],["this.userservice",{"_index":387,"title":{},"body":{"classes/Delegate.html":{}}}],["this.userservice.addmealplanner(id",{"_index":238,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{}}}],["throw",{"_index":1097,"title":{},"body":{"injectables/ValidateMongoId.html":{}}}],["throwerror",{"_index":231,"title":{},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["til",{"_index":1226,"title":{},"body":{"index.html":{}}}],["tocreateingredient",{"_index":319,"title":{},"body":{"classes/Delegate.html":{}}}],["tocreatemealplanner",{"_index":320,"title":{},"body":{"classes/Delegate.html":{}}}],["tocreaterecipe",{"_index":321,"title":{},"body":{"classes/Delegate.html":{}}}],["tocreateuser",{"_index":322,"title":{},"body":{"classes/Delegate.html":{}}}],["todeletemealplanner",{"_index":323,"title":{},"body":{"classes/Delegate.html":{}}}],["todeleterecipe",{"_index":324,"title":{},"body":{"classes/Delegate.html":{}}}],["todeleteuser",{"_index":325,"title":{},"body":{"classes/Delegate.html":{}}}],["togetallingredients",{"_index":326,"title":{},"body":{"classes/Delegate.html":{}}}],["togetingredient",{"_index":327,"title":{},"body":{"classes/Delegate.html":{}}}],["togetingredientbynames",{"_index":328,"title":{},"body":{"classes/Delegate.html":{}}}],["togetmealplanner",{"_index":329,"title":{},"body":{"classes/Delegate.html":{}}}],["togetrecipe",{"_index":330,"title":{},"body":{"classes/Delegate.html":{}}}],["togetrecipesbyuser",{"_index":331,"title":{},"body":{"classes/Delegate.html":{}}}],["togetuser",{"_index":332,"title":{},"body":{"classes/Delegate.html":{}}}],["token",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateUserUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"controllers/KitchenRecipesController.html":{}}}],["tokenexpirederror",{"_index":619,"title":{},"body":{"classes/JwtErrorExceptionFilter.html":{}}}],["touch",{"_index":1276,"title":{},"body":{"index.html":{}}}],["toupdateingredient",{"_index":333,"title":{},"body":{"classes/Delegate.html":{}}}],["toupdatemealplanner",{"_index":334,"title":{},"body":{"classes/Delegate.html":{}}}],["toupdaterecipe",{"_index":335,"title":{},"body":{"classes/Delegate.html":{}}}],["transform",{"_index":1086,"title":{},"body":{"injectables/ValidateMongoId.html":{}}}],["transform(value",{"_index":1087,"title":{},"body":{"injectables/ValidateMongoId.html":{}}}],["transformer",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["través",{"_index":1173,"title":{},"body":{"index.html":{}}}],["true",{"_index":42,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"modules/AppModule.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/IngredientDto.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientRepository.html":{},"classes/Ingredients.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerRepository.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeRepository.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UserMongo.html":{},"injectables/UserRepository.html":{}}}],["true})@arrayminsize(1",{"_index":266,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["true})@isoptional",{"_index":980,"title":{},"body":{"classes/UpdateMealPlannerDto.html":{},"classes/UpdateRecipeDto.html":{}}}],["true})@isstring({each",{"_index":277,"title":{},"body":{"classes/CreateRecipeDto.html":{}}}],["twitter",{"_index":1282,"title":{},"body":{"index.html":{}}}],["type",{"_index":14,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICreateMealPlannerDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IIngredientDomainModel.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/Ingredients.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1296,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedef",{"_index":38,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFindAll.html":{},"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerDomainModel.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateRepository.html":{},"interfaces/IUseCase.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"modules/InfrastructureModule.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientModel.html":{},"classes/IngredientMongo.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"classes/Ingredients.html":{},"classes/JwtErrorExceptionFilter.html":{},"controllers/KitchenRecipesController.html":{},"classes/MealPlannerDomainModel.html":{},"classes/MealPlannerModel.html":{},"classes/MealPlannerMongo.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeDto.html":{},"classes/UpdateRecipeUseCase.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"injectables/ValidateMongoId.html":{}}}],["typescript",{"_index":1241,"title":{},"body":{"index.html":{}}}],["un",{"_index":1174,"title":{},"body":{"index.html":{}}}],["una",{"_index":1159,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":546,"title":{},"body":{"classes/IngredientMongo.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeMongo.html":{},"classes/UserMongo.html":{}}}],["unique",{"_index":551,"title":{},"body":{"classes/IngredientMongo.html":{},"classes/UserMongo.html":{}}}],["unit",{"_index":446,"title":{},"body":{"interfaces/IIngredientDomainModel.html":{},"interfaces/IUpdateIngredientDto.html":{},"classes/IngredientDomainModel.html":{},"classes/IngredientModel.html":{},"index.html":{}}}],["unlicensed",{"_index":1295,"title":{},"body":{"properties.html":{}}}],["update",{"_index":449,"title":{},"body":{"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateMealPlannerDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUpdateRepository.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientRepository.html":{},"injectables/IngredientService.html":{},"controllers/KitchenRecipesController.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerRepository.html":{},"injectables/MealPlannerService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{},"injectables/UserMongoService.html":{},"injectables/UserService.html":{}}}],["update(_id",{"_index":492,"title":{},"body":{"interfaces/IUpdateRepository.html":{},"injectables/IngredientRepository.html":{},"injectables/MealPlannerRepository.html":{},"injectables/RecipeRepository.html":{}}}],["update(id",{"_index":456,"title":{},"body":{"interfaces/IIngredientService.html":{},"interfaces/IMealPlannerService.html":{},"interfaces/IRecipeService.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientService.html":{},"injectables/MealPlannerMongoService.html":{},"injectables/MealPlannerService.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeService.html":{}}}],["update.description",{"_index":973,"title":{},"body":{"classes/UpdateIngredientUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["update.ingredients",{"_index":1026,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["update.name",{"_index":970,"title":{},"body":{"classes/UpdateIngredientUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["update.notes",{"_index":1014,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["update.nutritioninfo",{"_index":1022,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["update.photourl",{"_index":976,"title":{},"body":{"classes/UpdateIngredientUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["update.servings",{"_index":1019,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["update.steps",{"_index":1016,"title":{},"body":{"classes/UpdateRecipeUseCase.html":{}}}],["updated",{"_index":494,"title":{},"body":{"interfaces/IUpdateRepository.html":{},"injectables/IngredientMongoService.html":{},"injectables/IngredientService.html":{}}}],["updateingredient",{"_index":655,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["updateingredient(id",{"_index":700,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["updateingredientdto",{"_index":701,"title":{"classes/UpdateIngredientDto.html":{}},"body":{"controllers/KitchenRecipesController.html":{},"classes/UpdateIngredientDto.html":{},"coverage.html":{}}}],["updateingredientusecase",{"_index":371,"title":{"classes/UpdateIngredientUseCase.html":{}},"body":{"classes/Delegate.html":{},"classes/UpdateIngredientUseCase.html":{},"coverage.html":{}}}],["updateingredientusecase(this.ingredientservice",{"_index":393,"title":{},"body":{"classes/Delegate.html":{}}}],["updatemealplanner",{"_index":656,"title":{},"body":{"controllers/KitchenRecipesController.html":{},"classes/UpdateMealPlannerUseCase.html":{}}}],["updatemealplanner(id",{"_index":704,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["updatemealplanner.amount",{"_index":995,"title":{},"body":{"classes/UpdateMealPlannerUseCase.html":{}}}],["updatemealplanner.name",{"_index":988,"title":{},"body":{"classes/UpdateMealPlannerUseCase.html":{}}}],["updatemealplanner.notes",{"_index":990,"title":{},"body":{"classes/UpdateMealPlannerUseCase.html":{}}}],["updatemealplannerdto",{"_index":53,"title":{"classes/UpdateMealPlannerDto.html":{}},"body":{"classes/AmountDto-1.html":{},"controllers/KitchenRecipesController.html":{},"classes/UpdateMealPlannerDto.html":{},"coverage.html":{}}}],["updatemealplannerusecase",{"_index":373,"title":{"classes/UpdateMealPlannerUseCase.html":{}},"body":{"classes/Delegate.html":{},"classes/UpdateMealPlannerUseCase.html":{},"coverage.html":{}}}],["updaterecipe",{"_index":657,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["updaterecipe(id",{"_index":707,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["updaterecipedto",{"_index":534,"title":{"classes/UpdateRecipeDto.html":{}},"body":{"classes/IngredientDto.html":{},"controllers/KitchenRecipesController.html":{},"classes/UpdateRecipeDto.html":{},"coverage.html":{}}}],["updaterecipeusecase",{"_index":375,"title":{"classes/UpdateRecipeUseCase.html":{}},"body":{"classes/Delegate.html":{},"classes/UpdateRecipeUseCase.html":{},"coverage.html":{}}}],["uri",{"_index":886,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["url",{"_index":181,"title":{},"body":{"classes/CreateIngredientDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IUpdateIngredientDto.html":{},"interfaces/IUpdateRecipesDto.html":{},"interfaces/IUserDomainModel.html":{},"classes/IngredientDto.html":{},"classes/IngredientMongo.html":{},"classes/Ingredients.html":{},"classes/MealPlannerMongo.html":{},"injectables/MongooseConfigService.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"classes/RecipesModel.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateRecipeDto.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{}}}],["use",{"_index":188,"title":{},"body":{"classes/CreateIngredientUseCase.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteMealPlannerUseCase.html":{},"classes/DeleteRecipeUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllIngredientUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetIngredientByNameUseCase.html":{},"classes/GetIngredientUseCase.html":{},"classes/GetMealPlannerUseCase.html":{},"classes/GetRecipeUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IUseCase.html":{},"classes/UpdateIngredientUseCase.html":{},"classes/UpdateMealPlannerUseCase.html":{},"classes/UpdateRecipeUseCase.html":{}}}],["useclass",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/MongoModule.html":{}}}],["useguards",{"_index":725,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["useguards(authguard",{"_index":732,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["useguards(authguard)@delete('meal",{"_index":672,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["useguards(authguard)@delete('recipe/:id",{"_index":675,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["useguards(authguard)@delete('user/:id",{"_index":678,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["useguards(authguard)@get('ingredient",{"_index":684,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["useguards(authguard)@get('ingredient/:id",{"_index":681,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["useguards(authguard)@get('meal",{"_index":689,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["useguards(authguard)@get('recipe/:id",{"_index":692,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["useguards(authguard)@get('recipes/:id",{"_index":695,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["useguards(authguard)@post('ingredient",{"_index":659,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["useguards(authguard)@post('meal",{"_index":662,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["useguards(authguard)@post('recipe",{"_index":666,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["useguards(authguard)@put('ingredient/:id",{"_index":702,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["useguards(authguard)@put('meal",{"_index":705,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["useguards(authguard)@put('recipe/:id",{"_index":708,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["user",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateMealPlannerUseCase.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserUseCase.html":{},"classes/Delegate.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetAllRecipesUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IAuthService.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/ICreateUserDto.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IRecipeService.html":{},"interfaces/IUserDomainModel.html":{},"interfaces/IUserService.html":{},"classes/Ingredients.html":{},"controllers/KitchenRecipesController.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeMongoService.html":{},"injectables/RecipeRepository.html":{},"injectables/RecipeService.html":{},"classes/RecipesModel.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user.domain",{"_index":475,"title":{},"body":{"interfaces/IRecipeDomainModel.html":{},"classes/RecipeDomainModel.html":{}}}],["user.dto",{"_index":714,"title":{},"body":{"controllers/KitchenRecipesController.html":{}}}],["user.dto.ts",{"_index":299,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/ICreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:20",{"_index":305,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":302,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:36",{"_index":306,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:44",{"_index":303,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.name",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.use",{"_index":308,"title":{},"body":{"classes/CreateUserUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetUserUseCase.html":{},"coverage.html":{}}}],["userdocument",{"_index":1051,"title":{},"body":{"classes/UserMongo.html":{},"injectables/UserRepository.html":{},"miscellaneous/typealiases.html":{}}}],["userdomainmodel",{"_index":312,"title":{"classes/UserDomainModel.html":{}},"body":{"classes/CreateUserUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/GetUserUseCase.html":{},"interfaces/IUserService.html":{},"classes/RecipeDomainModel.html":{},"classes/UserDomainModel.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"coverage.html":{}}}],["userdomainmodel:18",{"_index":1033,"title":{},"body":{"classes/UserModel.html":{}}}],["userdomainmodel:24",{"_index":1036,"title":{},"body":{"classes/UserModel.html":{}}}],["userdomainmodel:29",{"_index":1040,"title":{},"body":{"classes/UserMongo.html":{}}}],["userdomainmodel:30",{"_index":1037,"title":{},"body":{"classes/UserModel.html":{}}}],["userdomainmodel:36",{"_index":1034,"title":{},"body":{"classes/UserModel.html":{}}}],["userdomainmodel:37",{"_index":1045,"title":{},"body":{"classes/UserMongo.html":{}}}],["userdomainmodel:42",{"_index":1038,"title":{},"body":{"classes/UserModel.html":{}}}],["userdomainmodel:45",{"_index":1042,"title":{},"body":{"classes/UserMongo.html":{}}}],["userdomainmodel:48",{"_index":1035,"title":{},"body":{"classes/UserModel.html":{}}}],["userdomainmodel:53",{"_index":1046,"title":{},"body":{"classes/UserMongo.html":{}}}],["userdomainmodel:61",{"_index":1043,"title":{},"body":{"classes/UserMongo.html":{}}}],["userdomainmodel:72",{"_index":1044,"title":{},"body":{"classes/UserMongo.html":{}}}],["userdomainmodel['_id",{"_index":903,"title":{},"body":{"classes/RecipeDomainModel.html":{}}}],["userid",{"_index":262,"title":{},"body":{"classes/CreateRecipeDto.html":{},"interfaces/ICreateRecipeDto.html":{},"interfaces/IRecipeDomainModel.html":{},"interfaces/IUserService.html":{},"classes/Ingredients.html":{},"classes/RecipeDomainModel.html":{},"classes/RecipeMongo.html":{},"injectables/RecipeRepository.html":{},"classes/RecipesModel.html":{},"injectables/UserMongoService.html":{},"injectables/UserService.html":{}}}],["usermodel",{"_index":157,"title":{"classes/UserModel.html":{}},"body":{"injectables/AuthService.html":{},"controllers/KitchenRecipesController.html":{},"classes/UserModel.html":{},"classes/UserMongo.html":{},"coverage.html":{}}}],["usermongo",{"_index":856,"title":{"classes/UserMongo.html":{}},"body":{"modules/MongoModule.html":{},"classes/UserMongo.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usermongo.name",{"_index":862,"title":{},"body":{"modules/MongoModule.html":{}}}],["usermongoservice",{"_index":843,"title":{"injectables/UserMongoService.html":{}},"body":{"modules/MongoModule.html":{},"injectables/UserMongoService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usermongoservice:31",{"_index":1079,"title":{},"body":{"injectables/UserService.html":{}}}],["usermongoservice:40",{"_index":1081,"title":{},"body":{"injectables/UserService.html":{}}}],["usermongoservice:50",{"_index":1080,"title":{},"body":{"injectables/UserService.html":{}}}],["usermongoservice:61",{"_index":1078,"title":{},"body":{"injectables/UserService.html":{}}}],["userrepository",{"_index":844,"title":{"injectables/UserRepository.html":{}},"body":{"modules/MongoModule.html":{},"injectables/UserMongoService.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":1047,"title":{},"body":{"classes/UserMongo.html":{}}}],["userschema",{"_index":857,"title":{},"body":{"modules/MongoModule.html":{},"classes/UserMongo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":213,"title":{"injectables/UserService.html":{}},"body":{"classes/CreateMealPlannerUseCase.html":{},"classes/Delegate.html":{},"modules/InfrastructureModule.html":{},"controllers/KitchenRecipesController.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usuarios",{"_index":1164,"title":{},"body":{"index.html":{}}}],["validate",{"_index":1085,"title":{},"body":{"injectables/ValidateMongoId.html":{}}}],["validatemongoid",{"_index":728,"title":{"injectables/ValidateMongoId.html":{}},"body":{"controllers/KitchenRecipesController.html":{},"injectables/ValidateMongoId.html":{},"coverage.html":{}}}],["validatenested",{"_index":33,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateMealPlannerDto.html":{},"classes/IngredientDto.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateRecipeDto.html":{}}}],["validator",{"_index":34,"title":{},"body":{"classes/AmountDto.html":{},"classes/AmountDto-1.html":{},"classes/CreateIngredientDto.html":{},"classes/CreateMealPlannerDto.html":{},"classes/CreateRecipeDto.html":{},"classes/CreateUserDto.html":{},"classes/IngredientDto.html":{},"classes/Ingredients.html":{},"classes/UpdateIngredientDto.html":{},"classes/UpdateMealPlannerDto.html":{},"classes/UpdateRecipeDto.html":{},"dependencies.html":{}}}],["value",{"_index":882,"title":{},"body":{"injectables/MongooseConfigService.html":{},"injectables/ValidateMongoId.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1303,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1293,"title":{},"body":{"properties.html":{}}}],["versionkey",{"_index":561,"title":{},"body":{"classes/IngredientMongo.html":{},"classes/MealPlannerMongo.html":{},"classes/RecipeMongo.html":{},"classes/UserMongo.html":{}}}],["void",{"_index":346,"title":{},"body":{"classes/Delegate.html":{},"classes/JwtErrorExceptionFilter.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["watch",{"_index":1250,"title":{},"body":{"index.html":{}}}],["web",{"_index":1176,"title":{},"body":{"index.html":{}}}],["website",{"_index":1280,"title":{},"body":{"index.html":{}}}],["west",{"_index":888,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["y",{"_index":1166,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":1270,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/InfrastructureModule.html":{},"modules/MongoModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AmountDto.html":{"url":"classes/AmountDto.html","title":"class - AmountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/dto/create-meal-planner.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                class AmountDto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                ingredientId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-meal-planner.dto.ts:61\n                        \n                    \n\n            \n                \n                    amount of the ingredient\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-meal-planner.dto.ts:69\n                        \n                    \n\n            \n                \n                    ingredient id of the ingredient\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICreateMealPlannerDto } from '@domain/dto';\nimport {\n  IsArray,\n  IsMongoId,\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\n\n/**\n * interface ICreateMealPlannerDto\n *\n * @export\n * @class CreateMealPlannerDto\n * @typedef {CreateMealPlannerDto}\n * @implements {ICreateMealPlannerDto}\n */\nexport class CreateMealPlannerDto implements ICreateMealPlannerDto {\n  /**\n   * amount of the meal planner\n   *\n   * @type {AmountDto[]} amount\n   */\n  @IsArray()\n  @ValidateNested({ each: true })\n  amount: AmountDto[];\n\n  /**\n   * notes of the meal planner\n   *\n   * @type {string} notes\n   */\n  @IsNotEmpty()\n  @IsString()\n  notes: string;\n\n  /**\n   * name of the meal planner\n   *\n   * @type {string} name\n   */\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n}\n\n/**\n * class AmountDto\n *\n * @class AmountDto\n * @typedef {AmountDto}\n */\nclass AmountDto {\n  /**\n   * amount of the ingredient\n   *\n   * @type {number} amount\n   */\n  @IsNumber()\n  amount: number;\n  /**\n   * ingredient id of the ingredient\n   *\n   * @type {string} ingredientId\n   */\n  @IsString()\n  @IsMongoId()\n  ingredientId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AmountDto-1.html":{"url":"classes/AmountDto-1.html","title":"class - AmountDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AmountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/dto/update-meal-planner.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                class AmountDto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                ingredientId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/update-meal-planner.dto.ts:59\n                        \n                    \n\n            \n                \n                    amount of the ingredient\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/update-meal-planner.dto.ts:66\n                        \n                    \n\n            \n                \n                    id of the ingredient\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IUpdateMealPlannerDto } from '@domain/dto';\nimport {\n  IsArray,\n  IsNumber,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\n\n/**\n * interface IUpdateMealPlannerDto\n *\n * @export\n * @class UpdateMealPlannerDto\n * @typedef {UpdateMealPlannerDto}\n * @implements {IUpdateMealPlannerDto}\n */\nexport class UpdateMealPlannerDto implements IUpdateMealPlannerDto {\n  /**\n   * name of the meal planner\n   *\n   * @type {?string} name\n   */\n  @IsOptional()\n  @IsString()\n  name?: string;\n  /**\n   * amount of the meal planner\n   *\n   * @type {?AmountDto[]} amount\n   */\n  @IsArray()\n  @ValidateNested({ each: true })\n  @IsOptional()\n  amount?: AmountDto[];\n  /**\n   * notes of the meal planner\n   *\n   * @type {?string} notes\n   */\n  @IsOptional()\n  @IsString()\n  notes?: string;\n}\n\n/**\n * class AmountDto\n *\n * @class AmountDto\n * @typedef {AmountDto}\n */\nclass AmountDto {\n  /**\n   * amount of the ingredient\n   *\n   * @type {number} amount\n   */\n  @IsNumber()\n  amount: number;\n  /**\n   * id of the ingredient\n   *\n   * @type {string} ingredientId\n   */\n  @IsString()\n  ingredientId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nInfrastructureModule\n\nInfrastructureModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nInfrastructureModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            main module\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            KitchenRecipesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InfrastructureModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { JWTConstants } from '@infrastructure/services/secret';\nimport { JwtErrorExceptionFilter } from '@infrastructure/utils/exception-filters/jwt.exception-filter';\nimport { AuthService } from '@infrastructure/utils/services/auth.service';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { APP_FILTER } from '@nestjs/core';\nimport { JwtModule } from '@nestjs/jwt';\nimport { join } from 'path';\nimport { MongoServerErrorExceptionFilter } from './infrastructure';\nimport { KitchenRecipesController } from './infrastructure/controllers/kitchen-recipes.controller';\nimport { InfrastructureModule } from './infrastructure/infrastructure.module';\n\n/**\n * main module\n *\n * @export\n * @class AppModule\n * @typedef {AppModule}\n */\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: join(\n        process.cwd(),\n        'environments',\n        `.env.${process.env.SCOPE?.trimEnd()}`,\n      ),\n    }),\n    InfrastructureModule,\n    JwtModule.register({\n      global: true,\n      secret: JWTConstants.secret,\n      signOptions: { expiresIn: '2d' },\n    }),\n  ],\n  controllers: [KitchenRecipesController],\n  providers: [\n    {\n      provide: APP_FILTER,\n      useClass: MongoServerErrorExceptionFilter,\n    },\n    {\n      provide: APP_FILTER,\n      useClass: JwtErrorExceptionFilter,\n    },\n    AuthService,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/infrastructure/utils/guards/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    interface for the auth guard\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/utils/guards/auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            Creates an instance of AuthGuard.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \njwt service\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/utils/guards/auth.guard.ts:29\n                \n            \n\n\n            \n                \n                    can activate\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nexecution context\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \nboolean\n\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Observable } from 'rxjs';\n\n/**\n * interface for the auth guard\n *\n * @export\n * @class AuthGuard\n * @typedef {AuthGuard}\n * @implements {CanActivate}\n */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  /**\n   * Creates an instance of AuthGuard.\n   *\n   * @constructor\n   * @param {JwtService} jwtService - jwt service\n   */\n  constructor(private jwtService: JwtService) {}\n\n  /**\n   * can activate\n   *\n   * @param {ExecutionContext} context - execution context\n   * @returns {Observable} - boolean\n   */\n  canActivate(context: ExecutionContext): Observable {\n    const request = context.switchToHttp().getRequest();\n    const authHeader = request.headers.login;\n    const token = authHeader.split(' ')[0];\n    return this.jwtService.verify(token);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/utils/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the auth service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/utils/services/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of AuthService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateToken\n                        \n                    \n                \n            \n            \n                \ngenerateToken(user: IUserDomainModel)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/utils/services/auth.service.ts:34\n                \n            \n\n\n            \n                \n                    generate token\n data: UserModel;\n token: string;\n}>} user domain model and token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUserDomainModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user domain model\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        user domain model and token\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IUserDomainModel } from '@domain/models';\nimport { IAuthService } from '@domain/services/auth.service';\nimport { UserModel } from '@infrastructure/models';\nimport { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Observable, of } from 'rxjs';\n\n/**\n * interface for the auth service\n *\n * @export\n * @class AuthService\n * @typedef {AuthService}\n * @implements {IAuthService}\n */\n@Injectable()\nexport class AuthService implements IAuthService {\n  /**\n   * Creates an instance of AuthService.\n   *\n   * @constructor\n   * @param {JwtService} jwtService\n   */\n  constructor(private readonly jwtService: JwtService) {}\n  /**\n   * generate token\n   *\n   * @param {IUserDomainModel} user user domain model\n   * @returns {Observable} user domain model and token\n   */\n  generateToken(user: IUserDomainModel): Observable {\n    return of({\n      data: user,\n      token: this.jwtService.sign({\n        email: user.email,\n        name: user.name,\n      }),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateIngredientDto.html":{"url":"classes/CreateIngredientDto.html","title":"class - CreateIngredientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateIngredientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/dto/create-ingredient.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                class CreateIngredientDto\n\n            \n\n\n            \n                Implements\n            \n            \n                            ICreateIngredientDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                photoUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-ingredient.dto.ts:29\n                        \n                    \n\n            \n                \n                    description of the ingredient\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-ingredient.dto.ts:20\n                        \n                    \n\n            \n                \n                    name of the ingredient\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-ingredient.dto.ts:38\n                        \n                    \n\n            \n                \n                    photo url of the ingredient\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICreateIngredientDto } from '@domain/dto';\nimport { IsNotEmpty, IsString, IsUrl } from 'class-validator';\n\n/**\n * class CreateIngredientDto\n *\n * @export\n * @class CreateIngredientDto\n * @typedef {CreateIngredientDto}\n * @implements {ICreateIngredientDto}\n */\nexport class CreateIngredientDto implements ICreateIngredientDto {\n  /**\n   * name of the ingredient\n   *\n   * @type {string} name\n   */\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  /**\n   * description of the ingredient\n   *\n   * @type {string} description\n   */\n  @IsString()\n  @IsNotEmpty()\n  description: string;\n\n  /**\n   * photo url of the ingredient\n   *\n   * @type {string} photoUrl\n   */\n  @IsUrl()\n  @IsNotEmpty()\n  photoUrl: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateIngredientUseCase.html":{"url":"classes/CreateIngredientUseCase.html","title":"class - CreateIngredientUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateIngredientUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/use-cases/create/create-ingredient.use-case.ts\n        \n\n\n            \n                Description\n            \n            \n                use case for create ingredient\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUseCase\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: IIngredientService)\n                    \n                \n                        \n                            \n                                Defined in src/application/use-cases/create/create-ingredient.use-case.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of CreateIngredientUseCase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        IIngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ingredient service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(ingredient: ICreateIngredientDto)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/create/create-ingredient.use-case.ts:30\n                \n            \n\n\n            \n                \n                    execute use case\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ingredient\n                                    \n                                                ICreateIngredientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ingredient dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        ingredient created\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUseCase } from '@application/interface';\nimport { ICreateIngredientDto } from '@domain/dto';\nimport { IngredientDomainModel } from '@domain/models';\nimport { IIngredientService } from '@domain/services';\nimport { Observable } from 'rxjs';\n\n/**\n * use case for create ingredient\n *\n * @export\n * @class CreateIngredientUseCase\n * @typedef {CreateIngredientUseCase}\n * @implements {IUseCase}\n */\nexport class CreateIngredientUseCase implements IUseCase {\n  /**\n   * Creates an instance of CreateIngredientUseCase.\n   *\n   * @constructor\n   * @param {IIngredientService} service ingredient service\n   */\n  constructor(private readonly service: IIngredientService) {}\n\n  /**\n   * execute use case\n   *\n   * @param {ICreateIngredientDto} ingredient ingredient dto\n   * @returns {Observable} ingredient created\n   */\n  execute(ingredient: ICreateIngredientDto): Observable {\n    return this.service.create(ingredient);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMealPlannerDto.html":{"url":"classes/CreateMealPlannerDto.html","title":"class - CreateMealPlannerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMealPlannerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/dto/create-meal-planner.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                interface ICreateMealPlannerDto\n\n            \n\n\n            \n                Implements\n            \n            \n                            ICreateMealPlannerDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                name\n                            \n                            \n                                notes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AmountDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ValidateNested({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-meal-planner.dto.ts:27\n                        \n                    \n\n            \n                \n                    amount of the meal planner\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-meal-planner.dto.ts:45\n                        \n                    \n\n            \n                \n                    name of the meal planner\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-meal-planner.dto.ts:36\n                        \n                    \n\n            \n                \n                    notes of the meal planner\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICreateMealPlannerDto } from '@domain/dto';\nimport {\n  IsArray,\n  IsMongoId,\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\n\n/**\n * interface ICreateMealPlannerDto\n *\n * @export\n * @class CreateMealPlannerDto\n * @typedef {CreateMealPlannerDto}\n * @implements {ICreateMealPlannerDto}\n */\nexport class CreateMealPlannerDto implements ICreateMealPlannerDto {\n  /**\n   * amount of the meal planner\n   *\n   * @type {AmountDto[]} amount\n   */\n  @IsArray()\n  @ValidateNested({ each: true })\n  amount: AmountDto[];\n\n  /**\n   * notes of the meal planner\n   *\n   * @type {string} notes\n   */\n  @IsNotEmpty()\n  @IsString()\n  notes: string;\n\n  /**\n   * name of the meal planner\n   *\n   * @type {string} name\n   */\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n}\n\n/**\n * class AmountDto\n *\n * @class AmountDto\n * @typedef {AmountDto}\n */\nclass AmountDto {\n  /**\n   * amount of the ingredient\n   *\n   * @type {number} amount\n   */\n  @IsNumber()\n  amount: number;\n  /**\n   * ingredient id of the ingredient\n   *\n   * @type {string} ingredientId\n   */\n  @IsString()\n  @IsMongoId()\n  ingredientId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMealPlannerUseCase.html":{"url":"classes/CreateMealPlannerUseCase.html","title":"class - CreateMealPlannerUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMealPlannerUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/use-cases/create/create-meal-planner.use-case.ts\n        \n\n\n            \n                Description\n            \n            \n                use case to create a meal planner\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUseCase\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                            \n                                isExistRecipes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: IMealPlannerService, ingredientService: IIngredientService, userService: IUserService)\n                    \n                \n                        \n                            \n                                Defined in src/application/use-cases/create/create-meal-planner.use-case.ts:28\n                            \n                        \n\n                \n                    \n                            Creates an instance of CreateMealPlannerUseCase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        IMealPlannerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                meal planner service\n\n                                                        \n                                                \n                                                \n                                                        ingredientService\n                                                  \n                                                        \n                                                                        IIngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ingredient service\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        IUserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                user service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(id: string, mealPlanner: ICreateMealPlannerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/create/create-meal-planner.use-case.ts:50\n                \n            \n\n\n            \n                \n                    execute use case\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user id\n\n                                    \n                                \n                                \n                                    mealPlanner\n                                    \n                                                ICreateMealPlannerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        meal planner dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        meal planner created\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExistRecipes\n                        \n                    \n                \n            \n            \n                \nisExistRecipes(mealPlanner: ICreateMealPlannerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/create/create-meal-planner.use-case.ts:74\n                \n            \n\n\n            \n                \n                    check if recipes exist\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    mealPlanner\n                                    \n                                                ICreateMealPlannerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        meal planner dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        true if exist, false if not\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUseCase } from '@application/interface';\nimport { ICreateMealPlannerDto } from '@domain/dto';\nimport { MealPlannerDomainModel } from '@domain/models';\nimport {\n  IIngredientService,\n  IMealPlannerService,\n  IUserService,\n} from '@domain/services';\nimport { NotFoundException } from '@nestjs/common';\nimport {\n  Observable,\n  catchError,\n  forkJoin,\n  map,\n  of,\n  switchMap,\n  throwError,\n} from 'rxjs';\n\n/**\n * use case to create a meal planner\n *\n * @export\n * @class CreateMealPlannerUseCase\n * @typedef {CreateMealPlannerUseCase}\n * @implements {IUseCase}\n */\nexport class CreateMealPlannerUseCase implements IUseCase {\n  /**\n   * Creates an instance of CreateMealPlannerUseCase.\n   *\n   * @constructor\n   * @param {IMealPlannerService} service meal planner service\n   * @param {IIngredientService} ingredientService ingredient service\n   * @param {IUserService} userService user service\n   */\n  constructor(\n    private readonly service: IMealPlannerService,\n    private readonly ingredientService: IIngredientService,\n    private readonly userService: IUserService,\n  ) {}\n\n  /**\n   * execute use case\n   *\n   * @param {string} id user id\n   * @param {ICreateMealPlannerDto} mealPlanner meal planner dto\n   * @returns {Observable} meal planner created\n   */\n  execute(\n    id: string,\n    mealPlanner: ICreateMealPlannerDto,\n  ): Observable {\n    return this.isExistRecipes(mealPlanner).pipe(\n      switchMap((entidad) => {\n        return entidad\n          ? this.service.create(mealPlanner).pipe(\n              map((entity) => {\n                this.userService.addMealPlanner(id, entity);\n                return entity;\n              }),\n            )\n          : throwError(() => new NotFoundException('Recipe not found'));\n      }),\n    );\n  }\n\n  /**\n   * check if recipes exist\n   *\n   * @param {ICreateMealPlannerDto} mealPlanner meal planner dto\n   * @returns {Observable} true if exist, false if not\n   */\n  isExistRecipes(mealPlanner: ICreateMealPlannerDto): Observable {\n    const ids = mealPlanner.amount.map((ingredient) => ingredient.ingredientId);\n    const observables = ids.map((id) =>\n      this.ingredientService.findById(id).pipe(\n        map((entity) => {\n          return entity !== null;\n        }),\n        catchError(() => of(false)),\n      ),\n    );\n\n    return forkJoin(observables).pipe(\n      map((results) =>\n        results.every((result) => {\n          return result;\n        }),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRecipeDto.html":{"url":"classes/CreateRecipeDto.html","title":"class - CreateRecipeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRecipeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/dto/create-recipe.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                interface ICreateRecipeDto\n\n            \n\n\n            \n                Implements\n            \n            \n                            ICreateRecipeDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                ingredients\n                            \n                            \n                                name\n                            \n                            \n                                notes\n                            \n                            \n                                    Optional\n                                nutritionInfo\n                            \n                            \n                                photoUrl\n                            \n                            \n                                servings\n                            \n                            \n                                steps\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-recipe.dto.ts:38\n                        \n                    \n\n            \n                \n                    description of the recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ingredients[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@ArrayMinSize(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-recipe.dto.ts:48\n                        \n                    \n\n            \n                \n                    list of ingredients\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-recipe.dto.ts:29\n                        \n                    \n\n            \n                \n                    name of the recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-recipe.dto.ts:76\n                        \n                    \n\n            \n                \n                    notes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        nutritionInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-recipe.dto.ts:94\n                        \n                    \n\n            \n                \n                    nutrition info\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-recipe.dto.ts:57\n                        \n                    \n\n            \n                \n                    url of the photo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        servings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-recipe.dto.ts:85\n                        \n                    \n\n            \n                \n                    servings\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        steps\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({each: true})@IsString({each: true})@ArrayMinSize(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-recipe.dto.ts:67\n                        \n                    \n\n            \n                \n                    list of steps\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-recipe.dto.ts:104\n                        \n                    \n\n            \n                \n                    user id\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICreateRecipeDto } from '@domain/dto';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsMongoId,\n  IsNotEmpty,\n  IsNumber,\n  IsPositive,\n  IsString,\n  IsUrl,\n} from 'class-validator';\n\n/**\n * interface ICreateRecipeDto\n *\n * @export\n * @class CreateRecipeDto\n * @typedef {CreateRecipeDto}\n * @implements {ICreateRecipeDto}\n */\nexport class CreateRecipeDto implements ICreateRecipeDto {\n  /**\n   * name of the recipe\n   *\n   * @type {string} name\n   */\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  /**\n   * description of the recipe\n   *\n   * @type {string} description\n   */\n  @IsString()\n  @IsNotEmpty()\n  description: string;\n\n  /**\n   * list of ingredients\n   *\n   * @type {Ingredients[]} ingredients\n   */\n  @IsArray()\n  @IsString({ each: true })\n  @ArrayMinSize(1)\n  ingredients: Ingredients[];\n\n  /**\n   * url of the photo\n   *\n   * @type {string} photoUrl\n   */\n  @IsUrl()\n  @IsNotEmpty()\n  photoUrl: string;\n\n  /**\n   * list of steps\n   *\n   * @type {string[]} steps\n   */\n  @IsNotEmpty({ each: true })\n  @IsString({ each: true })\n  @ArrayMinSize(1)\n  steps: string[];\n\n  /**\n   * notes\n   *\n   * @type {string} notes\n   */\n  @IsString()\n  @IsNotEmpty()\n  notes: string;\n\n  /**\n   * servings\n   *\n   * @type {number} servings\n   */\n  @IsNumber()\n  @IsPositive()\n  servings: number;\n\n  /**\n   * nutrition info\n   *\n   * @type {?string} nutritionInfo\n   */\n  @IsString()\n  @IsNotEmpty()\n  nutritionInfo?: string;\n\n  /**\n   * user id\n   *\n   * @type {string} userId\n   */\n  @IsNotEmpty()\n  @IsString()\n  @IsMongoId()\n  userId: string;\n}\n\n/**\n * class Ingredients\n *\n * @class Ingredients\n * @typedef {Ingredients}\n */\nclass Ingredients {\n  /**\n   * amount of ingredient\n   *\n   * @type {number} amount\n   */\n  @IsNotEmpty()\n  @IsNumber()\n  amount: number;\n  /**\n   * ingredient id\n   *\n   * @type {string} ingredientId\n   */\n  @IsNotEmpty()\n  @IsString()\n  @IsMongoId()\n  ingredientId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRecipeUseCase.html":{"url":"classes/CreateRecipeUseCase.html","title":"class - CreateRecipeUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRecipeUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/use-cases/create/create-recipe.use-case.ts\n        \n\n\n            \n                Description\n            \n            \n                use case for create recipe\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUseCase\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                            \n                                isExistIngredients\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: IRecipeService, ingredientService: IIngredientService)\n                    \n                \n                        \n                            \n                                Defined in src/application/use-cases/create/create-recipe.use-case.ts:24\n                            \n                        \n\n                \n                    \n                            Creates an instance of CreateRecipeUseCase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        IRecipeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                recipe service\n\n                                                        \n                                                \n                                                \n                                                        ingredientService\n                                                  \n                                                        \n                                                                        IIngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ingredient service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(recipe: ICreateRecipeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/create/create-recipe.use-case.ts:43\n                \n            \n\n\n            \n                \n                    execute use case\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    recipe\n                                    \n                                                ICreateRecipeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        recipe created\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExistIngredients\n                        \n                    \n                \n            \n            \n                \nisExistIngredients(recipe: ICreateRecipeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/create/create-recipe.use-case.ts:59\n                \n            \n\n\n            \n                \n                    check if ingredients exist\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    recipe\n                                    \n                                                ICreateRecipeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        true if exist, false if not\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUseCase } from '@application/interface';\nimport { ICreateRecipeDto } from '@domain/dto';\nimport { RecipeDomainModel } from '@domain/models';\nimport { IIngredientService, IRecipeService } from '@domain/services';\nimport { NotFoundException } from '@nestjs/common';\nimport {\n  Observable,\n  catchError,\n  forkJoin,\n  map,\n  of,\n  switchMap,\n  throwError,\n} from 'rxjs';\n\n/**\n * use case for create recipe\n *\n * @export\n * @class CreateRecipeUseCase\n * @typedef {CreateRecipeUseCase}\n * @implements {IUseCase}\n */\nexport class CreateRecipeUseCase implements IUseCase {\n  /**\n   * Creates an instance of CreateRecipeUseCase.\n   *\n   * @constructor\n   * @param {IRecipeService} service recipe service\n   * @param {IIngredientService} ingredientService ingredient service\n   */\n  constructor(\n    private readonly service: IRecipeService,\n    private readonly ingredientService: IIngredientService,\n  ) {}\n\n  /**\n   * execute use case\n   *\n   * @param {ICreateRecipeDto} recipe recipe dto\n   * @returns {Observable} recipe created\n   */\n  execute(recipe: ICreateRecipeDto): Observable {\n    return this.isExistIngredients(recipe).pipe(\n      switchMap((entidad) => {\n        return entidad\n          ? this.service.create(recipe)\n          : throwError(() => new NotFoundException('Ingredient not found'));\n      }),\n    );\n  }\n\n  /**\n   * check if ingredients exist\n   *\n   * @param {ICreateRecipeDto} recipe recipe dto\n   * @returns {Observable} true if exist, false if not\n   */\n  isExistIngredients(recipe: ICreateRecipeDto): Observable {\n    const ids = recipe.ingredients.map((ingredient) => ingredient.ingredientId);\n\n    const observables = ids.map((id) =>\n      this.ingredientService.findById(id).pipe(\n        map((entity) => {\n          return entity !== null;\n        }),\n        catchError(() => of(false)),\n      ),\n    );\n\n    return forkJoin(observables).pipe(\n      map((results) =>\n        results.every((result) => {\n          return result;\n        }),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/dto/create-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                class CreateUserDto\n\n            \n\n\n            \n                Implements\n            \n            \n                            ICreateUserDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                googleId\n                            \n                            \n                                name\n                            \n                            \n                                photoUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-user.dto.ts:28\n                        \n                    \n\n            \n                \n                    email of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        googleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-user.dto.ts:44\n                        \n                    \n\n            \n                \n                    google id of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-user.dto.ts:20\n                        \n                    \n\n            \n                \n                    name of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-user.dto.ts:36\n                        \n                    \n\n            \n                \n                    photo url of the user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICreateUserDto } from '@domain/dto';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\n/**\n * class CreateUserDto\n *\n * @export\n * @class CreateUserDto\n * @typedef {CreateUserDto}\n * @implements {ICreateUserDto}\n */\nexport class CreateUserDto implements ICreateUserDto {\n  /**\n   * name of the user\n   *\n   * @type {string} name\n   */\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n  /**\n   * email of the user\n   *\n   * @type {string} email\n   */\n  @IsNotEmpty()\n  @IsString()\n  email: string;\n  /**\n   * photo url of the user\n   *\n   * @type {string} photoUrl\n   */\n  @IsNotEmpty()\n  @IsString()\n  photoUrl: string;\n  /**\n   * google id of the user\n   *\n   * @type {string} googleId\n   */\n  @IsNotEmpty()\n  @IsString()\n  googleId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserUseCase.html":{"url":"classes/CreateUserUseCase.html","title":"class - CreateUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/use-cases/create/create-user.use-case.ts\n        \n\n\n            \n                Description\n            \n            \n                use case to create a user\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUseCase\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: IUserService, authService: IAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/application/use-cases/create/create-user.use-case.ts:16\n                            \n                        \n\n                \n                    \n                            creates an instance of CreateUserUseCase\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        IUserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        IAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(user: ICreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/create/create-user.use-case.ts:38\n                \n            \n\n\n            \n                \n                    execute use case\n data: UserDomainModel;\n token: string;\n}>} - user created and token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                ICreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nuser to create\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \nuser created and token\n\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUseCase } from '@application/interface/';\nimport { ICreateUserDto } from '@domain/dto';\nimport { UserDomainModel } from '@domain/models';\nimport { IUserService } from '@domain/services';\nimport { IAuthService } from '@domain/services/auth.service';\nimport { Observable, switchMap } from 'rxjs';\n\n/**\n * use case to create a user\n *\n * @export\n * @class CreateUserUseCase\n * @typedef {CreateUserUseCase}\n * @implements {IUseCase}\n */\nexport class CreateUserUseCase implements IUseCase {\n  /**\n   * creates an instance of CreateUserUseCase\n   *\n   * @constructor\n   * @param {IUserService} service\n   * @param {IAuthService} authService\n   */\n  constructor(\n    private readonly service: IUserService,\n    private readonly authService: IAuthService,\n  ) {}\n\n  /**\n   * execute use case\n   *\n   * @param {ICreateUserDto} user - user to create\n   * @returns {Observable} - user created and token\n   */\n  execute(user: ICreateUserDto): Observable {\n    return this.service.create(user).pipe(\n      switchMap((user) => {\n        return this.authService.generateToken(user);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Delegate.html":{"url":"classes/Delegate.html","title":"class - Delegate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Delegate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/delegate/delegate.delegate.ts\n        \n\n\n            \n                Description\n            \n            \n                delegate class for use cases\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUseCase\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                delegate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                            \n                                toCreateIngredient\n                            \n                            \n                                toCreateMealPlanner\n                            \n                            \n                                toCreateRecipe\n                            \n                            \n                                toCreateUser\n                            \n                            \n                                toDeleteMealPlanner\n                            \n                            \n                                toDeleteRecipe\n                            \n                            \n                                toDeleteUser\n                            \n                            \n                                toGetAllIngredients\n                            \n                            \n                                toGetIngredient\n                            \n                            \n                                toGetIngredientByNames\n                            \n                            \n                                toGetMealPlanner\n                            \n                            \n                                toGetRecipe\n                            \n                            \n                                toGetRecipesByUser\n                            \n                            \n                                toGetUser\n                            \n                            \n                                toUpdateIngredient\n                            \n                            \n                                toUpdateMealPlanner\n                            \n                            \n                                toUpdateRecipe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(recipesService: IRecipeService, ingredientService: IIngredientService, mealPlannerService: IMealPlannerService, userService: IUserService, authService: IAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/application/delegate/delegate.delegate.ts:38\n                            \n                        \n\n                \n                    \n                            creates an instance of Delegate\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        recipesService\n                                                  \n                                                        \n                                                                        IRecipeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nrecipe service\n\n\n                                                        \n                                                \n                                                \n                                                        ingredientService\n                                                  \n                                                        \n                                                                        IIngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ningredient service\n\n\n                                                        \n                                                \n                                                \n                                                        mealPlannerService\n                                                  \n                                                        \n                                                                        IMealPlannerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nmeal planner service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        IUserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nuser service\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        IAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nauth service\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        delegate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUseCase\n\n                    \n                \n                    \n                        \n                                Defined in src/application/delegate/delegate.delegate.ts:63\n                        \n                    \n\n            \n                \n                    instance of use case to delegate\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/application/delegate/delegate.delegate.ts:72\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        Response\n                    \n                \n            \n\n            \n                \n                    execute use case\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toCreateIngredient\n                        \n                    \n                \n            \n            \n                \ntoCreateIngredient()\n                \n            \n\n\n            \n                \n                    Defined in src/application/delegate/delegate.delegate.ts:79\n                \n            \n\n\n            \n                \n                     instance of use case CreateIngredientUseCase to delegate\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toCreateMealPlanner\n                        \n                    \n                \n            \n            \n                \ntoCreateMealPlanner()\n                \n            \n\n\n            \n                \n                    Defined in src/application/delegate/delegate.delegate.ts:94\n                \n            \n\n\n            \n                \n                    instance of use case CreateMealPlannerUseCase to delegate\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toCreateRecipe\n                        \n                    \n                \n            \n            \n                \ntoCreateRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/application/delegate/delegate.delegate.ts:85\n                \n            \n\n\n            \n                \n                    instance of use case CreateRecipeUseCase to delegate\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toCreateUser\n                        \n                    \n                \n            \n            \n                \ntoCreateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/application/delegate/delegate.delegate.ts:104\n                \n            \n\n\n            \n                \n                     instance of use case CreateUserUseCase to delegate\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toDeleteMealPlanner\n                        \n                    \n                \n            \n            \n                \ntoDeleteMealPlanner()\n                \n            \n\n\n            \n                \n                    Defined in src/application/delegate/delegate.delegate.ts:117\n                \n            \n\n\n            \n                \n                     instance of use case DeleteMealPlannerUseCase to delegate\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toDeleteRecipe\n                        \n                    \n                \n            \n            \n                \ntoDeleteRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/application/delegate/delegate.delegate.ts:111\n                \n            \n\n\n            \n                \n                     instance of use case DeleteIngredientUseCase to delegate\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toDeleteUser\n                        \n                    \n                \n            \n            \n                \ntoDeleteUser()\n                \n            \n\n\n            \n                \n                    Defined in src/application/delegate/delegate.delegate.ts:123\n                \n            \n\n\n            \n                \n                     instance of use case DeleteUserUseCase to delegate\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toGetAllIngredients\n                        \n                    \n                \n            \n            \n                \ntoGetAllIngredients()\n                \n            \n\n\n            \n                \n                    Defined in src/application/delegate/delegate.delegate.ts:155\n                \n            \n\n\n            \n                \n                     instance of use case GetAllIngredientUseCase to delegate\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toGetIngredient\n                        \n                    \n                \n            \n            \n                \ntoGetIngredient()\n                \n            \n\n\n            \n                \n                    Defined in src/application/delegate/delegate.delegate.ts:161\n                \n            \n\n\n            \n                \n                    instance of use case GetIngredientUseCase to delegate\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toGetIngredientByNames\n                        \n                    \n                \n            \n            \n                \ntoGetIngredientByNames()\n                \n            \n\n\n            \n                \n                    Defined in src/application/delegate/delegate.delegate.ts:167\n                \n            \n\n\n            \n                \n                    instance of use case GetIngredientByNameUseCase to delegate\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toGetMealPlanner\n                        \n                    \n                \n            \n            \n                \ntoGetMealPlanner()\n                \n            \n\n\n            \n                \n                    Defined in src/application/delegate/delegate.delegate.ts:173\n                \n            \n\n\n            \n                \n                    instance of use case GetMealPlannerUseCase to delegate\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toGetRecipe\n                        \n                    \n                \n            \n            \n                \ntoGetRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/application/delegate/delegate.delegate.ts:179\n                \n            \n\n\n            \n                \n                    instance of use case GetRecipeUseCase to delegate\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toGetRecipesByUser\n                        \n                    \n                \n            \n            \n                \ntoGetRecipesByUser()\n                \n            \n\n\n            \n                \n                    Defined in src/application/delegate/delegate.delegate.ts:191\n                \n            \n\n\n            \n                \n                    instance of use case GetAllRecipesUseCase to delegate\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toGetUser\n                        \n                    \n                \n            \n            \n                \ntoGetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/application/delegate/delegate.delegate.ts:185\n                \n            \n\n\n            \n                \n                    instance of use case GetUserUseCase to delegate\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toUpdateIngredient\n                        \n                    \n                \n            \n            \n                \ntoUpdateIngredient()\n                \n            \n\n\n            \n                \n                    Defined in src/application/delegate/delegate.delegate.ts:130\n                \n            \n\n\n            \n                \n                    instance of use case UpdateIngredientUseCase to delegate\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toUpdateMealPlanner\n                        \n                    \n                \n            \n            \n                \ntoUpdateMealPlanner()\n                \n            \n\n\n            \n                \n                    Defined in src/application/delegate/delegate.delegate.ts:145\n                \n            \n\n\n            \n                \n                    instance of use case UpdateMealPlannerUseCase to delegate\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toUpdateRecipe\n                        \n                    \n                \n            \n            \n                \ntoUpdateRecipe()\n                \n            \n\n\n            \n                \n                    Defined in src/application/delegate/delegate.delegate.ts:136\n                \n            \n\n\n            \n                \n                     instance of use case UpdateRecipeUseCase to delegate\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUseCase } from '@application/interface';\nimport {\n  CreateIngredientUseCase,\n  CreateMealPlannerUseCase,\n  CreateRecipeUseCase,\n  CreateUserUseCase,\n  DeleteMealPlannerUseCase,\n  DeleteRecipeUseCase,\n  DeleteUserUseCase,\n  GetAllIngredientUseCase,\n  GetIngredientByNameUseCase,\n  GetIngredientUseCase,\n  GetMealPlannerUseCase,\n  GetRecipeUseCase,\n  GetUserUseCase,\n  UpdateIngredientUseCase,\n  UpdateMealPlannerUseCase,\n  UpdateRecipeUseCase,\n} from '@application/use-cases';\nimport { GetAllRecipesUseCase } from '@application/use-cases/get/get-all-recipes.use-case';\nimport {\n  IIngredientService,\n  IMealPlannerService,\n  IRecipeService,\n  IUserService,\n} from '@domain/services';\nimport { IAuthService } from '@domain/services/auth.service';\nimport { Observable } from 'rxjs';\n\n/**\n * delegate class for use cases\n *\n * @export\n * @class Delegate\n * @typedef {Delegate}\n * @implements {IUseCase}\n */\nexport class Delegate implements IUseCase {\n  /**\n   * creates an instance of Delegate\n   *\n   * @constructor\n   * @param {IRecipeService} recipesService - recipe service\n   * @param {IIngredientService} ingredientService - ingredient service\n   * @param {IMealPlannerService} mealPlannerService - meal planner service\n   * @param {IUserService} userService - user service\n   * @param {IAuthService} authService - auth service\n   */\n  constructor(\n    private readonly recipesService: IRecipeService,\n    private readonly ingredientService: IIngredientService,\n    private readonly mealPlannerService: IMealPlannerService,\n    private readonly userService: IUserService,\n    private readonly authService: IAuthService,\n  ) {}\n\n  /**\n   * instance of use case to delegate\n   *\n   * @private\n   * @type {IUseCase}\n   */\n  private delegate: IUseCase;\n\n  /**\n   * execute use case\n   *\n   * @template Response\n   * @param {...any[]} args\n   * @returns {Observable}\n   */\n  execute(...args: any[]): Observable {\n    return this.delegate.execute(...args);\n  }\n\n  /**\n   *  instance of use case CreateIngredientUseCase to delegate\n   */\n  toCreateIngredient(): void {\n    this.delegate = new CreateIngredientUseCase(this.ingredientService);\n  }\n  /**\n   * instance of use case CreateRecipeUseCase to delegate\n   */\n  toCreateRecipe(): void {\n    this.delegate = new CreateRecipeUseCase(\n      this.recipesService,\n      this.ingredientService,\n    );\n  }\n  /**\n   * instance of use case CreateMealPlannerUseCase to delegate\n   */\n  toCreateMealPlanner(): void {\n    this.delegate = new CreateMealPlannerUseCase(\n      this.mealPlannerService,\n      this.ingredientService,\n      this.userService,\n    );\n  }\n  /**\n   *  instance of use case CreateUserUseCase to delegate\n   */\n  toCreateUser(): void {\n    this.delegate = new CreateUserUseCase(this.userService, this.authService);\n  }\n\n  /**\n   *  instance of use case DeleteIngredientUseCase to delegate\n   */\n  toDeleteRecipe(): void {\n    this.delegate = new DeleteRecipeUseCase(this.recipesService);\n  }\n  /**\n   *  instance of use case DeleteMealPlannerUseCase to delegate\n   */\n  toDeleteMealPlanner(): void {\n    this.delegate = new DeleteMealPlannerUseCase(this.mealPlannerService);\n  }\n  /**\n   *  instance of use case DeleteUserUseCase to delegate\n   */\n  toDeleteUser(): void {\n    this.delegate = new DeleteUserUseCase(this.userService);\n  }\n\n  /**\n   * instance of use case UpdateIngredientUseCase to delegate\n   */\n  toUpdateIngredient(): void {\n    this.delegate = new UpdateIngredientUseCase(this.ingredientService);\n  }\n  /**\n   *  instance of use case UpdateRecipeUseCase to delegate\n   */\n  toUpdateRecipe(): void {\n    this.delegate = new UpdateRecipeUseCase(\n      this.recipesService,\n      this.ingredientService,\n    );\n  }\n  /**\n   * instance of use case UpdateMealPlannerUseCase to delegate\n   */\n  toUpdateMealPlanner(): void {\n    this.delegate = new UpdateMealPlannerUseCase(\n      this.mealPlannerService,\n      this.ingredientService,\n    );\n  }\n\n  /**\n   *  instance of use case GetAllIngredientUseCase to delegate\n   */\n  toGetAllIngredients(): void {\n    this.delegate = new GetAllIngredientUseCase(this.ingredientService);\n  }\n  /**\n   * instance of use case GetIngredientUseCase to delegate\n   */\n  toGetIngredient(): void {\n    this.delegate = new GetIngredientUseCase(this.ingredientService);\n  }\n  /**\n   * instance of use case GetIngredientByNameUseCase to delegate\n   */\n  toGetIngredientByNames(): void {\n    this.delegate = new GetIngredientByNameUseCase(this.ingredientService);\n  }\n  /**\n   * instance of use case GetMealPlannerUseCase to delegate\n   */\n  toGetMealPlanner(): void {\n    this.delegate = new GetMealPlannerUseCase(this.mealPlannerService);\n  }\n  /**\n   * instance of use case GetRecipeUseCase to delegate\n   */\n  toGetRecipe(): void {\n    this.delegate = new GetRecipeUseCase(this.recipesService);\n  }\n  /**\n   * instance of use case GetUserUseCase to delegate\n   */\n  toGetUser(): void {\n    this.delegate = new GetUserUseCase(this.userService, this.authService);\n  }\n  /**\n   * instance of use case GetAllRecipesUseCase to delegate\n   */\n  toGetRecipesByUser(): void {\n    this.delegate = new GetAllRecipesUseCase(this.recipesService);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMealPlannerUseCase.html":{"url":"classes/DeleteMealPlannerUseCase.html","title":"class - DeleteMealPlannerUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMealPlannerUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/use-cases/delete/delete-meal-planner.use-case.ts\n        \n\n\n            \n                Description\n            \n            \n                use case for delete meal planner\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUseCase\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: IMealPlannerService)\n                    \n                \n                        \n                            \n                                Defined in src/application/use-cases/delete/delete-meal-planner.use-case.ts:14\n                            \n                        \n\n                \n                    \n                            Creates an instance of DeleteMealPlannerUseCase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        IMealPlannerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                meal planner service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/delete/delete-meal-planner.use-case.ts:29\n                \n            \n\n\n            \n                \n                    execute use case\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        meal planner id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        meal planner domain model\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUseCase } from '@application/interface';\nimport { MealPlannerDomainModel } from '@domain/models';\nimport { IMealPlannerService } from '@domain/services';\nimport { Observable } from 'rxjs';\n\n/**\n * use case for delete meal planner\n *\n * @export\n * @class DeleteMealPlannerUseCase\n * @typedef {DeleteMealPlannerUseCase}\n * @implements {IUseCase}\n */\nexport class DeleteMealPlannerUseCase implements IUseCase {\n  /**\n   * Creates an instance of DeleteMealPlannerUseCase.\n   *\n   * @constructor\n   * @param {IMealPlannerService} service meal planner service\n   */\n  constructor(private readonly service: IMealPlannerService) {}\n\n  /**\n   * execute use case\n   *\n   * @param {string} _id meal planner id\n   * @returns {Observable} meal planner domain model\n   */\n  execute(_id: string): Observable {\n    return this.service.delete(_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteRecipeUseCase.html":{"url":"classes/DeleteRecipeUseCase.html","title":"class - DeleteRecipeUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteRecipeUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/use-cases/delete/delete-recipe.use-case.ts\n        \n\n\n            \n                Description\n            \n            \n                use case for delete recipe\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUseCase\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: IRecipeService)\n                    \n                \n                        \n                            \n                                Defined in src/application/use-cases/delete/delete-recipe.use-case.ts:14\n                            \n                        \n\n                \n                    \n                            Creates an instance of DeleteRecipeUseCase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        IRecipeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                recipe service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/delete/delete-recipe.use-case.ts:30\n                \n            \n\n\n            \n                \n                    execute use case\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        recipe domain model\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUseCase } from '@application/interface';\nimport { RecipeDomainModel } from '@domain/models';\nimport { IRecipeService } from '@domain/services';\nimport { Observable } from 'rxjs';\n\n/**\n * use case for delete recipe\n *\n * @export\n * @class DeleteRecipeUseCase\n * @typedef {DeleteRecipeUseCase}\n * @implements {IUseCase}\n */\nexport class DeleteRecipeUseCase implements IUseCase {\n  /**\n   * Creates an instance of DeleteRecipeUseCase.\n   *\n   * @constructor\n   * @param {IRecipeService} service recipe service\n   */\n  constructor(private readonly service: IRecipeService) {}\n\n  /**\n   * execute use case\n   *\n   * @public\n   * @param {string} _id recipe id\n   * @returns {Observable} recipe domain model\n   */\n  public execute(_id: string): Observable {\n    return this.service.delete(_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserUseCase.html":{"url":"classes/DeleteUserUseCase.html","title":"class - DeleteUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/use-cases/delete/delete-user.use-case.ts\n        \n\n\n            \n                Description\n            \n            \n                use case for delete user\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUseCase\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: IUserService)\n                    \n                \n                        \n                            \n                                Defined in src/application/use-cases/delete/delete-user.use-case.ts:14\n                            \n                        \n\n                \n                    \n                            Creates an instance of DeleteUserUseCase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        IUserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                user service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/delete/delete-user.use-case.ts:29\n                \n            \n\n\n            \n                \n                    execute use case\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        user domain model\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUseCase } from '@application/interface';\nimport { UserDomainModel } from '@domain/models';\nimport { IUserService } from '@domain/services';\nimport { Observable } from 'rxjs';\n\n/**\n * use case for delete user\n *\n * @export\n * @class DeleteUserUseCase\n * @typedef {DeleteUserUseCase}\n * @implements {IUseCase}\n */\nexport class DeleteUserUseCase implements IUseCase {\n  /**\n   * Creates an instance of DeleteUserUseCase.\n   *\n   * @constructor\n   * @param {IUserService} service user service\n   */\n  constructor(private readonly service: IUserService) {}\n\n  /**\n   * execute use case\n   *\n   * @param {string} _id user id\n   * @returns {Observable} user domain model\n   */\n  execute(_id: string): Observable {\n    return this.service.delete(_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllIngredientUseCase.html":{"url":"classes/GetAllIngredientUseCase.html","title":"class - GetAllIngredientUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllIngredientUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/use-cases/get/get-all-ingredient.use-case.ts\n        \n\n\n            \n                Description\n            \n            \n                use case for get all ingredient\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUseCase\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: IIngredientService)\n                    \n                \n                        \n                            \n                                Defined in src/application/use-cases/get/get-all-ingredient.use-case.ts:14\n                            \n                        \n\n                \n                    \n                            Creates an instance of GetAllIngredientUseCase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        IIngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ingredient service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute()\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/get/get-all-ingredient.use-case.ts:28\n                \n            \n\n\n            \n                \n                    execute use case\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        ingredient domain model\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUseCase } from '@application/interface';\nimport { IngredientDomainModel } from '@domain/models';\nimport { IIngredientService } from '@domain/services';\nimport { Observable } from 'rxjs';\n\n/**\n * use case for get all ingredient\n *\n * @export\n * @class GetAllIngredientUseCase\n * @typedef {GetAllIngredientUseCase}\n * @implements {IUseCase}\n */\nexport class GetAllIngredientUseCase implements IUseCase {\n  /**\n   * Creates an instance of GetAllIngredientUseCase.\n   *\n   * @constructor\n   * @param {IIngredientService} service ingredient service\n   */\n  constructor(private readonly service: IIngredientService) {}\n\n  /**\n   * execute use case\n   *\n   * @returns {Observable} ingredient domain model\n   */\n  execute(): Observable {\n    return this.service.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllRecipesUseCase.html":{"url":"classes/GetAllRecipesUseCase.html","title":"class - GetAllRecipesUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllRecipesUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/use-cases/get/get-all-recipes.use-case.ts\n        \n\n\n            \n                Description\n            \n            \n                use case for get all recipes\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUseCase\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: IRecipeService)\n                    \n                \n                        \n                            \n                                Defined in src/application/use-cases/get/get-all-recipes.use-case.ts:14\n                            \n                        \n\n                \n                    \n                            Creates an instance of GetAllRecipesUseCase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        IRecipeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                recipe service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/get/get-all-recipes.use-case.ts:29\n                \n            \n\n\n            \n                \n                    execute use case\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        recipe domain model\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUseCase } from '@application/interface';\nimport { RecipeDomainModel } from '@domain/models';\nimport { IRecipeService } from '@domain/services';\nimport { Observable } from 'rxjs';\n\n/**\n * use case for get all recipes\n *\n * @export\n * @class GetAllRecipesUseCase\n * @typedef {GetAllRecipesUseCase}\n * @implements {IUseCase}\n */\nexport class GetAllRecipesUseCase implements IUseCase {\n  /**\n   * Creates an instance of GetAllRecipesUseCase.\n   *\n   * @constructor\n   * @param {IRecipeService} service recipe service\n   */\n  constructor(private readonly service: IRecipeService) {}\n\n  /**\n   * execute use case\n   *\n   * @param {string} id user id\n   * @returns {Observable} recipe domain model\n   */\n  execute(id: string): Observable {\n    return this.service.findAllByUserId(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetIngredientByNameUseCase.html":{"url":"classes/GetIngredientByNameUseCase.html","title":"class - GetIngredientByNameUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetIngredientByNameUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/use-cases/get/get-ingredient-name.use-case.ts\n        \n\n\n            \n                Description\n            \n            \n                use case for get ingredient by name\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUseCase\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: IIngredientService)\n                    \n                \n                        \n                            \n                                Defined in src/application/use-cases/get/get-ingredient-name.use-case.ts:14\n                            \n                        \n\n                \n                    \n                            Creates an instance of GetIngredientByNameUseCase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        IIngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ingredient service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/get/get-ingredient-name.use-case.ts:29\n                \n            \n\n\n            \n                \n                    execute use case\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ingredient name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        ingredient domain model\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUseCase } from '@application/interface';\nimport { IngredientDomainModel } from '@domain/models';\nimport { IIngredientService } from '@domain/services';\nimport { Observable } from 'rxjs';\n\n/**\n * use case for get ingredient by name\n *\n * @export\n * @class GetIngredientByNameUseCase\n * @typedef {GetIngredientByNameUseCase}\n * @implements {IUseCase}\n */\nexport class GetIngredientByNameUseCase implements IUseCase {\n  /**\n   * Creates an instance of GetIngredientByNameUseCase.\n   *\n   * @constructor\n   * @param {IIngredientService} service ingredient service\n   */\n  constructor(private readonly service: IIngredientService) {}\n\n  /**\n   * execute use case\n   *\n   * @param {string} name ingredient name\n   * @returns {Observable} ingredient domain model\n   */\n  execute(name: string): Observable {\n    return this.service.findByName(name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetIngredientUseCase.html":{"url":"classes/GetIngredientUseCase.html","title":"class - GetIngredientUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetIngredientUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/use-cases/get/get-ingredient-id.use-case.ts\n        \n\n\n            \n                Description\n            \n            \n                use case for get ingredient by id\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUseCase\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: IIngredientService)\n                    \n                \n                        \n                            \n                                Defined in src/application/use-cases/get/get-ingredient-id.use-case.ts:14\n                            \n                        \n\n                \n                    \n                            Creates an instance of GetIngredientUseCase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        IIngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ingredient service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/get/get-ingredient-id.use-case.ts:29\n                \n            \n\n\n            \n                \n                    execute use case\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ingredient id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        ingredient domain model\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUseCase } from '@application/interface';\nimport { IngredientDomainModel } from '@domain/models';\nimport { IIngredientService } from '@domain/services';\nimport { Observable } from 'rxjs';\n\n/**\n * use case for get ingredient by id\n *\n * @export\n * @class GetIngredientUseCase\n * @typedef {GetIngredientUseCase}\n * @implements {IUseCase}\n */\nexport class GetIngredientUseCase implements IUseCase {\n  /**\n   * Creates an instance of GetIngredientUseCase.\n   *\n   * @constructor\n   * @param {IIngredientService} service ingredient service\n   */\n  constructor(private readonly service: IIngredientService) {}\n\n  /**\n   * execute use case\n   *\n   * @param {string} id ingredient id\n   * @returns {Observable} ingredient domain model\n   */\n  execute(id: string): Observable {\n    return this.service.findById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetMealPlannerUseCase.html":{"url":"classes/GetMealPlannerUseCase.html","title":"class - GetMealPlannerUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetMealPlannerUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/use-cases/get/get-meal-planner.use-case.ts\n        \n\n\n            \n                Description\n            \n            \n                use case for get meal planner by id\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUseCase\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: IMealPlannerService)\n                    \n                \n                        \n                            \n                                Defined in src/application/use-cases/get/get-meal-planner.use-case.ts:14\n                            \n                        \n\n                \n                    \n                            Creates an instance of GetMealPlannerUseCase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        IMealPlannerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                meal planner service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/get/get-meal-planner.use-case.ts:29\n                \n            \n\n\n            \n                \n                    execute use case\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        meal planner id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        meal planner domain model\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUseCase } from '@application/interface';\nimport { MealPlannerDomainModel } from '@domain/models';\nimport { IMealPlannerService } from '@domain/services';\nimport { Observable } from 'rxjs';\n\n/**\n * use case for get meal planner by id\n *\n * @export\n * @class GetMealPlannerUseCase\n * @typedef {GetMealPlannerUseCase}\n * @implements {IUseCase}\n */\nexport class GetMealPlannerUseCase implements IUseCase {\n  /**\n   * Creates an instance of GetMealPlannerUseCase.\n   *\n   * @constructor\n   * @param {IMealPlannerService} service meal planner service\n   */\n  constructor(private readonly service: IMealPlannerService) {}\n\n  /**\n   * execute use case\n   *\n   * @param {string} id meal planner id\n   * @returns {Observable} meal planner domain model\n   */\n  execute(id: string): Observable {\n    return this.service.findById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetRecipeUseCase.html":{"url":"classes/GetRecipeUseCase.html","title":"class - GetRecipeUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetRecipeUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/use-cases/get/get-recipe.use-case.ts\n        \n\n\n            \n                Description\n            \n            \n                use case for get recipe\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUseCase\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: IRecipeService)\n                    \n                \n                        \n                            \n                                Defined in src/application/use-cases/get/get-recipe.use-case.ts:14\n                            \n                        \n\n                \n                    \n                            Creates an instance of GetRecipeUseCase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        IRecipeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                recipe service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/get/get-recipe.use-case.ts:29\n                \n            \n\n\n            \n                \n                    execute use case\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        recipe domain model\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUseCase } from '@application/interface';\nimport { RecipeDomainModel } from '@domain/models';\nimport { IRecipeService } from '@domain/services';\nimport { Observable } from 'rxjs';\n\n/**\n * use case for get recipe\n *\n * @export\n * @class GetRecipeUseCase\n * @typedef {GetRecipeUseCase}\n * @implements {IUseCase}\n */\nexport class GetRecipeUseCase implements IUseCase {\n  /**\n   * Creates an instance of GetRecipeUseCase.\n   *\n   * @constructor\n   * @param {IRecipeService} service recipe service\n   */\n  constructor(private readonly service: IRecipeService) {}\n\n  /**\n   * execute use case\n   *\n   * @param {string} _id recipe id\n   * @returns {Observable} recipe domain model\n   */\n  execute(_id: string): Observable {\n    return this.service.findById(_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserUseCase.html":{"url":"classes/GetUserUseCase.html","title":"class - GetUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/use-cases/get/get-user.use-case.ts\n        \n\n\n            \n                Description\n            \n            \n                use case for get user\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUseCase\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: IUserService, authService: IAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/application/use-cases/get/get-user.use-case.ts:16\n                            \n                        \n\n                \n                    \n                            Creates an instance of GetUserUseCase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        IUserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                user service\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        IAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                auth service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/get/get-user.use-case.ts:38\n                \n            \n\n\n            \n                \n                    execute use case\n data: UserDomainModel;\n token: string;\n}>} user domain model\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        user domain model\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUseCase } from '@application/interface';\nimport { UserDomainModel } from '@domain/models';\nimport { IUserService } from '@domain/services';\nimport { IAuthService } from '@domain/services/auth.service';\nimport { NotFoundException } from '@nestjs/common';\nimport { Observable, switchMap, throwError } from 'rxjs';\n\n/**\n * use case for get user\n *\n * @export\n * @class GetUserUseCase\n * @typedef {GetUserUseCase}\n * @implements {IUseCase}\n */\nexport class GetUserUseCase implements IUseCase {\n  /**\n   * Creates an instance of GetUserUseCase.\n   *\n   * @constructor\n   * @param {IUserService} service user service\n   * @param {IAuthService} authService auth service\n   */\n  constructor(\n    private readonly service: IUserService,\n    private readonly authService: IAuthService,\n  ) {}\n\n  /**\n   * execute use case\n   *\n   * @param {string} _id user id\n   * @returns {Observable} user domain model\n   */\n  execute(_id: string): Observable {\n    return this.service.findById(_id).pipe(\n      switchMap((user) => {\n        return user\n          ? this.authService.generateToken(user)\n          : throwError(() => new NotFoundException('User not found'));\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthService.html":{"url":"interfaces/IAuthService.html","title":"interface - IAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the auth service\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        generateToken\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateToken\n                        \n                    \n                \n            \n            \n                \ngenerateToken(id: IUserDomainModel)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/services/auth.service.ts:18\n                \n            \n\n\n            \n                \n                    generate token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                IUserDomainModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        user domain model and token\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { IUserDomainModel } from '..';\n\n/**\n * interface for the auth service\n *\n * @export\n * @interface IAuthService\n * @typedef {IAuthService}\n */\nexport interface IAuthService {\n  /**\n   * generate token\n   *\n   * @param {IUserDomainModel} id user id\n   * @returns {Observable} user domain model and token\n   */\n  generateToken(\n    id: IUserDomainModel,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseRepository.html":{"url":"interfaces/IBaseRepository.html","title":"interface - IBaseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBaseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/persistence/database/mongo/repositories/Interface/base.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for base repository\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findById\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: Entity)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/Interface/base.interface.ts:18\n                \n            \n\n\n            \n                \n                    create entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Entity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nentity to create\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \nentity created\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(document: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/Interface/base.interface.ts:26\n                \n            \n\n\n            \n                \n                    find entity by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid of entity\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \nentity found\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\n/**\n * interface for base repository\n *\n * @export\n * @interface IBaseRepository\n * @typedef {IBaseRepository}\n * @template Entity\n */\nexport interface IBaseRepository {\n  /**\n   * create entity\n   *\n   * @param {Entity} entity - entity to create\n   * @returns {Observable} - entity created\n   */\n  create(entity: Entity): Observable;\n\n  /**\n   * find entity by id\n   *\n   * @param {string} document - id of entity\n   * @returns {Observable} - entity found\n   */\n  findById(document: string): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateMealPlannerDto.html":{"url":"interfaces/ICreateMealPlannerDto.html","title":"interface - ICreateMealPlannerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateMealPlannerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/dto/create-meal-planner.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for create meal planner dto\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    amount of meal planner\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    name of meal planner\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    notes of meal planner\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICreateMealPlannerDto {\n  /**\n   * name of meal planner\n   *\n   * @type {string} name\n   */\n  name: string;\n  /**\n   * notes of meal planner\n   *\n   * @type {string} notes\n   */\n  notes: string;\n  /**\n   * amount of meal planner\n   *\n   * @type {{ ingredientId: string; amount: number }[]} amount - array of ingredients\n   */\n  amount: { ingredientId: string; amount: number }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateRecipeDto.html":{"url":"interfaces/ICreateRecipeDto.html","title":"interface - ICreateRecipeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateRecipeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/dto/create-recipe.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for create recipe dto\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            ingredients\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nutritionInfo\n                                        \n                                \n                                \n                                        \n                                            photoUrl\n                                        \n                                \n                                \n                                        \n                                            servings\n                                        \n                                \n                                \n                                        \n                                            steps\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    description of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredients:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ingredients of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    name of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    notes of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nutritionInfo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nutritionInfo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    nutrition info of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        photoUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    photo url of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        servings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        servings:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    servings of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        steps:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    steps of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    user id of recipe\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICreateRecipeDto {\n  /**\n   * name of recipe\n   *\n   * @type {string} name\n   */\n  name: string;\n  /**\n   * description of recipe\n   *\n   * @type {string} description\n   */\n  description: string;\n  /**\n   * ingredients of recipe\n   *\n   * @type {{ amount: number; ingredientId: string }[]} ingredients - array of ingredients\n   */\n  ingredients: { amount: number; ingredientId: string }[];\n  /**\n   * photo url of recipe\n   *\n   * @type {string} photoUrl\n   */\n  photoUrl: string;\n  /**\n   * steps of recipe\n   *\n   * @type {string[]} steps - array of steps\n   */\n  steps: string[];\n  /**\n   * notes of recipe\n   *\n   * @type {string} notes\n   */\n  notes: string;\n  /**\n   * servings of recipe\n   *\n   * @type {number} servings\n   */\n  servings: number;\n  /**\n   * nutrition info of recipe\n   *\n   * @type {?string} nutritionInfo\n   */\n  nutritionInfo?: string;\n  /**\n   * user id of recipe\n   *\n   * @type {string} userId\n   */\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateUserDto.html":{"url":"interfaces/ICreateUserDto.html","title":"interface - ICreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/dto/create-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for create user dto\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            googleId\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            photoUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    email of user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        googleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        googleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    google id of user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    name of user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        photoUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    photo url of user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICreateUserDto {\n  /**\n   * name of user\n   *\n   * @type {string} name\n   */\n  name: string;\n  /**\n   * email of user\n   *\n   * @type {string} email\n   */\n  email: string;\n  /**\n   * photo url of user\n   *\n   * @type {string} photoUrl\n   */\n  photoUrl: string;\n  /**\n   * google id of user\n   *\n   * @type {string} googleId\n   */\n  googleId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFindAll.html":{"url":"interfaces/IFindAll.html","title":"interface - IFindAll","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFindAll\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/persistence/database/mongo/repositories/Interface/find-all.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for find all repository\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        findAll\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/Interface/find-all.interface.ts:17\n                \n            \n\n\n            \n                \n                    find all entities\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \nentities found\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\n/**\n * interface for find all repository\n *\n * @export\n * @interface IFindAll\n * @typedef {IFindAll}\n * @template Entity\n */\nexport interface IFindAll {\n  /**\n   * find all entities\n   *\n   * @returns {Observable} - entities found\n   */\n  findAll(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIngredientDomainModel.html":{"url":"interfaces/IIngredientDomainModel.html","title":"interface - IIngredientDomainModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIngredientDomainModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/models/interfaces/ingredient.domain-model.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for IngredientDomainModel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            photoUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    id of ingredient\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    description of ingredient\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    name of ingredient\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        photoUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    unit of ingredient\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IIngredientDomainModel {\n  /**\n   * id of ingredient\n   *\n   * @type {?string} _id - id of ingredient\n   */\n  _id?: string;\n  /**\n   * name of ingredient\n   *\n   * @type {string} name\n   */\n  name: string;\n  /**\n   * description of ingredient\n   *\n   * @type {string} description\n   */\n  description: string;\n  /**\n   * unit of ingredient\n   *\n   * @type {string} unit\n   */\n  photoUrl: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIngredientService.html":{"url":"interfaces/IIngredientService.html","title":"interface - IIngredientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIngredientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/services/ingredient.service.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the ingredient service\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findByName\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: Entity)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/services/ingredient.service.ts:21\n                \n            \n\n\n            \n                \n                    create ingredient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Entity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ingredient domain model\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        ingredient domain model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/domain/services/ingredient.service.ts:45\n                \n            \n\n\n            \n                \n                    delete ingredient by id\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        ingredient domain model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/services/ingredient.service.ts:29\n                \n            \n\n\n            \n                \n                    find ingredient by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ingredient id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        ingredient domain model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByName\n                        \n                    \n                \n            \n            \n                \nfindByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/services/ingredient.service.ts:53\n                \n            \n\n\n            \n                \n                    delete ingredient by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ingredient name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        ingredient domain model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, ingredient: Entity)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/services/ingredient.service.ts:38\n                \n            \n\n\n            \n                \n                    update ingredient by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ingredient id\n\n                                    \n                                \n                                \n                                    ingredient\n                                    \n                                            Entity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ingredient domain model\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        ingredient domain model\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IngredientDomainModel } from '@domain/models/ingredient.domain-model';\nimport { Observable } from 'rxjs';\n\n/**\n * interface for the ingredient service\n *\n * @export\n * @interface IIngredientService\n * @typedef {IIngredientService}\n * @template Entity\n */\nexport interface IIngredientService {\n  /**\n   * create ingredient\n   *\n   * @param {Entity} entity ingredient domain model\n   * @returns {Observable} ingredient domain model\n   */\n  create(entity: Entity): Observable;\n\n  /**\n   * find ingredient by id\n   *\n   * @param {string} id ingredient id\n   * @returns {Observable} ingredient domain model\n   */\n  findById(id: string): Observable;\n\n  /**\n   * update ingredient by id\n   *\n   * @param {string} id ingredient id\n   * @param {Entity} ingredient ingredient domain model\n   * @returns {Observable} ingredient domain model\n   */\n  update(id: string, ingredient: Entity): Observable;\n\n  /**\n   * delete ingredient by id\n   *\n   * @returns {Observable} ingredient domain model\n   */\n  findAll(): Observable;\n\n  /**\n   * delete ingredient by id\n   *\n   * @param {string} name ingredient name\n   * @returns {Observable} ingredient domain model\n   */\n  findByName(name: string): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMealPlannerDomainModel.html":{"url":"interfaces/IMealPlannerDomainModel.html","title":"interface - IMealPlannerDomainModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMealPlannerDomainModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/models/interfaces/meal-planner.domain-model.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for meal planner domain model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    id of meal planner\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    amount of meal planner\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    name of meal planner\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    notes of meal planner\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IIngredientDomainModel } from './ingredient.domain-model.interface';\n\n/**\n * interface for meal planner domain model\n *\n * @export\n * @interface IMealPlannerDomainModel\n * @typedef {IMealPlannerDomainModel}\n */\nexport interface IMealPlannerDomainModel {\n  /**\n   * id of meal planner\n   *\n   * @type {?string} _id - id of meal planner\n   */\n  _id?: string;\n  /**\n   * name of meal planner\n   *\n   * @type {string}\n   */\n  name: string;\n  /**\n   * amount of meal planner\n   *\n   * @type {{ ingredientId: IIngredientDomainModel['_id']; amount: number }[]} amount - array of ingredients\n   */\n  amount: { ingredientId: IIngredientDomainModel['_id']; amount: number }[];\n  /**\n   * notes of meal planner\n   *\n   * @type {string} notes - notes of meal planner\n   */\n  notes: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMealPlannerService.html":{"url":"interfaces/IMealPlannerService.html","title":"interface - IMealPlannerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMealPlannerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/services/meal-planner.service.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the meal planner service\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: Entity)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/services/meal-planner.service.ts:21\n                \n            \n\n\n            \n                \n                    create meal planner\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Entity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        meal planner domain model\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        meal planner domain model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/services/meal-planner.service.ts:46\n                \n            \n\n\n            \n                \n                    delete meal planner by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        meal planner id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        meal planner domain model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/services/meal-planner.service.ts:29\n                \n            \n\n\n            \n                \n                    find meal planner by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        meal planner id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        meal planner domain model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, mealPlanner: Entity)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/services/meal-planner.service.ts:38\n                \n            \n\n\n            \n                \n                    update meal planner by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        meal planner id\n\n                                    \n                                \n                                \n                                    mealPlanner\n                                    \n                                            Entity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        meal planner domain model\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        meal planner domain model\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MealPlannerDomainModel } from '@domain/models/meal-planner.domain-model';\nimport { Observable } from 'rxjs';\n\n/**\n * interface for the meal planner service\n *\n * @export\n * @interface IMealPlannerService\n * @typedef {IMealPlannerService}\n * @template Entity\n */\nexport interface IMealPlannerService {\n  /**\n   * create meal planner\n   *\n   * @param {Entity} entity meal planner domain model\n   * @returns {Observable} meal planner domain model\n   */\n  create(entity: Entity): Observable;\n\n  /**\n   * find meal planner by id\n   *\n   * @param {string} id meal planner id\n   * @returns {Observable} meal planner domain model\n   */\n  findById(id: string): Observable;\n\n  /**\n   * update meal planner by id\n   *\n   * @param {string} id meal planner id\n   * @param {Entity} mealPlanner meal planner domain model\n   * @returns {Observable} meal planner domain model\n   */\n  update(id: string, mealPlanner: Entity): Observable;\n\n  /**\n   * delete meal planner by id\n   *\n   * @param {string} id meal planner id\n   * @returns {Observable} meal planner domain model\n   */\n  delete(id: string): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRecipeDomainModel.html":{"url":"interfaces/IRecipeDomainModel.html","title":"interface - IRecipeDomainModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRecipeDomainModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/models/interfaces/recipes.domain-model.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for recipe domain model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            ingredients\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            notes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nutritionInfo\n                                        \n                                \n                                \n                                        \n                                            photoUrl\n                                        \n                                \n                                \n                                        \n                                            servings\n                                        \n                                \n                                \n                                        \n                                            steps\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    id of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    description of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredients:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ingredients of recipe\n amount: number;\n ingredientId: IIngredientDomainModel['_id'];\n}[]} ingredients - array of ingredients\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    name of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    notes of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nutritionInfo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nutritionInfo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    nutrition info of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        photoUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    photo url of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        servings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        servings:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    servings of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        steps:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    steps of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    user id of recipe\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IIngredientDomainModel } from './ingredient.domain-model.interface';\nimport { IUserDomainModel } from './user.domain-model.interface';\n\n/**\n * interface for recipe domain model\n *\n * @export\n * @interface IRecipeDomainModel\n * @typedef {IRecipeDomainModel}\n */\nexport interface IRecipeDomainModel {\n  /**\n   * id of recipe\n   *\n   * @type {?string} _id - id of recipe\n   */\n  _id?: string;\n  /**\n   * name of recipe\n   *\n   * @type {string} name\n   */\n  name: string;\n  /**\n   * description of recipe\n   *\n   * @type {string} description\n   */\n  description: string;\n  /**\n   * ingredients of recipe\n   *\n   * @type {{\n   *  amount: number;\n   *  ingredientId: IIngredientDomainModel['_id'];\n   *}[]} ingredients - array of ingredients\n   */\n  ingredients: {\n    amount: number;\n    ingredientId: IIngredientDomainModel['_id'];\n  }[];\n  /**\n   * photo url of recipe\n   *\n   * @type {string} photoUrl\n   */\n  photoUrl: string;\n  /**\n   * steps of recipe\n   *\n   * @type {string[]} steps - array of steps\n   */\n  steps: string[];\n  /**\n   * notes of recipe\n   *\n   * @type {?string} notes\n   */\n  notes?: string;\n  /**\n   * servings of recipe\n   *\n   * @type {number} servings\n   */\n  servings: number;\n  /**\n   * nutrition info of recipe\n   *\n   * @type {?string} nutritionInfo\n   */\n  nutritionInfo?: string;\n  /**\n   * user id of recipe\n   *\n   * @type {IUserDomainModel['_id']} userId\n   */\n  userId: IUserDomainModel['_id'];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRecipeService.html":{"url":"interfaces/IRecipeService.html","title":"interface - IRecipeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRecipeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/services/recipes.service.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the recipe service\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        findAllByUserId\n                                    \n                                \n                                \n                                    \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: Entity)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/services/recipes.service.ts:21\n                \n            \n\n\n            \n                \n                    create recipe\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Entity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe domain model\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        recipe domain model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/services/recipes.service.ts:46\n                \n            \n\n\n            \n                \n                    delete recipe by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        recipe domain model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \nfindAllByUserId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/services/recipes.service.ts:54\n                \n            \n\n\n            \n                \n                    find all recipes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        recipe domain model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/services/recipes.service.ts:29\n                \n            \n\n\n            \n                \n                    find recipe by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        recipe domain model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, recipe: Entity)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/services/recipes.service.ts:38\n                \n            \n\n\n            \n                \n                    update recipe by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe id\n\n                                    \n                                \n                                \n                                    recipe\n                                    \n                                            Entity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe domain model\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        recipe domain model\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { RecipeDomainModel } from '@domain/models/recipes.domain-model';\nimport { Observable } from 'rxjs';\n\n/**\n * interface for the recipe service\n *\n * @export\n * @interface IRecipeService\n * @typedef {IRecipeService}\n * @template Entity\n */\nexport interface IRecipeService {\n  /**\n   * create recipe\n   *\n   * @param {Entity} entity recipe domain model\n   * @returns {Observable} recipe domain model\n   */\n  create(entity: Entity): Observable;\n\n  /**\n   * find recipe by id\n   *\n   * @param {string} id recipe id\n   * @returns {Observable} recipe domain model\n   */\n  findById(id: string): Observable;\n\n  /**\n   * update recipe by id\n   *\n   * @param {string} id recipe id\n   * @param {Entity} recipe recipe domain model\n   * @returns {Observable} recipe domain model\n   */\n  update(id: string, recipe: Entity): Observable;\n\n  /**\n   * delete recipe by id\n   *\n   * @param {string} id recipe id\n   * @returns {Observable} recipe domain model\n   */\n  delete(id: string): Observable;\n\n  /**\n   * find all recipes\n   *\n   * @param {string} id user id\n   * @returns {Observable} recipe domain model\n   */\n  findAllByUserId(id: string): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUpdateIngredientDto.html":{"url":"interfaces/IUpdateIngredientDto.html","title":"interface - IUpdateIngredientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUpdateIngredientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/dto/update-ingredient.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for update ingredient dto\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            photoUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    description of ingredient\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    name of ingredient\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        photoUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    photo url of ingredient\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    unit of ingredient\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IUpdateIngredientDto {\n  /**\n   * name of ingredient\n   *\n   * @type {?string} name\n   */\n  name?: string;\n  /**\n   * description of ingredient\n   *\n   * @type {?string} description\n   */\n  description?: string;\n  /**\n   * unit of ingredient\n   *\n   * @type {?number} unit\n   */\n  unit?: number;\n  /**\n   * photo url of ingredient\n   *\n   * @type {?string} photoUrl\n   */\n  photoUrl?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUpdateMealPlannerDto.html":{"url":"interfaces/IUpdateMealPlannerDto.html","title":"interface - IUpdateMealPlannerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUpdateMealPlannerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/dto/update-meal-planner.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Update Meal Planner DTO\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            amount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            notes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                     Meal Planner notes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                     Meal Planner name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                     Meal Planner notes\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IUpdateMealPlannerDto {\n  /**\n   *  Meal Planner name\n   *\n   * @type {?string}\n   */\n  name?: string;\n  /**\n   *  Meal Planner notes\n   *\n   * @type {?{ amount: number; ingredientId: string }[]} amount - array of ingredients\n   */\n  amount?: { amount: number; ingredientId: string }[];\n  /**\n   *  Meal Planner notes\n   *\n   * @type {?string} notes\n   */\n  notes?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUpdateRecipesDto.html":{"url":"interfaces/IUpdateRecipesDto.html","title":"interface - IUpdateRecipesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUpdateRecipesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/dto/update-recipes.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for update recipes dto\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ingredients\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            notes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nutritionInfo\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            photoUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            servings\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            steps\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    description of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredients:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ingredients of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    recipe id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    notes of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nutritionInfo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nutritionInfo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    nutrition info of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        photoUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    photo url of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        servings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        servings:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    servings of recipe\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        steps:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    steps of recipe\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IUpdateRecipesDto {\n  /**\n   * recipe id\n   *\n   * @type {?string} id\n   */\n  name?: string;\n  /**\n   * description of recipe\n   *\n   * @type {?string} description\n   */\n  description?: string;\n  /**\n   * ingredients of recipe\n   *\n   * @type {?{ amount: number; ingredientId: string }[]} ingredients - array of ingredients\n   */\n  ingredients?: { amount: number; ingredientId: string }[];\n  /**\n   * photo url of recipe\n   *\n   * @type {?string} photoUrl\n   */\n  photoUrl?: string;\n  /**\n   * steps of recipe\n   *\n   * @type {?string[]} steps - array of steps\n   */\n  steps?: string[];\n  /**\n   * notes of recipe\n   *\n   * @type {?string} notes\n   */\n  notes?: string;\n  /**\n   * servings of recipe\n   *\n   * @type {?number} servings\n   */\n  servings?: number;\n  /**\n   * nutrition info of recipe\n   *\n   * @type {?string}\n   */\n  nutritionInfo?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUpdateRepository.html":{"url":"interfaces/IUpdateRepository.html","title":"interface - IUpdateRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUpdateRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/persistence/database/mongo/repositories/Interface/update.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for update repository\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(_id: string, entity: Entity)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/Interface/update.interface.ts:19\n                \n            \n\n\n            \n                \n                    update entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid of entity\n\n\n                                    \n                                \n                                \n                                    entity\n                                    \n                                            Entity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nentity to update\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \nentity updated\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\n/**\n * interface for update repository\n *\n * @export\n * @interface IUpdateRepository\n * @typedef {IUpdateRepository}\n * @template Entity\n */\nexport interface IUpdateRepository {\n  /**\n   * update entity\n   *\n   * @param {string} _id - id of entity\n   * @param {Entity} entity - entity to update\n   * @returns {Observable} - entity updated\n   */\n  update(_id: string, entity: Entity): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUseCase.html":{"url":"interfaces/IUseCase.html","title":"interface - IUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/interface/use-case.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for use cases\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        execute\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/application/interface/use-case.interface.ts:17\n                \n            \n\n\n            \n                \n                    execute use case\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\n/**\n * interface for use cases\n *\n * @export\n * @interface IUseCase\n * @typedef {IUseCase}\n */\nexport interface IUseCase {\n  /**\n   * execute use case\n   *\n   * @param {...any[]} args\n   * @returns {Observable}\n   */\n  execute(...args: any[]): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserDomainModel.html":{"url":"interfaces/IUserDomainModel.html","title":"interface - IUserDomainModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserDomainModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/models/interfaces/user.domain-model.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for user domain model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            googleId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mealPlannerId\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            photoUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    id of user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    email of user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        googleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        googleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    google id of user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mealPlannerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mealPlannerId:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    id of meal planner\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    name of user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        photoUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    photo url of user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IMealPlannerDomainModel } from './meal-planner.domain-model.interface';\n\n/**\n * interface for user domain model\n *\n * @export\n * @interface IUserDomainModel\n * @typedef {IUserDomainModel}\n */\nexport interface IUserDomainModel {\n  /**\n   * id of user\n   *\n   * @type {?string} _id - id of user\n   */\n  _id?: string;\n  /**\n   * id of meal planner\n   *\n   * @type {?IMealPlannerDomainModel['_id']} mealPlannerId - id of meal planner\n   */\n  mealPlannerId?: IMealPlannerDomainModel['_id'];\n  /**\n   * name of user\n   *\n   * @type {string} name\n   */\n  name: string;\n  /**\n   * email of user\n   *\n   * @type {string} email\n   */\n  email: string;\n  /**\n   * photo url of user\n   *\n   * @type {string} photoUrl\n   */\n  photoUrl: string;\n  /**\n   * google id of user\n   *\n   * @type {string} googleId\n   */\n  googleId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserService.html":{"url":"interfaces/IUserService.html","title":"interface - IUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the user service\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addMealPlanner\n                                    \n                                \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        findById\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMealPlanner\n                        \n                    \n                \n            \n            \n                \naddMealPlanner(userId: string, mealPlanner: IMealPlannerDomainModel)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/services/user.service.ts:47\n                \n            \n\n\n            \n                \n                    add meal planner to user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user id\n\n                                    \n                                \n                                \n                                    mealPlanner\n                                    \n                                                IMealPlannerDomainModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        meal planner domain model\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        user domain model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: Entity)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/services/user.service.ts:22\n                \n            \n\n\n            \n                \n                    create user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Entity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user domain model\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        user domain model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/services/user.service.ts:38\n                \n            \n\n\n            \n                \n                    delete user by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        user domain model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/services/user.service.ts:30\n                \n            \n\n\n            \n                \n                    find user by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        user domain model\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserDomainModel } from '@domain/models/user.domain-model';\nimport { Observable } from 'rxjs';\nimport { IMealPlannerDomainModel } from '..';\n\n/**\n * interface for the user service\n *\n * @export\n * @interface IUserService\n * @typedef {IUserService}\n * @template Entity\n */\nexport interface IUserService {\n  /**\n   * create user\n   *\n   * @param {Entity} entity user domain model\n   * @returns {Observable} user domain model\n   */\n  create(entity: Entity): Observable;\n\n  /**\n   * find user by id\n   *\n   * @param {string} id user id\n   * @returns {Observable} user domain model\n   */\n  findById(id: string): Observable;\n\n  /**\n   * delete user by id\n   *\n   * @param {string} id user id\n   * @returns {Observable} user domain model\n   */\n  delete(id: string): Observable;\n\n  /**\n   * add meal planner to user\n   *\n   * @param {string} userId user id\n   * @param {IMealPlannerDomainModel} mealPlanner meal planner domain model\n   * @returns {Observable} user domain model\n   */\n  addMealPlanner(\n    userId: string,\n    mealPlanner: IMealPlannerDomainModel,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfrastructureModule.html":{"url":"modules/InfrastructureModule.html","title":"module - InfrastructureModule","body":"\n                   \n\n\n\n\n    Modules\n    InfrastructureModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InfrastructureModule\n\n\n\ncluster_InfrastructureModule_exports\n\n\n\ncluster_InfrastructureModule_imports\n\n\n\ncluster_InfrastructureModule_providers\n\n\n\n\nMongoModule\n\nMongoModule\n\n\n\nInfrastructureModule\n\nInfrastructureModule\n\nInfrastructureModule -->\n\nMongoModule->InfrastructureModule\n\n\n\n\n\nIngredientService \n\nIngredientService \n\nIngredientService  -->\n\nInfrastructureModule->IngredientService \n\n\n\n\n\nMealPlannerService \n\nMealPlannerService \n\nMealPlannerService  -->\n\nInfrastructureModule->MealPlannerService \n\n\n\n\n\nRecipeService \n\nRecipeService \n\nRecipeService  -->\n\nInfrastructureModule->RecipeService \n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nInfrastructureModule->UserService \n\n\n\n\n\nIngredientService\n\nIngredientService\n\nInfrastructureModule -->\n\nIngredientService->InfrastructureModule\n\n\n\n\n\nMealPlannerService\n\nMealPlannerService\n\nInfrastructureModule -->\n\nMealPlannerService->InfrastructureModule\n\n\n\n\n\nRecipeService\n\nRecipeService\n\nInfrastructureModule -->\n\nRecipeService->InfrastructureModule\n\n\n\n\n\nUserService\n\nUserService\n\nInfrastructureModule -->\n\nUserService->InfrastructureModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infrastructure/infrastructure.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            module for the infrastructure\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IngredientService\n                        \n                        \n                            MealPlannerService\n                        \n                        \n                            RecipeService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MongoModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IngredientService\n                        \n                        \n                            MealPlannerService\n                        \n                        \n                            RecipeService\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongoModule } from './persistence/database/mongo/mongo.module';\nimport { IngredientService } from './services/ingredient.service';\nimport { MealPlannerService } from './services/meal-planner.service';\nimport { RecipeService } from './services/recipe..service';\nimport { UserService } from './services/user.service';\n\n/**\n * module for the infrastructure\n *\n * @export\n * @class InfrastructureModule\n * @typedef {InfrastructureModule}\n */\n@Module({\n  imports: [MongoModule],\n  controllers: [],\n  providers: [\n    MealPlannerService,\n    UserService,\n    RecipeService,\n    IngredientService,\n  ],\n  exports: [MealPlannerService, UserService, RecipeService, IngredientService],\n})\nexport class InfrastructureModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IngredientDomainModel.html":{"url":"classes/IngredientDomainModel.html","title":"class - IngredientDomainModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IngredientDomainModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/models/ingredient.domain-model.ts\n        \n\n\n            \n                Description\n            \n            \n                class for IngredientDomainModel\n\n            \n\n\n            \n                Implements\n            \n            \n                            IIngredientDomainModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                photoUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/ingredient.domain-model.ts:17\n                        \n                    \n\n            \n                \n                    id of ingredient\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/ingredient.domain-model.ts:29\n                        \n                    \n\n            \n                \n                    description of ingredient\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/ingredient.domain-model.ts:23\n                        \n                    \n\n            \n                \n                    name of ingredient\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/ingredient.domain-model.ts:35\n                        \n                    \n\n            \n                \n                    unit of ingredient\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IIngredientDomainModel } from './interfaces/ingredient.domain-model.interface';\n\n/**\n * class for IngredientDomainModel\n *\n * @export\n * @class IngredientDomainModel\n * @typedef {IngredientDomainModel}\n * @implements {IIngredientDomainModel}\n */\nexport class IngredientDomainModel implements IIngredientDomainModel {\n  /**\n   * id of ingredient\n   *\n   * @type {?string} _id - id of ingredient\n   */\n  _id?: string;\n  /**\n   * name of ingredient\n   *\n   * @type {string} name\n   */\n  name: string;\n  /**\n   * description of ingredient\n   *\n   * @type {string} description\n   */\n  description: string;\n  /**\n   * unit of ingredient\n   *\n   * @type {string} unit\n   */\n  photoUrl: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IngredientDto.html":{"url":"classes/IngredientDto.html","title":"class - IngredientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IngredientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/dto/update-recipe.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                class for ingredient dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                ingredientId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/update-recipe.dto.ts:99\n                        \n                    \n\n            \n                \n                    amount of ingredient\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/update-recipe.dto.ts:106\n                        \n                    \n\n            \n                \n                    id of ingredient\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IUpdateRecipesDto } from '@domain/dto';\nimport {\n  IsArray,\n  IsNumber,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\n\n/**\n * interface IUpdateRecipesDto\n *\n * @export\n * @class UpdateRecipeDto\n * @typedef {UpdateRecipeDto}\n * @implements {IUpdateRecipesDto}\n */\nexport class UpdateRecipeDto implements IUpdateRecipesDto {\n  /**\n   * name of the recipe\n   *\n   * @type {?string} name\n   */\n  @IsString()\n  @IsOptional()\n  name?: string;\n  /**\n   * list of ingredients\n   *\n   * @type {?IngredientDto[]} ingredients\n   */\n  @IsArray()\n  @ValidateNested({ each: true })\n  @IsOptional()\n  ingredients?: IngredientDto[];\n  /**\n   * description of the recipe\n   *\n   * @type {?string} description\n   */\n  @IsString()\n  @IsOptional()\n  description?: string;\n  /**\n   * url of the photo\n   *\n   * @type {?string} photoUrl\n   */\n  @IsString()\n  @IsOptional()\n  photoUrl?: string;\n  /**\n   * list of steps\n   *\n   * @type {?string[]} steps\n   */\n  @IsString({ each: true })\n  @IsOptional()\n  steps?: string[];\n  /**\n   * notes\n   *\n   * @type {?string} notes\n   */\n  @IsString()\n  @IsOptional()\n  notes?: string;\n  /**\n   * number of servings\n   *\n   * @type {?number} servings\n   */\n  @IsNumber()\n  @IsOptional()\n  servings?: number;\n  /**\n   * nutrition info\n   *\n   * @type {?string} nutritionInfo\n   */\n  @IsString()\n  @IsOptional()\n  nutritionInfo?: string;\n}\n\n/**\n * class for ingredient dto\n *\n * @class IngredientDto\n * @typedef {IngredientDto}\n */\nclass IngredientDto {\n  /**\n   * amount of ingredient\n   *\n   * @type {number} amount\n   */\n  @IsNumber()\n  amount: number;\n  /**\n   * id of ingredient\n   *\n   * @type {string} ingredientId\n   */\n  @IsString()\n  ingredientId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IngredientModel.html":{"url":"classes/IngredientModel.html","title":"class - IngredientModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IngredientModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/models/ingredient.model.ts\n        \n\n\n            \n                Description\n            \n            \n                class for ingredient model\n\n            \n\n            \n                Extends\n            \n            \n                        IngredientDomainModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                photoUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         IngredientDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         IngredientDomainModel:17\n\n                        \n                    \n\n            \n                \n                    id of ingredient\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         IngredientDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         IngredientDomainModel:29\n\n                        \n                    \n\n            \n                \n                    description of ingredient\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         IngredientDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         IngredientDomainModel:23\n\n                        \n                    \n\n            \n                \n                    name of ingredient\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         IngredientDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         IngredientDomainModel:35\n\n                        \n                    \n\n            \n                \n                    unit of ingredient\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IngredientDomainModel } from '@domain/models';\n\n/**\n * class for ingredient model\n *\n * @export\n * @class IngredientModel\n * @typedef {IngredientModel}\n * @extends {IngredientDomainModel}\n */\nexport class IngredientModel extends IngredientDomainModel {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IngredientMongo.html":{"url":"classes/IngredientMongo.html","title":"class - IngredientMongo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IngredientMongo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/persistence/database/mongo/schemas/ingredient.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                class IngredientMongo\n\n            \n\n            \n                Extends\n            \n            \n                        IngredientModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                photoUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, auto: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IngredientDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         IngredientDomainModel:21\n\n                        \n                    \n\n            \n                \n                    id of the ingredient\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IngredientDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         IngredientDomainModel:37\n\n                        \n                    \n\n            \n                \n                    description of the ingredient\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IngredientDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         IngredientDomainModel:29\n\n                        \n                    \n\n            \n                \n                    name of the ingredient\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IngredientDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         IngredientDomainModel:45\n\n                        \n                    \n\n            \n                \n                    photo url of the ingredient\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IngredientModel } from '@infrastructure/models';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, SchemaTypes } from 'mongoose';\n\n/**\n * class IngredientMongo\n *\n * @export\n * @class IngredientMongo\n * @typedef {IngredientMongo}\n * @extends {IngredientModel}\n */\n@Schema({ collection: 'ingredients', versionKey: false })\nexport class IngredientMongo extends IngredientModel {\n  /**\n   * id of the ingredient\n   *\n   * @type {string} _id\n   */\n  @Prop({ type: SchemaTypes.ObjectId, auto: true })\n  _id: string;\n\n  /**\n   * name of the ingredient\n   *\n   * @type {string} name\n   */\n  @Prop({ type: String, required: true, unique: true })\n  name: string;\n\n  /**\n   * description of the ingredient\n   *\n   * @type {string} description\n   */\n  @Prop({ type: String, required: true })\n  description: string;\n\n  /**\n   * photo url of the ingredient\n   *\n   * @type {string} photoUrl\n   */\n  @Prop({ type: String, required: true })\n  photoUrl: string;\n}\n\n/**\n *  Schema for Ingredient\n *\n * @type {*}\n */\nexport const IngredientsSchema = SchemaFactory.createForClass(IngredientMongo);\n/**\n * Schema for Ingredient\n *\n * @export\n * @typedef {IngredientDocument}\n */\nexport type IngredientDocument = HydratedDocument;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IngredientMongoService.html":{"url":"injectables/IngredientMongoService.html","title":"injectable - IngredientMongoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IngredientMongoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/persistence/database/mongo/services/ingredient.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Ingredient Mongo Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                findByName\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ingredientRepository: IngredientRepository)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/persistence/database/mongo/services/ingredient.service.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of IngredientMongoService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ingredientRepository\n                                                  \n                                                        \n                                                                        IngredientRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ningredient repository\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: IngredientMongo)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/services/ingredient.service.ts:29\n                \n            \n\n\n            \n                \n                    create ingredient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                IngredientMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ningredient\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \ningredient\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/services/ingredient.service.ts:56\n                \n            \n\n\n            \n                \n                    delete ingredient\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \ningredient deleted\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/services/ingredient.service.ts:38\n                \n            \n\n\n            \n                \n                    find by id ingredient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ningredient id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \ningredient\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByName\n                        \n                    \n                \n            \n            \n                \nfindByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/services/ingredient.service.ts:65\n                \n            \n\n\n            \n                \n                    delete ingredient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ningredient name\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \ningredient deleted\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, ingredient: IngredientMongo)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/services/ingredient.service.ts:48\n                \n            \n\n\n            \n                \n                    update ingredient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ningredient id\n\n\n                                    \n                                \n                                \n                                    ingredient\n                                    \n                                                IngredientMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ningredient\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \ningredient updated\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IIngredientService } from '@domain/services/ingredient.service';\nimport { IngredientRepository } from '@infrastructure/persistence/database/mongo/repositories/ingredient.repository';\nimport { Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { IngredientMongo } from '../schemas/ingredient.schema';\n/**\n * Ingredient Mongo Service\n *\n * @export\n * @class IngredientMongoService\n * @typedef {IngredientMongoService}\n * @implements {IIngredientService}\n */\n@Injectable()\nexport class IngredientMongoService implements IIngredientService {\n  /**\n   * Creates an instance of IngredientMongoService.\n   *\n   * @constructor\n   * @param {IngredientRepository} ingredientRepository - ingredient repository\n   */\n  constructor(private readonly ingredientRepository: IngredientRepository) {}\n  /**\n   * create ingredient\n   *\n   * @param {IngredientMongo} entity - ingredient\n   * @returns {Observable} - ingredient\n   */\n  create(entity: IngredientMongo): Observable {\n    return this.ingredientRepository.create(entity);\n  }\n  /**\n   * find by id ingredient\n   *\n   * @param {string} id - ingredient id\n   * @returns {Observable} - ingredient\n   */\n  findById(id: string): Observable {\n    return this.ingredientRepository.findById(id);\n  }\n  /**\n   * update ingredient\n   *\n   * @param {string} id - ingredient id\n   * @param {IngredientMongo} ingredient - ingredient\n   * @returns {Observable} - ingredient updated\n   */\n  update(id: string, ingredient: IngredientMongo): Observable {\n    return this.ingredientRepository.update(id, ingredient);\n  }\n  /**\n   * delete ingredient\n   *\n   * @returns {Observable} - ingredient deleted\n   */\n  findAll(): Observable {\n    return this.ingredientRepository.findAll();\n  }\n  /**\n   * delete ingredient\n   *\n   * @param {string} name - ingredient name\n   * @returns {Observable} - ingredient deleted\n   */\n  findByName(name: string): Observable {\n    return this.ingredientRepository.findByName(name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IngredientRepository.html":{"url":"injectables/IngredientRepository.html","title":"injectable - IngredientRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IngredientRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/persistence/database/mongo/repositories/ingredient.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                class for ingredient repository\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                findByName\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Model)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/persistence/database/mongo/repositories/ingredient.repository.ts:29\n                            \n                        \n\n                \n                    \n                            Creates an instance of IngredientRepository.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ningredient repository\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: IngredientMongo)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/ingredient.repository.ts:46\n                \n            \n\n\n            \n                \n                    create ingredient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                IngredientMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ningredient entity\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \ningredient observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/ingredient.repository.ts:73\n                \n            \n\n\n            \n                \n                    find all ingredients\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \ningredients observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(document: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/ingredient.repository.ts:55\n                \n            \n\n\n            \n                \n                    find ingredient by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ningredient id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \ningredient observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByName\n                        \n                    \n                \n            \n            \n                \nfindByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/ingredient.repository.ts:82\n                \n            \n\n\n            \n                \n                    find ingredient by name\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ningredient name\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \ningredient observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(_id: string, entity: IngredientMongo)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/ingredient.repository.ts:65\n                \n            \n\n\n            \n                \n                    update ingredient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ningredient id\n\n\n                                    \n                                \n                                \n                                    entity\n                                    \n                                                IngredientMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ningredient entity\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \ningredient observable\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Observable, from } from 'rxjs';\nimport {\n  IngredientDocument,\n  IngredientMongo,\n} from '../schemas/ingredient.schema';\nimport { IBaseRepository } from './Interface';\nimport { IFindAll } from './Interface/find-all.interface';\nimport { IUpdateRepository } from './Interface/update.interface';\n\n/**\n * class for ingredient repository\n *\n * @export\n * @class IngredientRepository\n * @typedef {IngredientRepository}\n * @implements {IBaseRepository}\n * @implements {IUpdateRepository}\n * @implements {IFindAll}\n */\n@Injectable()\nexport class IngredientRepository\n  implements\n    IBaseRepository,\n    IUpdateRepository,\n    IFindAll\n{\n  /**\n   * Creates an instance of IngredientRepository.\n   *\n   * @constructor\n   * @param {Model} repository - ingredient repository\n   */\n  constructor(\n    @InjectModel(IngredientMongo.name)\n    private readonly repository: Model,\n  ) {}\n  /**\n   * create ingredient\n   *\n   * @param {IngredientMongo} entity - ingredient entity\n   * @returns {Observable} - ingredient observable\n   */\n  create(entity: IngredientMongo): Observable {\n    return from(this.repository.create(entity));\n  }\n  /**\n   * find ingredient by id\n   *\n   * @param {string} document - ingredient id\n   * @returns {Observable} - ingredient observable\n   */\n  findById(document: string): Observable {\n    return from(this.repository.findById(document));\n  }\n  /**\n   * update ingredient\n   *\n   * @param {string} _id - ingredient id\n   * @param {IngredientMongo} entity - ingredient entity\n   * @returns {Observable} - ingredient observable\n   */\n  update(_id: string, entity: IngredientMongo): Observable {\n    return from(this.repository.findByIdAndUpdate(_id, entity, { new: true }));\n  }\n  /**\n   * find all ingredients\n   *\n   * @returns {Observable} - ingredients observable\n   */\n  findAll(): Observable {\n    return from(this.repository.find().exec());\n  }\n  /**\n   * find ingredient by name\n   *\n   * @param {string} name - ingredient name\n   * @returns {Observable} - ingredient observable\n   */\n  findByName(name: string): Observable {\n    return from(this.repository.findOne({ name }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IngredientService.html":{"url":"injectables/IngredientService.html","title":"injectable - IngredientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IngredientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/services/ingredient.service.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the ingredient service\n\n            \n\n            \n                Extends\n            \n            \n                        IngredientMongoService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                findByName\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: IngredientMongo)\n                \n            \n\n\n            \n                \n                    Inherited from         IngredientMongoService\n\n                \n            \n            \n                \n                        Defined in         IngredientMongoService:29\n\n                \n            \n\n\n            \n                \n                    create ingredient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                IngredientMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ningredient\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \ningredient\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Inherited from         IngredientMongoService\n\n                \n            \n            \n                \n                        Defined in         IngredientMongoService:56\n\n                \n            \n\n\n            \n                \n                    delete ingredient\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \ningredient deleted\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         IngredientMongoService\n\n                \n            \n            \n                \n                        Defined in         IngredientMongoService:38\n\n                \n            \n\n\n            \n                \n                    find by id ingredient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ningredient id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \ningredient\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByName\n                        \n                    \n                \n            \n            \n                \nfindByName(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         IngredientMongoService\n\n                \n            \n            \n                \n                        Defined in         IngredientMongoService:65\n\n                \n            \n\n\n            \n                \n                    delete ingredient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ningredient name\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \ningredient deleted\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, ingredient: IngredientMongo)\n                \n            \n\n\n            \n                \n                    Inherited from         IngredientMongoService\n\n                \n            \n            \n                \n                        Defined in         IngredientMongoService:48\n\n                \n            \n\n\n            \n                \n                    update ingredient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ningredient id\n\n\n                                    \n                                \n                                \n                                    ingredient\n                                    \n                                                IngredientMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ningredient\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \ningredient updated\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { IngredientMongoService } from '../persistence/database/mongo/services/ingredient.service';\n\n/**\n * interface for the ingredient service\n *\n * @export\n * @class IngredientService\n * @typedef {IngredientService}\n * @extends {IngredientMongoService}\n */\n@Injectable()\nexport class IngredientService extends IngredientMongoService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ingredients.html":{"url":"classes/Ingredients.html","title":"class - Ingredients","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ingredients\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/dto/create-recipe.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                class Ingredients\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                ingredientId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-recipe.dto.ts:121\n                        \n                    \n\n            \n                \n                    amount of ingredient\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/create-recipe.dto.ts:130\n                        \n                    \n\n            \n                \n                    ingredient id\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ICreateRecipeDto } from '@domain/dto';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsMongoId,\n  IsNotEmpty,\n  IsNumber,\n  IsPositive,\n  IsString,\n  IsUrl,\n} from 'class-validator';\n\n/**\n * interface ICreateRecipeDto\n *\n * @export\n * @class CreateRecipeDto\n * @typedef {CreateRecipeDto}\n * @implements {ICreateRecipeDto}\n */\nexport class CreateRecipeDto implements ICreateRecipeDto {\n  /**\n   * name of the recipe\n   *\n   * @type {string} name\n   */\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  /**\n   * description of the recipe\n   *\n   * @type {string} description\n   */\n  @IsString()\n  @IsNotEmpty()\n  description: string;\n\n  /**\n   * list of ingredients\n   *\n   * @type {Ingredients[]} ingredients\n   */\n  @IsArray()\n  @IsString({ each: true })\n  @ArrayMinSize(1)\n  ingredients: Ingredients[];\n\n  /**\n   * url of the photo\n   *\n   * @type {string} photoUrl\n   */\n  @IsUrl()\n  @IsNotEmpty()\n  photoUrl: string;\n\n  /**\n   * list of steps\n   *\n   * @type {string[]} steps\n   */\n  @IsNotEmpty({ each: true })\n  @IsString({ each: true })\n  @ArrayMinSize(1)\n  steps: string[];\n\n  /**\n   * notes\n   *\n   * @type {string} notes\n   */\n  @IsString()\n  @IsNotEmpty()\n  notes: string;\n\n  /**\n   * servings\n   *\n   * @type {number} servings\n   */\n  @IsNumber()\n  @IsPositive()\n  servings: number;\n\n  /**\n   * nutrition info\n   *\n   * @type {?string} nutritionInfo\n   */\n  @IsString()\n  @IsNotEmpty()\n  nutritionInfo?: string;\n\n  /**\n   * user id\n   *\n   * @type {string} userId\n   */\n  @IsNotEmpty()\n  @IsString()\n  @IsMongoId()\n  userId: string;\n}\n\n/**\n * class Ingredients\n *\n * @class Ingredients\n * @typedef {Ingredients}\n */\nclass Ingredients {\n  /**\n   * amount of ingredient\n   *\n   * @type {number} amount\n   */\n  @IsNotEmpty()\n  @IsNumber()\n  amount: number;\n  /**\n   * ingredient id\n   *\n   * @type {string} ingredientId\n   */\n  @IsNotEmpty()\n  @IsString()\n  @IsMongoId()\n  ingredientId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtErrorExceptionFilter.html":{"url":"classes/JwtErrorExceptionFilter.html","title":"class - JwtErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/utils/exception-filters/jwt.exception-filter.ts\n        \n\n\n            \n                Description\n            \n            \n                JwtErrorExceptionFilter class\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: TokenExpiredError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/utils/exception-filters/jwt.exception-filter.ts:28\n                \n            \n\n\n            \n                \n                    Description placeholder\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            TokenExpiredError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\nimport { TokenExpiredError } from 'jsonwebtoken';\n\n/**\n * JwtErrorExceptionFilter class\n *\n * @export\n * @class JwtErrorExceptionFilter\n * @typedef {JwtErrorExceptionFilter}\n * @implements {ExceptionFilter}\n */\n@Catch(TokenExpiredError)\nexport class JwtErrorExceptionFilter\n  implements ExceptionFilter\n{\n  /**\n   * Description placeholder\n   *\n   * @param {TokenExpiredError} exception\n   * @param {ArgumentsHost} host\n   */\n  catch(exception: TokenExpiredError, host: ArgumentsHost) {\n    const context = host.switchToHttp();\n    const response = context.getResponse();\n    const message = exception.message;\n    const statusCode = HttpStatus.CONFLICT;\n    const details = exception;\n\n    response.status(statusCode).json({ statusCode, message, details });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/KitchenRecipesController.html":{"url":"controllers/KitchenRecipesController.html","title":"controller - KitchenRecipesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  KitchenRecipesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/controllers/kitchen-recipes.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                kitchen recipes controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createIngredient\n                            \n                            \n                                createMealPlanner\n                            \n                            \n                                createRecipe\n                            \n                            \n                                createUser\n                            \n                            \n                                deleteMealPlanner\n                            \n                            \n                                deleteRecipe\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getIngredientById\n                            \n                            \n                                getIngredientByName\n                            \n                            \n                                getIngredients\n                            \n                            \n                                getMealPlanner\n                            \n                            \n                                getRecipes\n                            \n                            \n                                getRecipesByUserId\n                            \n                            \n                                getUser\n                            \n                            \n                                updateIngredient\n                            \n                            \n                                updateMealPlanner\n                            \n                            \n                                updateRecipe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createIngredient\n                        \n                    \n                \n            \n            \n                \ncreateIngredient(ingredient: CreateIngredientDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Post('ingredient')\n                \n            \n\n            \n                \n                    Defined in src/infrastructure/controllers/kitchen-recipes.controller.ts:233\n                \n            \n\n\n            \n                \n                    create ingredient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ingredient\n                                    \n                                                CreateIngredientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ingredient dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        ingredient model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createMealPlanner\n                        \n                    \n                \n            \n            \n                \ncreateMealPlanner(id: string, mealPlanner: CreateMealPlannerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Post('meal-planner/:id')\n                \n            \n\n            \n                \n                    Defined in src/infrastructure/controllers/kitchen-recipes.controller.ts:249\n                \n            \n\n\n            \n                \n                    create meal planner\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user id\n\n                                    \n                                \n                                \n                                    mealPlanner\n                                    \n                                                CreateMealPlannerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        meal planner dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        meal planner model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createRecipe\n                        \n                    \n                \n            \n            \n                \ncreateRecipe(recipe: CreateIngredientDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Post('recipe')\n                \n            \n\n            \n                \n                    Defined in src/infrastructure/controllers/kitchen-recipes.controller.ts:265\n                \n            \n\n\n            \n                \n                    create recipe\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    recipe\n                                    \n                                                CreateIngredientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        recipe model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(user: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('user')\n                \n            \n\n            \n                \n                    Defined in src/infrastructure/controllers/kitchen-recipes.controller.ts:280\n                \n            \n\n\n            \n                \n                    create user\n data: UserModel;\n token: string;\n}>} user model\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        user model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMealPlanner\n                        \n                    \n                \n            \n            \n                \ndeleteMealPlanner(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Delete('meal-planner/:id')\n                \n            \n\n            \n                \n                    Defined in src/infrastructure/controllers/kitchen-recipes.controller.ts:190\n                \n            \n\n\n            \n                \n                    delete meal planner\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        meal planner model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRecipe\n                        \n                    \n                \n            \n            \n                \ndeleteRecipe(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Delete('recipe/:id')\n                \n            \n\n            \n                \n                    Defined in src/infrastructure/controllers/kitchen-recipes.controller.ts:205\n                \n            \n\n\n            \n                \n                    delete recipe\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        recipe model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Delete('user/:id')\n                \n            \n\n            \n                \n                    Defined in src/infrastructure/controllers/kitchen-recipes.controller.ts:220\n                \n            \n\n\n            \n                \n                    delete user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        user model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIngredientById\n                        \n                    \n                \n            \n            \n                \ngetIngredientById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('ingredient/:id')\n                \n            \n\n            \n                \n                    Defined in src/infrastructure/controllers/kitchen-recipes.controller.ts:112\n                \n            \n\n\n            \n                \n                    get ingredients by recipe id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        ingredient model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIngredientByName\n                        \n                    \n                \n            \n            \n                \ngetIngredientByName(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('ingredient-name/:name')\n                \n            \n\n            \n                \n                    Defined in src/infrastructure/controllers/kitchen-recipes.controller.ts:127\n                \n            \n\n\n            \n                \n                    get ingredients by recipe name\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        ingredient model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIngredients\n                        \n                    \n                \n            \n            \n                \ngetIngredients()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('ingredient')\n                \n            \n\n            \n                \n                    Defined in src/infrastructure/controllers/kitchen-recipes.controller.ts:84\n                \n            \n\n\n            \n                \n                    get ingredients\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        ingredient model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMealPlanner\n                        \n                    \n                \n            \n            \n                \ngetMealPlanner(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('meal-planner/:id')\n                \n            \n\n            \n                \n                    Defined in src/infrastructure/controllers/kitchen-recipes.controller.ts:142\n                \n            \n\n\n            \n                \n                    get meal planner\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        meal-planner id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        meal planner model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRecipes\n                        \n                    \n                \n            \n            \n                \ngetRecipes(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('recipe/:id')\n                \n            \n\n            \n                \n                    Defined in src/infrastructure/controllers/kitchen-recipes.controller.ts:175\n                \n            \n\n\n            \n                \n                    get recipes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        recipe model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRecipesByUserId\n                        \n                    \n                \n            \n            \n                \ngetRecipesByUserId(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('recipes/:id')\n                \n            \n\n            \n                \n                    Defined in src/infrastructure/controllers/kitchen-recipes.controller.ts:97\n                \n            \n\n\n            \n                \n                    get recipes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        recipe model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user/:id')\n                \n            \n\n            \n                \n                    Defined in src/infrastructure/controllers/kitchen-recipes.controller.ts:159\n                \n            \n\n\n            \n                \n                    get user\n data: UserModel;\n token: string;\n}>} user model\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        user model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateIngredient\n                        \n                    \n                \n            \n            \n                \nupdateIngredient(id: string, ingredient: UpdateIngredientDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Put('ingredient/:id')\n                \n            \n\n            \n                \n                    Defined in src/infrastructure/controllers/kitchen-recipes.controller.ts:297\n                \n            \n\n\n            \n                \n                    update ingredient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    ingredient\n                                    \n                                                UpdateIngredientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ingredient dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        ingredient model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMealPlanner\n                        \n                    \n                \n            \n            \n                \nupdateMealPlanner(id: string, mealPlanner: UpdateMealPlannerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Put('meal-planner/:id')\n                \n            \n\n            \n                \n                    Defined in src/infrastructure/controllers/kitchen-recipes.controller.ts:314\n                \n            \n\n\n            \n                \n                    update meal planner\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        meal planner id\n\n                                    \n                                \n                                \n                                    mealPlanner\n                                    \n                                                UpdateMealPlannerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        meal planner dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        meal planner model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRecipe\n                        \n                    \n                \n            \n            \n                \nupdateRecipe(id: string, recipe: UpdateRecipeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Put('recipe/:id')\n                \n            \n\n            \n                \n                    Defined in src/infrastructure/controllers/kitchen-recipes.controller.ts:331\n                \n            \n\n\n            \n                \n                    update recipe\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe id\n\n                                    \n                                \n                                \n                                    recipe\n                                    \n                                                UpdateRecipeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recipe dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        recipe model\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Delegate } from '@application/delegate';\nimport { CreateIngredientDto } from '@infrastructure/dto/create-ingredient.dto';\nimport { CreateMealPlannerDto } from '@infrastructure/dto/create-meal-planner.dto';\nimport { CreateUserDto } from '@infrastructure/dto/create-user.dto';\nimport { UpdateIngredientDto } from '@infrastructure/dto/update-ingredient.dto';\nimport { UpdateMealPlannerDto } from '@infrastructure/dto/update-meal-planner.dto';\nimport { UpdateRecipeDto } from '@infrastructure/dto/update-recipe.dto';\nimport { MealPlannerModel } from '@infrastructure/models/meal-planner.model';\nimport { RecipesModel } from '@infrastructure/models/recipes.model';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\nimport { IngredientModel } from '@infrastructure/models';\nimport {\n  IngredientService,\n  MealPlannerService,\n  RecipeService,\n  UserService,\n} from '@infrastructure/services';\nimport { AuthGuard } from '@infrastructure/utils';\nimport { ValidateMongoId } from '@infrastructure/utils/pipes/mongo-id.pipe';\nimport { AuthService } from '@infrastructure/utils/services/auth.service';\nimport { UserModel } from '../models/user.model';\n\n/**\n * kitchen recipes controller\n *\n * @export\n * @class KitchenRecipesController\n * @typedef {KitchenRecipesController}\n */\n@Controller()\nexport class KitchenRecipesController {\n  /**\n   * delegate instance\n   *\n   * @private\n   * @readonly\n   * @type {Delegate}\n   */\n  private readonly delegate: Delegate;\n  /**\n   * Creates an instance of KitchenRecipesController.\n   *\n   * @constructor\n   * @param {IngredientService} ingredientService ingredient service\n   * @param {RecipeService} recipeService recipe service\n   * @param {MealPlannerService} mealPlannerService meal planner service\n   * @param {UserService} userService user service\n   * @param {AuthService} authService auth service\n   */\n  constructor(\n    private readonly ingredientService: IngredientService,\n    private readonly recipeService: RecipeService,\n    private readonly mealPlannerService: MealPlannerService,\n    private readonly userService: UserService,\n    private readonly authService: AuthService,\n  ) {\n    this.delegate = new Delegate(\n      recipeService,\n      ingredientService,\n      mealPlannerService,\n      userService,\n      authService,\n    );\n  }\n\n  /**\n   * get ingredients\n   *\n   * @returns {Observable} ingredient model\n   */\n  @UseGuards(AuthGuard)\n  @Get('ingredient')\n  getIngredients(): Observable {\n    this.delegate.toGetAllIngredients();\n    return this.delegate.execute();\n  }\n\n  /**\n   * get recipes\n   *\n   * @param {string} id user id\n   * @returns {Observable} recipe model\n   */\n  @UseGuards(AuthGuard)\n  @Get('recipes/:id')\n  getRecipesByUserId(\n    @Param('id', ValidateMongoId) id: string,\n  ): Observable {\n    this.delegate.toGetRecipesByUser();\n    return this.delegate.execute(id);\n  }\n\n  /**\n   * get ingredients by recipe id\n   *\n   * @param {string} id recipe id\n   * @returns {Observable} ingredient model\n   */\n  @UseGuards(AuthGuard)\n  @Get('ingredient/:id')\n  getIngredientById(\n    @Param('id', ValidateMongoId) id: string,\n  ): Observable {\n    this.delegate.toGetIngredient();\n    return this.delegate.execute(id);\n  }\n\n  /**\n   * get ingredients by recipe name\n   *\n   * @param {string} name recipe name\n   * @returns {Observable} ingredient model\n   */\n  @UseGuards(AuthGuard)\n  @Get('ingredient-name/:name')\n  getIngredientByName(\n    @Param('name') name: string,\n  ): Observable {\n    this.delegate.toGetIngredientByNames();\n    return this.delegate.execute(name);\n  }\n\n  /**\n   * get meal planner\n   *\n   * @param {string} id meal-planner id\n   * @returns {Observable} meal planner model\n   */\n  @UseGuards(AuthGuard)\n  @Get('meal-planner/:id')\n  getMealPlanner(\n    @Param('id', ValidateMongoId) id: string,\n  ): Observable {\n    this.delegate.toGetMealPlanner();\n    return this.delegate.execute(id);\n  }\n\n  /**\n   * get user\n   *\n   * @param {string} id user id\n   * @returns {Observable} user model\n   */\n  @Get('user/:id')\n  getUser(@Param('id') id: string): Observable {\n    this.delegate.toGetUser();\n    return this.delegate.execute(id);\n  }\n\n  /**\n   * get recipes\n   *\n   * @param {string} id recipe id\n   * @returns {Observable} recipe model\n   */\n  @UseGuards(AuthGuard)\n  @Get('recipe/:id')\n  getRecipes(\n    @Param('id', ValidateMongoId) id: string,\n  ): Observable {\n    this.delegate.toGetRecipe();\n    return this.delegate.execute(id);\n  }\n\n  /**\n   * delete meal planner\n   *\n   * @param {string} id recipe id\n   * @returns {Observable} meal planner model\n   */\n  @UseGuards(AuthGuard)\n  @Delete('meal-planner/:id')\n  deleteMealPlanner(\n    @Param('id', ValidateMongoId) id: string,\n  ): Observable {\n    this.delegate.toDeleteMealPlanner();\n    return this.delegate.execute(id);\n  }\n\n  /**\n   * delete recipe\n   *\n   * @param {string} id recipe id\n   * @returns {Observable} recipe model\n   */\n  @UseGuards(AuthGuard)\n  @Delete('recipe/:id')\n  deleteRecipe(\n    @Param('id', ValidateMongoId) id: string,\n  ): Observable {\n    this.delegate.toDeleteRecipe();\n    return this.delegate.execute(id);\n  }\n\n  /**\n   * delete user\n   *\n   * @param {string} id user id\n   * @returns {Observable} user model\n   */\n  @UseGuards(AuthGuard)\n  @Delete('user/:id')\n  deleteUser(@Param('id', ValidateMongoId) id: string): Observable {\n    this.delegate.toDeleteUser();\n    return this.delegate.execute(id);\n  }\n\n  /**\n   * create ingredient\n   *\n   * @param {CreateIngredientDto} ingredient ingredient dto\n   * @returns {Observable} ingredient model\n   */\n  @UseGuards(AuthGuard)\n  @Post('ingredient')\n  createIngredient(\n    @Body() ingredient: CreateIngredientDto,\n  ): Observable {\n    this.delegate.toCreateIngredient();\n    return this.delegate.execute(ingredient);\n  }\n\n  /**\n   * create meal planner\n   *\n   * @param {string} id user id\n   * @param {CreateMealPlannerDto} mealPlanner meal planner dto\n   * @returns {Observable} meal planner model\n   */\n  @UseGuards(AuthGuard)\n  @Post('meal-planner/:id')\n  createMealPlanner(\n    @Param('id', ValidateMongoId) id: string,\n    @Body() mealPlanner: CreateMealPlannerDto,\n  ): Observable {\n    this.delegate.toCreateMealPlanner();\n    return this.delegate.execute(id, mealPlanner);\n  }\n\n  /**\n   * create recipe\n   *\n   * @param {CreateIngredientDto} recipe recipe dto\n   * @returns {Observable} recipe model\n   */\n  @UseGuards(AuthGuard)\n  @Post('recipe')\n  createRecipe(@Body() recipe: CreateIngredientDto): Observable {\n    this.delegate.toCreateRecipe();\n    return this.delegate.execute(recipe);\n  }\n\n  /**\n   * create user\n   *\n   * @param {CreateUserDto} user user dto\n   * @returns {Observable} user model\n   */\n  @Post('user')\n  createUser(@Body() user: CreateUserDto): Observable {\n    this.delegate.toCreateUser();\n    return this.delegate.execute(user);\n  }\n\n  /**\n   * update ingredient\n   *\n   * @param {string} id\n   * @param {UpdateIngredientDto} ingredient ingredient dto\n   * @returns {Observable} ingredient model\n   */\n  @UseGuards(AuthGuard)\n  @Put('ingredient/:id')\n  updateIngredient(\n    @Param('id', ValidateMongoId) id: string,\n    @Body() ingredient: UpdateIngredientDto,\n  ): Observable {\n    this.delegate.toUpdateIngredient();\n    return this.delegate.execute(id, ingredient);\n  }\n\n  /**\n   * update meal planner\n   *\n   * @param {string} id meal planner id\n   * @param {UpdateMealPlannerDto} mealPlanner meal planner dto\n   * @returns {Observable} meal planner model\n   */\n  @UseGuards(AuthGuard)\n  @Put('meal-planner/:id')\n  updateMealPlanner(\n    @Param('id', ValidateMongoId) id: string,\n    @Body() mealPlanner: UpdateMealPlannerDto,\n  ): Observable {\n    this.delegate.toUpdateMealPlanner();\n    return this.delegate.execute(id, mealPlanner);\n  }\n\n  /**\n   * update recipe\n   *\n   * @param {string} id recipe id\n   * @param {UpdateRecipeDto} recipe recipe dto\n   * @returns {Observable} recipe model\n   */\n  @UseGuards(AuthGuard)\n  @Put('recipe/:id')\n  updateRecipe(\n    @Param('id', ValidateMongoId) id: string,\n    @Body() recipe: UpdateRecipeDto,\n  ): Observable {\n    this.delegate.toUpdateRecipe();\n    return this.delegate.execute(id, recipe);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MealPlannerDomainModel.html":{"url":"classes/MealPlannerDomainModel.html","title":"class - MealPlannerDomainModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MealPlannerDomainModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/models/meal-planner.domain-model.ts\n        \n\n\n            \n                Description\n            \n            \n                class for meal planner domain model\n\n            \n\n\n            \n                Implements\n            \n            \n                            IMealPlannerDomainModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                amount\n                            \n                            \n                                name\n                            \n                            \n                                notes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/meal-planner.domain-model.ts:18\n                        \n                    \n\n            \n                \n                    id of meal planner\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/meal-planner.domain-model.ts:30\n                        \n                    \n\n            \n                \n                    amount of meal planner\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/meal-planner.domain-model.ts:24\n                        \n                    \n\n            \n                \n                    name of meal planner\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/meal-planner.domain-model.ts:36\n                        \n                    \n\n            \n                \n                    notes of meal planner\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IngredientDomainModel } from './ingredient.domain-model';\nimport { IMealPlannerDomainModel } from './interfaces/meal-planner.domain-model.interface';\n\n/**\n * class for meal planner domain model\n *\n * @export\n * @class MealPlannerDomainModel\n * @typedef {MealPlannerDomainModel}\n * @implements {IMealPlannerDomainModel}\n */\nexport class MealPlannerDomainModel implements IMealPlannerDomainModel {\n  /**\n   * id of meal planner\n   *\n   * @type {?string} _id - id of meal planner\n   */\n  _id?: string;\n  /**\n   * name of meal planner\n   *\n   * @type {string} name\n   */\n  name: string;\n  /**\n   * amount of meal planner\n   *\n   * @type {{ ingredientId: IngredientDomainModel['_id']; amount: number }[]} amount - array of ingredients\n   */\n  amount: { ingredientId: IngredientDomainModel['_id']; amount: number }[];\n  /**\n   * notes of meal planner\n   *\n   * @type {string} notes - notes of meal planner\n   */\n  notes: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MealPlannerModel.html":{"url":"classes/MealPlannerModel.html","title":"class - MealPlannerModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MealPlannerModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/models/meal-planner.model.ts\n        \n\n\n            \n                Description\n            \n            \n                class for meal planner model\n\n            \n\n            \n                Extends\n            \n            \n                        MealPlannerDomainModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                amount\n                            \n                            \n                                name\n                            \n                            \n                                notes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         MealPlannerDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         MealPlannerDomainModel:18\n\n                        \n                    \n\n            \n                \n                    id of meal planner\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                        \n                            \n                                Inherited from         MealPlannerDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         MealPlannerDomainModel:30\n\n                        \n                    \n\n            \n                \n                    amount of meal planner\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         MealPlannerDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         MealPlannerDomainModel:24\n\n                        \n                    \n\n            \n                \n                    name of meal planner\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         MealPlannerDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         MealPlannerDomainModel:36\n\n                        \n                    \n\n            \n                \n                    notes of meal planner\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MealPlannerDomainModel } from '@domain/models';\n\n/**\n * class for meal planner model\n *\n * @export\n * @class MealPlannerModel\n * @typedef {MealPlannerModel}\n * @extends {MealPlannerDomainModel}\n */\nexport class MealPlannerModel extends MealPlannerDomainModel {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MealPlannerMongo.html":{"url":"classes/MealPlannerMongo.html","title":"class - MealPlannerMongo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MealPlannerMongo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/persistence/database/mongo/schemas/meal-planner.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                class MealPlannerMongo\n\n            \n\n            \n                Extends\n            \n            \n                        MealPlannerModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                amount\n                            \n                            \n                                name\n                            \n                            \n                                notes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, auto: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MealPlannerDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         MealPlannerDomainModel:21\n\n                        \n                    \n\n            \n                \n                    id of the meal planner\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MealPlannerDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         MealPlannerDomainModel:45\n\n                        \n                    \n\n            \n                \n                    description of the meal planner\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MealPlannerDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         MealPlannerDomainModel:29\n\n                        \n                    \n\n            \n                \n                    name of the meal planner\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MealPlannerDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         MealPlannerDomainModel:53\n\n                        \n                    \n\n            \n                \n                    photo url of the meal planner\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MealPlannerModel } from '@infrastructure/models';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, SchemaTypes } from 'mongoose';\nimport { IngredientMongo } from './ingredient.schema';\n/**\n * class MealPlannerMongo\n *\n * @export\n * @class MealPlannerMongo\n * @typedef {MealPlannerMongo}\n * @extends {MealPlannerModel}\n */\n@Schema({ collection: 'meal-planners', versionKey: false })\nexport class MealPlannerMongo extends MealPlannerModel {\n  /**\n   * id of the meal planner\n   *\n   * @type {?string} id of the meal planner\n   */\n  @Prop({ type: SchemaTypes.ObjectId, auto: true })\n  _id?: string;\n\n  /**\n   * name of the meal planner\n   *\n   * @type {string} name of the meal planner\n   */\n  @Prop({ type: String, required: true })\n  name: string;\n\n  /**\n   * description of the meal planner\n   *\n   * @type {{ ingredientId: IngredientMongo['_id']; amount: number }[]} description of the meal planner\n   */\n  @Prop({\n    type: [\n      {\n        ingredients: { type: SchemaTypes.ObjectId, ref: IngredientMongo.name },\n        amount: Number,\n      },\n    ],\n    required: true,\n  })\n  amount: { ingredientId: IngredientMongo['_id']; amount: number }[];\n\n  /**\n   * photo url of the meal planner\n   *\n   * @type {string} photo url of the meal planner\n   */\n  @Prop({ type: String, required: true })\n  notes: string;\n}\n\n/**\n * MealPlannerSchema\n *\n * @type {*}\n */\nexport const MealPlannerSchema = SchemaFactory.createForClass(MealPlannerMongo);\n/**\n * MealPlannerDocument\n *\n * @export\n * @typedef {MealPlannerDocument}\n */\nexport type MealPlannerDocument = HydratedDocument;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MealPlannerMongoService.html":{"url":"injectables/MealPlannerMongoService.html","title":"injectable - MealPlannerMongoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MealPlannerMongoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/persistence/database/mongo/services/meal-planner.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Meal Planner Mongo Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mealPlannerRepository: MealPlannerRepository)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/persistence/database/mongo/services/meal-planner.service.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of MealPlannerMongoService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mealPlannerRepository\n                                                  \n                                                        \n                                                                        MealPlannerRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nmeal planner repository\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: MealPlannerMongo)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/services/meal-planner.service.ts:30\n                \n            \n\n\n            \n                \n                    create a meal planner\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                MealPlannerMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nmeal planner\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/services/meal-planner.service.ts:61\n                \n            \n\n\n            \n                \n                    delete meal planner\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nmeal planner\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/services/meal-planner.service.ts:39\n                \n            \n\n\n            \n                \n                    find by id meal planner\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nmeal planner\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, mealPlanner: MealPlannerMongo)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/services/meal-planner.service.ts:49\n                \n            \n\n\n            \n                \n                    update meal planner\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner id\n\n\n                                    \n                                \n                                \n                                    mealPlanner\n                                    \n                                                MealPlannerMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nmeal planner\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IMealPlannerService } from '@domain/services/meal-planner.service';\nimport { MealPlannerRepository } from '@infrastructure/persistence/database/mongo/repositories/meal-planner.repository';\nimport { Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { MealPlannerMongo } from '../schemas/meal-planner.schema';\n/**\n * Meal Planner Mongo Service\n *\n * @export\n * @class MealPlannerMongoService\n * @typedef {MealPlannerMongoService}\n * @implements {IMealPlannerService}\n */\n@Injectable()\nexport class MealPlannerMongoService implements IMealPlannerService {\n  /**\n   * Creates an instance of MealPlannerMongoService.\n   *\n   * @constructor\n   * @param {MealPlannerRepository} mealPlannerRepository - meal planner repository\n   */\n  constructor(private readonly mealPlannerRepository: MealPlannerRepository) {}\n\n  /**\n   * create a meal planner\n   *\n   * @param {MealPlannerMongo} entity - meal planner\n   * @returns {Observable} - meal planner\n   */\n  create(entity: MealPlannerMongo): Observable {\n    return this.mealPlannerRepository.create(entity);\n  }\n  /**\n   * find by id meal planner\n   *\n   * @param {string} id - meal planner id\n   * @returns {Observable} - meal planner\n   */\n  findById(id: string): Observable {\n    return this.mealPlannerRepository.findById(id);\n  }\n  /**\n   * update meal planner\n   *\n   * @param {string} id - meal planner id\n   * @param {MealPlannerMongo} mealPlanner - meal planner\n   * @returns {Observable} - meal planner\n   */\n  update(\n    id: string,\n    mealPlanner: MealPlannerMongo,\n  ): Observable {\n    return this.mealPlannerRepository.update(id, mealPlanner);\n  }\n  /**\n   * delete meal planner\n   *\n   * @param {string} id - meal planner id\n   * @returns {Observable} - meal planner\n   */\n  delete(id: string): Observable {\n    return this.mealPlannerRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MealPlannerRepository.html":{"url":"injectables/MealPlannerRepository.html","title":"injectable - MealPlannerRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MealPlannerRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/persistence/database/mongo/repositories/meal-planner.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                class for meal planner repository\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Model)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/persistence/database/mongo/repositories/meal-planner.repository.ts:26\n                            \n                        \n\n                \n                    \n                            Creates an instance of MealPlannerRepository.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nmeal planner repository\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: MealPlannerMongo)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/meal-planner.repository.ts:54\n                \n            \n\n\n            \n                \n                    create meal planner\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                MealPlannerMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner entity\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nmeal planner observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/meal-planner.repository.ts:74\n                \n            \n\n\n            \n                \n                    delete meal planner by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nmeal planner observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(document: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/meal-planner.repository.ts:64\n                \n            \n\n\n            \n                \n                    find meal planner by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nmeal planner observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(_id: string, entity: MealPlannerMongo)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/meal-planner.repository.ts:44\n                \n            \n\n\n            \n                \n                    update meal planner\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner id\n\n\n                                    \n                                \n                                \n                                    entity\n                                    \n                                                MealPlannerMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner entity\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nmeal planner observable\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Observable, from } from 'rxjs';\nimport {\n  MealPlannerDocument,\n  MealPlannerMongo,\n} from '../schemas/meal-planner.schema';\nimport { IBaseRepository } from './Interface';\nimport { IUpdateRepository } from './Interface/update.interface';\n\n/**\n * class for meal planner repository\n *\n * @export\n * @class MealPlannerRepository\n * @typedef {MealPlannerRepository}\n * @implements {IBaseRepository}\n * @implements {IUpdateRepository}\n */\n@Injectable()\nexport class MealPlannerRepository\n  implements\n    IBaseRepository,\n    IUpdateRepository\n{\n  /**\n   * Creates an instance of MealPlannerRepository.\n   *\n   * @constructor\n   * @param {Model} repository - meal planner repository\n   */\n  constructor(\n    @InjectModel(MealPlannerMongo.name)\n    private readonly repository: Model,\n  ) {}\n  /**\n   * update meal planner\n   *\n   * @param {string} _id - meal planner id\n   * @param {MealPlannerMongo} entity - meal planner entity\n   * @returns {Observable} - meal planner observable\n   */\n  update(_id: string, entity: MealPlannerMongo): Observable {\n    return from(this.repository.findByIdAndUpdate(_id, entity, { new: true }));\n  }\n\n  /**\n   * create meal planner\n   *\n   * @param {MealPlannerMongo} entity - meal planner entity\n   * @returns {Observable} - meal planner observable\n   */\n  create(entity: MealPlannerMongo): Observable {\n    return from(this.repository.create(entity));\n  }\n\n  /**\n   * find meal planner by id\n   *\n   * @param {string} document - meal planner id\n   * @returns {Observable} - meal planner observable\n   */\n  findById(document: string): Observable {\n    return from(this.repository.findById(document));\n  }\n\n  /**\n   * delete meal planner by id\n   *\n   * @param {string} _id - meal planner id\n   * @returns {Observable} - meal planner observable\n   */\n  delete(_id: string): Observable {\n    return from(this.repository.findByIdAndDelete(_id));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MealPlannerService.html":{"url":"injectables/MealPlannerService.html","title":"injectable - MealPlannerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MealPlannerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/services/meal-planner.service.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the meal planner service\n\n            \n\n            \n                Extends\n            \n            \n                        MealPlannerMongoService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: MealPlannerMongo)\n                \n            \n\n\n            \n                \n                    Inherited from         MealPlannerMongoService\n\n                \n            \n            \n                \n                        Defined in         MealPlannerMongoService:30\n\n                \n            \n\n\n            \n                \n                    create a meal planner\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                MealPlannerMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nmeal planner\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         MealPlannerMongoService\n\n                \n            \n            \n                \n                        Defined in         MealPlannerMongoService:61\n\n                \n            \n\n\n            \n                \n                    delete meal planner\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nmeal planner\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         MealPlannerMongoService\n\n                \n            \n            \n                \n                        Defined in         MealPlannerMongoService:39\n\n                \n            \n\n\n            \n                \n                    find by id meal planner\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nmeal planner\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, mealPlanner: MealPlannerMongo)\n                \n            \n\n\n            \n                \n                    Inherited from         MealPlannerMongoService\n\n                \n            \n            \n                \n                        Defined in         MealPlannerMongoService:49\n\n                \n            \n\n\n            \n                \n                    update meal planner\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner id\n\n\n                                    \n                                \n                                \n                                    mealPlanner\n                                    \n                                                MealPlannerMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nmeal planner\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { MealPlannerMongoService } from '../persistence/database/mongo/services/meal-planner.service';\n\n/**\n * interface for the meal planner service\n *\n * @export\n * @class MealPlannerService\n * @typedef {MealPlannerService}\n * @extends {MealPlannerMongoService}\n */\n@Injectable()\nexport class MealPlannerService extends MealPlannerMongoService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoModule.html":{"url":"modules/MongoModule.html","title":"module - MongoModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MongoModule\n\n\n\ncluster_MongoModule_exports\n\n\n\ncluster_MongoModule_providers\n\n\n\n\nIngredientMongoService \n\nIngredientMongoService \n\n\n\nIngredientRepository \n\nIngredientRepository \n\n\n\nMealPlannerMongoService \n\nMealPlannerMongoService \n\n\n\nMealPlannerRepository \n\nMealPlannerRepository \n\n\n\nRecipeMongoService \n\nRecipeMongoService \n\n\n\nRecipeRepository \n\nRecipeRepository \n\n\n\nUserMongoService \n\nUserMongoService \n\n\n\nUserRepository \n\nUserRepository \n\n\n\nMongoModule\n\nMongoModule\n\nIngredientMongoService  -->\n\nMongoModule->IngredientMongoService \n\n\n\nIngredientRepository  -->\n\nMongoModule->IngredientRepository \n\n\n\nMealPlannerMongoService  -->\n\nMongoModule->MealPlannerMongoService \n\n\n\nMealPlannerRepository  -->\n\nMongoModule->MealPlannerRepository \n\n\n\nRecipeMongoService  -->\n\nMongoModule->RecipeMongoService \n\n\n\nRecipeRepository  -->\n\nMongoModule->RecipeRepository \n\n\n\nUserMongoService  -->\n\nMongoModule->UserMongoService \n\n\n\nUserRepository  -->\n\nMongoModule->UserRepository \n\n\n\n\n\nIngredientMongoService\n\nIngredientMongoService\n\nMongoModule -->\n\nIngredientMongoService->MongoModule\n\n\n\n\n\nIngredientRepository\n\nIngredientRepository\n\nMongoModule -->\n\nIngredientRepository->MongoModule\n\n\n\n\n\nMealPlannerMongoService\n\nMealPlannerMongoService\n\nMongoModule -->\n\nMealPlannerMongoService->MongoModule\n\n\n\n\n\nMealPlannerRepository\n\nMealPlannerRepository\n\nMongoModule -->\n\nMealPlannerRepository->MongoModule\n\n\n\n\n\nMongooseConfigService\n\nMongooseConfigService\n\nMongoModule -->\n\nMongooseConfigService->MongoModule\n\n\n\n\n\nRecipeMongoService\n\nRecipeMongoService\n\nMongoModule -->\n\nRecipeMongoService->MongoModule\n\n\n\n\n\nRecipeRepository\n\nRecipeRepository\n\nMongoModule -->\n\nRecipeRepository->MongoModule\n\n\n\n\n\nUserMongoService\n\nUserMongoService\n\nMongoModule -->\n\nUserMongoService->MongoModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nMongoModule -->\n\nUserRepository->MongoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infrastructure/persistence/database/mongo/mongo.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IngredientMongoService\n                        \n                        \n                            IngredientRepository\n                        \n                        \n                            MealPlannerMongoService\n                        \n                        \n                            MealPlannerRepository\n                        \n                        \n                            MongooseConfigService\n                        \n                        \n                            RecipeMongoService\n                        \n                        \n                            RecipeRepository\n                        \n                        \n                            UserMongoService\n                        \n                        \n                            UserRepository\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IngredientMongoService\n                        \n                        \n                            IngredientRepository\n                        \n                        \n                            MealPlannerMongoService\n                        \n                        \n                            MealPlannerRepository\n                        \n                        \n                            RecipeMongoService\n                        \n                        \n                            RecipeRepository\n                        \n                        \n                            UserMongoService\n                        \n                        \n                            UserRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { MongooseConfigService } from './config/mongo.config';\nimport { IngredientRepository } from './repositories/ingredient.repository';\nimport { MealPlannerRepository } from './repositories/meal-planner.repository';\nimport { RecipeRepository } from './repositories/recipe.repository';\nimport { UserRepository } from './repositories/user.repository';\nimport {\n  IngredientMongo,\n  IngredientsSchema,\n} from './schemas/ingredient.schema';\nimport {\n  MealPlannerMongo,\n  MealPlannerSchema,\n} from './schemas/meal-planner.schema';\nimport { RecipeMongo, RecipesSchema } from './schemas/recipe.schema';\nimport { UserMongo, UserSchema } from './schemas/user.schema';\nimport { IngredientMongoService } from './services/ingredient.service';\nimport { MealPlannerMongoService } from './services/meal-planner.service';\nimport { RecipeMongoService } from './services/recipe.service';\nimport { UserMongoService } from './services/user.service';\n\n@Module({\n  imports: [\n    MongooseModule.forRootAsync({\n      useClass: MongooseConfigService,\n    }),\n    MongooseModule.forFeature([\n      {\n        name: UserMongo.name,\n        schema: UserSchema,\n      },\n      {\n        name: IngredientMongo.name,\n        schema: IngredientsSchema,\n      },\n      {\n        name: MealPlannerMongo.name,\n        schema: MealPlannerSchema,\n      },\n      {\n        name: RecipeMongo.name,\n        schema: RecipesSchema,\n      },\n    ]),\n  ],\n  controllers: [],\n  providers: [\n    MongooseConfigService,\n    MealPlannerMongoService,\n    RecipeMongoService,\n    UserMongoService,\n    IngredientMongoService,\n    MealPlannerRepository,\n    RecipeRepository,\n    UserRepository,\n    IngredientRepository,\n  ],\n  exports: [\n    MealPlannerMongoService,\n    RecipeMongoService,\n    UserMongoService,\n    IngredientMongoService,\n    MealPlannerRepository,\n    RecipeRepository,\n    UserRepository,\n    IngredientRepository,\n  ],\n})\nexport class MongoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoServerErrorExceptionFilter.html":{"url":"classes/MongoServerErrorExceptionFilter.html","title":"class - MongoServerErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoServerErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/utils/exception-filters/mongo-server-error.exception-filter.ts\n        \n\n\n            \n                Description\n            \n            \n                MongoServerErrorExceptionFilter class\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: MongoServerError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/utils/exception-filters/mongo-server-error.exception-filter.ts:28\n                \n            \n\n\n            \n                \n                    Description placeholder\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            MongoServerError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nexception\n\n\n                                    \n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nhost\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\nimport { MongoServerError } from 'mongodb';\n\n/**\n * MongoServerErrorExceptionFilter class\n *\n * @export\n * @class MongoServerErrorExceptionFilter\n * @typedef {MongoServerErrorExceptionFilter}\n * @implements {ExceptionFilter}\n */\n@Catch(MongoServerError)\nexport class MongoServerErrorExceptionFilter\n  implements ExceptionFilter\n{\n  /**\n   * Description placeholder\n   *\n   * @param {MongoServerError} exception - exception\n   * @param {ArgumentsHost} host - host\n   */\n  catch(exception: MongoServerError, host: ArgumentsHost) {\n    const context = host.switchToHttp();\n    const response = context.getResponse();\n    const message = exception.message;\n    const statusCode = HttpStatus.CONFLICT;\n    const details = exception;\n\n    response.status(statusCode).json({ statusCode, message, details });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MongooseConfigService.html":{"url":"injectables/MongooseConfigService.html","title":"injectable - MongooseConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MongooseConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/persistence/database/mongo/config/mongo.config.ts\n        \n\n\n            \n                Description\n            \n            \n                mongoose config service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMongooseOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/persistence/database/mongo/config/mongo.config.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of MongooseConfigService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                config service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMongooseOptions\n                        \n                    \n                \n            \n            \n                \ncreateMongooseOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/config/mongo.config.ts:38\n                \n            \n\n\n            \n                \n                    database name\n\n\n                    \n                    \n                    \n                        Returns :     MongooseModuleOptions\n\n                    \n                    \n                        mongoose module options\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configService.get('MONGO_URL')\n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/persistence/database/mongo/config/mongo.config.ts:31\n                        \n                    \n\n            \n                \n                    url\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  MongooseModuleOptions,\n  MongooseOptionsFactory,\n} from '@nestjs/mongoose';\n\n/**\n * mongoose config service\n *\n * @export\n * @class MongooseConfigService\n * @typedef {MongooseConfigService}\n * @implements {MongooseOptionsFactory}\n */\n@Injectable()\nexport class MongooseConfigService implements MongooseOptionsFactory {\n  /**\n   * Creates an instance of MongooseConfigService.\n   *\n   * @constructor\n   * @param {ConfigService} configService config service\n   */\n  constructor(private readonly configService: ConfigService) {}\n\n  /**\n   * url\n   *\n   * @type {string} url\n   */\n  url = this.configService.get('MONGO_URL');\n\n  /**\n   * database name\n   *\n   * @returns {MongooseModuleOptions} mongoose module options\n   */\n  createMongooseOptions(): MongooseModuleOptions {\n    return {\n      uri: 'mongodb://mongo:0cqHiaBZlPBY2Op9ywsZ@containers-us-west-92.railway.app:7172',\n      dbName: 'kitchen-recipes',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RecipeDomainModel.html":{"url":"classes/RecipeDomainModel.html","title":"class - RecipeDomainModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RecipeDomainModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/models/recipes.domain-model.ts\n        \n\n\n            \n                Description\n            \n            \n                class for recipe domain model\n\n            \n\n\n            \n                Implements\n            \n            \n                            IRecipeDomainModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                description\n                            \n                            \n                                ingredients\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                notes\n                            \n                            \n                                    Optional\n                                nutritionInfo\n                            \n                            \n                                photoUrl\n                            \n                            \n                                servings\n                            \n                            \n                                steps\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/recipes.domain-model.ts:19\n                        \n                    \n\n            \n                \n                    id of recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/recipes.domain-model.ts:31\n                        \n                    \n\n            \n                \n                    description of recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/recipes.domain-model.ts:37\n                        \n                    \n\n            \n                \n                    ingredients of recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/recipes.domain-model.ts:25\n                        \n                    \n\n            \n                \n                    name of recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/recipes.domain-model.ts:55\n                        \n                    \n\n            \n                \n                    notes of recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        nutritionInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/recipes.domain-model.ts:67\n                        \n                    \n\n            \n                \n                    nutrition info of recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/recipes.domain-model.ts:43\n                        \n                    \n\n            \n                \n                    photo url of recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        servings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/recipes.domain-model.ts:61\n                        \n                    \n\n            \n                \n                    servings of recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        steps\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/recipes.domain-model.ts:49\n                        \n                    \n\n            \n                \n                    steps of recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/domain/models/recipes.domain-model.ts:73\n                        \n                    \n\n            \n                \n                    user id of recipe\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IngredientDomainModel } from './ingredient.domain-model';\nimport { IRecipeDomainModel } from './interfaces/recipes.domain-model.interface';\nimport { UserDomainModel } from './user.domain-model';\n\n/**\n * class for recipe domain model\n *\n * @export\n * @class RecipeDomainModel\n * @typedef {RecipeDomainModel}\n * @implements {IRecipeDomainModel}\n */\nexport class RecipeDomainModel implements IRecipeDomainModel {\n  /**\n   * id of recipe\n   *\n   * @type {?string} _id - id of recipe\n   */\n  _id?: string;\n  /**\n   * name of recipe\n   *\n   * @type {string} name\n   */\n  name: string;\n  /**\n   * description of recipe\n   *\n   * @type {string} description\n   */\n  description: string;\n  /**\n   * ingredients of recipe\n   *\n   * @type {{ amount: number; ingredientId: IngredientDomainModel['_id'] }[]} ingredients - array of ingredients\n   */\n  ingredients: { amount: number; ingredientId: IngredientDomainModel['_id'] }[];\n  /**\n   * photo url of recipe\n   *\n   * @type {string} photoUrl\n   */\n  photoUrl: string;\n  /**\n   * steps of recipe\n   *\n   * @type {string[]} steps - array of steps\n   */\n  steps: string[];\n  /**\n   * notes of recipe\n   *\n   * @type {?string} notes\n   */\n  notes?: string;\n  /**\n   * servings of recipe\n   *\n   * @type {number} servings\n   */\n  servings: number;\n  /**\n   * nutrition info of recipe\n   *\n   * @type {?string} nutritionInfo\n   */\n  nutritionInfo?: string;\n  /**\n   * user id of recipe\n   *\n   * @type {UserDomainModel['_id']} userId\n   */\n  userId: UserDomainModel['_id'];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RecipeMongo.html":{"url":"classes/RecipeMongo.html","title":"class - RecipeMongo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RecipeMongo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/persistence/database/mongo/schemas/recipe.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                class RecipeMongo\n\n            \n\n            \n                Extends\n            \n            \n                        RecipesModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                description\n                            \n                            \n                                ingredients\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                notes\n                            \n                            \n                                    Optional\n                                nutritionInfo\n                            \n                            \n                                photoUrl\n                            \n                            \n                                servings\n                            \n                            \n                                steps\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, auto: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         RecipeDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         RecipeDomainModel:22\n\n                        \n                    \n\n            \n                \n                    id of the recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         RecipeDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         RecipeDomainModel:38\n\n                        \n                    \n\n            \n                \n                    description of the recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         RecipeDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         RecipeDomainModel:54\n\n                        \n                    \n\n            \n                \n                    ingredients of the recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         RecipeDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         RecipeDomainModel:30\n\n                        \n                    \n\n            \n                \n                    name of the recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         RecipeDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         RecipeDomainModel:78\n\n                        \n                    \n\n            \n                \n                    notes of the recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        nutritionInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         RecipeDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         RecipeDomainModel:94\n\n                        \n                    \n\n            \n                \n                    nutrition info of the recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         RecipeDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         RecipeDomainModel:62\n\n                        \n                    \n\n            \n                \n                    photo url of the recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        servings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         RecipeDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         RecipeDomainModel:86\n\n                        \n                    \n\n            \n                \n                    servings of the recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        steps\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         RecipeDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         RecipeDomainModel:70\n\n                        \n                    \n\n            \n                \n                    steps of the recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         RecipeDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         RecipeDomainModel:102\n\n                        \n                    \n\n            \n                \n                    user id of the recipe\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RecipesModel } from '@infrastructure/models';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, SchemaTypes } from 'mongoose';\nimport { IngredientMongo } from './ingredient.schema';\n\n/**\n * class RecipeMongo\n *\n * @export\n * @class RecipeMongo\n * @typedef {RecipeMongo}\n * @extends {RecipesModel}\n */\n@Schema({ collection: 'recipes', versionKey: false })\nexport class RecipeMongo extends RecipesModel {\n  /**\n   * id of the recipe\n   *\n   * @type {?string} _id\n   */\n  @Prop({ type: SchemaTypes.ObjectId, auto: true })\n  _id?: string;\n\n  /**\n   * name of the recipe\n   *\n   * @type {string} name\n   */\n  @Prop({ type: String, required: true })\n  name: string;\n\n  /**\n   * description of the recipe\n   *\n   * @type {string} description\n   */\n  @Prop({ type: String, required: true })\n  description: string;\n\n  /**\n   * ingredients of the recipe\n   *\n   * @type {{ amount: number; ingredientId: IngredientMongo['_id'] }[]}\n   */\n  @Prop({\n    type: [\n      {\n        amount: Number,\n        ingredientId: { type: SchemaTypes.ObjectId, ref: IngredientMongo.name },\n      },\n    ],\n    required: true,\n  })\n  ingredients: { amount: number; ingredientId: IngredientMongo['_id'] }[];\n\n  /**\n   * photo url of the recipe\n   *\n   * @type {string} photoUrl\n   */\n  @Prop({ type: String, required: true })\n  photoUrl: string;\n\n  /**\n   * steps of the recipe\n   *\n   * @type {string[]} steps\n   */\n  @Prop({ type: [String], required: true })\n  steps: string[];\n\n  /**\n   * notes of the recipe\n   *\n   * @type {?string} notes\n   */\n  @Prop({ type: String, required: true })\n  notes?: string;\n\n  /**\n   * servings of the recipe\n   *\n   * @type {number} servings\n   */\n  @Prop({ type: Number, required: true })\n  servings: number;\n\n  /**\n   * nutrition info of the recipe\n   *\n   * @type {?string} nutritionInfo\n   */\n  @Prop({ type: String, required: true })\n  nutritionInfo?: string;\n\n  /**\n   * user id of the recipe\n   *\n   * @type {string} userId\n   */\n  @Prop({ type: String, required: true })\n  userId: string;\n}\n\n/**\n * RecipesSchema\n *\n * @type {*} RecipesSchema\n */\nexport const RecipesSchema = SchemaFactory.createForClass(RecipeMongo);\n/**\n * RecipeDocument\n *\n * @export\n * @typedef {RecipeDocument} RecipeDocument\n */\nexport type RecipeDocument = HydratedDocument;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RecipeMongoService.html":{"url":"injectables/RecipeMongoService.html","title":"injectable - RecipeMongoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RecipeMongoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/persistence/database/mongo/services/recipe.service.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the recipe service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAllByUserId\n                            \n                            \n                                findById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(recipeRepository: RecipeRepository)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/persistence/database/mongo/services/recipe.service.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of RecipeMongoService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        recipeRepository\n                                                  \n                                                        \n                                                                        RecipeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nrecipe repository\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: RecipeMongo)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/services/recipe.service.ts:29\n                \n            \n\n\n            \n                \n                    create a recipe\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                RecipeMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrecipe\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nrecipe\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/services/recipe.service.ts:57\n                \n            \n\n\n            \n                \n                    delete recipe\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrecipe id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nrecipe\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \nfindAllByUserId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/services/recipe.service.ts:67\n                \n            \n\n\n            \n                \n                    find all recipes by user id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nuser id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nrecipes\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/services/recipe.service.ts:38\n                \n            \n\n\n            \n                \n                    find by id recipe\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrecipe id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nrecipe\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, recipe: RecipeMongo)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/services/recipe.service.ts:48\n                \n            \n\n\n            \n                \n                    update recipe\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrecipe id\n\n\n                                    \n                                \n                                \n                                    recipe\n                                    \n                                                RecipeMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrecipe\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nrecipe\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IRecipeService } from '@domain/services/recipes.service';\nimport { RecipeMongo } from '@infrastructure/persistence';\nimport { RecipeRepository } from '@infrastructure/persistence/database/mongo/repositories/recipe.repository';\nimport { Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\n/**\n * interface for the recipe service\n *\n * @export\n * @class RecipeMongoService\n * @typedef {RecipeMongoService}\n * @implements {IRecipeService}\n */\n@Injectable()\nexport class RecipeMongoService implements IRecipeService {\n  /**\n   * Creates an instance of RecipeMongoService.\n   *\n   * @constructor\n   * @param {RecipeRepository} recipeRepository - recipe repository\n   */\n  constructor(private readonly recipeRepository: RecipeRepository) {}\n  /**\n   * create a recipe\n   *\n   * @param {RecipeMongo} entity - recipe\n   * @returns {Observable} - recipe\n   */\n  create(entity: RecipeMongo): Observable {\n    return this.recipeRepository.create(entity);\n  }\n  /**\n   * find by id recipe\n   *\n   * @param {string} id - recipe id\n   * @returns {Observable} - recipe\n   */\n  findById(id: string): Observable {\n    return this.recipeRepository.findById(id);\n  }\n  /**\n   * update recipe\n   *\n   * @param {string} id  - recipe id\n   * @param {RecipeMongo} recipe - recipe\n   * @returns {Observable} - recipe\n   */\n  update(id: string, recipe: RecipeMongo): Observable {\n    return this.recipeRepository.update(id, recipe);\n  }\n  /**\n   * delete recipe\n   *\n   * @param {string} id - recipe id\n   * @returns {Observable} - recipe\n   */\n  delete(id: string): Observable {\n    return this.recipeRepository.delete(id);\n  }\n\n  /**\n   * find all recipes by user id\n   *\n   * @param {string} id - user id\n   * @returns {Observable} - recipes\n   */\n  findAllByUserId(id: string): Observable {\n    return this.recipeRepository.findAllByUserId(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RecipeRepository.html":{"url":"injectables/RecipeRepository.html","title":"injectable - RecipeRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RecipeRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/persistence/database/mongo/repositories/recipe.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                class for recipe repository\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findAllByUserId\n                            \n                            \n                                findById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Model)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/persistence/database/mongo/repositories/recipe.repository.ts:26\n                            \n                        \n\n                \n                    \n                            Creates an instance of RecipeRepository.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nrecipe repository\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: RecipeMongo)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/recipe.repository.ts:53\n                \n            \n\n\n            \n                \n                    create recipe\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                RecipeMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrecipe entity\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nrecipe observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/recipe.repository.ts:71\n                \n            \n\n\n            \n                \n                    delete recipe by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrecipe id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nrecipe observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/recipe.repository.ts:79\n                \n            \n\n\n            \n                \n                    find all recipes\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nrecipe observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \nfindAllByUserId(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/recipe.repository.ts:89\n                \n            \n\n\n            \n                \n                    find all recipes by user id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nuser id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nrecipe observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(document: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/recipe.repository.ts:62\n                \n            \n\n\n            \n                \n                    find recipe by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrecipe id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nrecipe observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(_id: string, entity: RecipeMongo)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/recipe.repository.ts:44\n                \n            \n\n\n            \n                \n                    update recipe\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrecipe id\n\n\n                                    \n                                \n                                \n                                    entity\n                                    \n                                                RecipeMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrecipe entity\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nrecipe observable\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Observable, from } from 'rxjs';\nimport { RecipeDocument, RecipeMongo } from '../schemas';\nimport { IBaseRepository } from './Interface';\nimport { IFindAll } from './Interface/find-all.interface';\nimport { IUpdateRepository } from './Interface/update.interface';\n\n/**\n * class for recipe repository\n *\n * @export\n * @class RecipeRepository\n * @typedef {RecipeRepository}\n * @implements {IBaseRepository}\n * @implements {IUpdateRepository}\n * @implements {IFindAll}\n */\n@Injectable()\nexport class RecipeRepository\n  implements\n    IBaseRepository,\n    IUpdateRepository,\n    IFindAll\n{\n  /**\n   * Creates an instance of RecipeRepository.\n   *\n   * @constructor\n   * @param {Model} repository - recipe repository\n   */\n  constructor(\n    @InjectModel(RecipeMongo.name)\n    private readonly repository: Model,\n  ) {}\n  /**\n   * update recipe\n   *\n   * @param {string} _id - recipe id\n   * @param {RecipeMongo} entity - recipe entity\n   * @returns {Observable} - recipe observable\n   */\n  update(_id: string, entity: RecipeMongo): Observable {\n    return from(this.repository.findByIdAndUpdate(_id, entity, { new: true }));\n  }\n  /**\n   * create recipe\n   *\n   * @param {RecipeMongo} entity - recipe entity\n   * @returns {Observable} - recipe observable\n   */\n  create(entity: RecipeMongo): Observable {\n    return from(this.repository.create(entity));\n  }\n  /**\n   * find recipe by id\n   *\n   * @param {string} document - recipe id\n   * @returns {Observable} - recipe observable\n   */\n  findById(document: string): Observable {\n    return from(this.repository.findById(document));\n  }\n  /**\n   * delete recipe by id\n   *\n   * @param {string} _id - recipe id\n   * @returns {Observable} - recipe observable\n   */\n  delete(_id: string): Observable {\n    return from(this.repository.findByIdAndDelete(_id));\n  }\n  /**\n   * find all recipes\n   *\n   * @returns {Observable} - recipe observable\n   */\n  findAll(): Observable {\n    return from(this.repository.find()) as Observable;\n  }\n\n  /**\n   * find all recipes by user id\n   *\n   * @param {string} userId - user id\n   * @returns {Observable} - recipe observable\n   */\n  findAllByUserId(userId: string): Observable {\n    return from(this.repository.find({ userId: userId })) as Observable;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RecipeService.html":{"url":"injectables/RecipeService.html","title":"injectable - RecipeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RecipeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/services/recipe..service.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the recipe service\n\n            \n\n            \n                Extends\n            \n            \n                        RecipeMongoService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAllByUserId\n                            \n                            \n                                findById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: RecipeMongo)\n                \n            \n\n\n            \n                \n                    Inherited from         RecipeMongoService\n\n                \n            \n            \n                \n                        Defined in         RecipeMongoService:29\n\n                \n            \n\n\n            \n                \n                    create a recipe\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                RecipeMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrecipe\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nrecipe\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         RecipeMongoService\n\n                \n            \n            \n                \n                        Defined in         RecipeMongoService:57\n\n                \n            \n\n\n            \n                \n                    delete recipe\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrecipe id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nrecipe\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \nfindAllByUserId(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         RecipeMongoService\n\n                \n            \n            \n                \n                        Defined in         RecipeMongoService:67\n\n                \n            \n\n\n            \n                \n                    find all recipes by user id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nuser id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nrecipes\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         RecipeMongoService\n\n                \n            \n            \n                \n                        Defined in         RecipeMongoService:38\n\n                \n            \n\n\n            \n                \n                    find by id recipe\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrecipe id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nrecipe\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, recipe: RecipeMongo)\n                \n            \n\n\n            \n                \n                    Inherited from         RecipeMongoService\n\n                \n            \n            \n                \n                        Defined in         RecipeMongoService:48\n\n                \n            \n\n\n            \n                \n                    update recipe\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrecipe id\n\n\n                                    \n                                \n                                \n                                    recipe\n                                    \n                                                RecipeMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrecipe\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nrecipe\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { RecipeMongoService } from '../persistence/database/mongo/services/recipe.service';\n\n/**\n * interface for the recipe service\n *\n * @export\n * @class RecipeService\n * @typedef {RecipeService}\n * @extends {RecipeMongoService}\n */\n@Injectable()\nexport class RecipeService extends RecipeMongoService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RecipesModel.html":{"url":"classes/RecipesModel.html","title":"class - RecipesModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RecipesModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/models/recipes.model.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for recipe domain model\n\n            \n\n            \n                Extends\n            \n            \n                        RecipeDomainModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                description\n                            \n                            \n                                ingredients\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                notes\n                            \n                            \n                                    Optional\n                                nutritionInfo\n                            \n                            \n                                photoUrl\n                            \n                            \n                                servings\n                            \n                            \n                                steps\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         RecipeDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         RecipeDomainModel:19\n\n                        \n                    \n\n            \n                \n                    id of recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         RecipeDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         RecipeDomainModel:31\n\n                        \n                    \n\n            \n                \n                    description of recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                        \n                            \n                                Inherited from         RecipeDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         RecipeDomainModel:37\n\n                        \n                    \n\n            \n                \n                    ingredients of recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         RecipeDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         RecipeDomainModel:25\n\n                        \n                    \n\n            \n                \n                    name of recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         RecipeDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         RecipeDomainModel:55\n\n                        \n                    \n\n            \n                \n                    notes of recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        nutritionInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         RecipeDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         RecipeDomainModel:67\n\n                        \n                    \n\n            \n                \n                    nutrition info of recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         RecipeDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         RecipeDomainModel:43\n\n                        \n                    \n\n            \n                \n                    photo url of recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        servings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         RecipeDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         RecipeDomainModel:61\n\n                        \n                    \n\n            \n                \n                    servings of recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        steps\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                Inherited from         RecipeDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         RecipeDomainModel:49\n\n                        \n                    \n\n            \n                \n                    steps of recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         RecipeDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         RecipeDomainModel:73\n\n                        \n                    \n\n            \n                \n                    user id of recipe\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RecipeDomainModel } from '@domain/models';\n\n/**\n * interface for recipe domain model\n *\n * @export\n * @class RecipesModel\n * @typedef {RecipesModel}\n * @extends {RecipeDomainModel}\n */\nexport class RecipesModel extends RecipeDomainModel {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateIngredientDto.html":{"url":"classes/UpdateIngredientDto.html","title":"class - UpdateIngredientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateIngredientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/dto/update-ingredient.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                class UpdateIngredientDto\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdateIngredientDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                photoUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/update-ingredient.dto.ts:28\n                        \n                    \n\n            \n                \n                    description of the ingredient\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/update-ingredient.dto.ts:20\n                        \n                    \n\n            \n                \n                    name of the ingredient\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        photoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/update-ingredient.dto.ts:36\n                        \n                    \n\n            \n                \n                    photo url of the ingredient\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IUpdateIngredientDto } from '@domain/dto';\nimport { IsOptional, IsString } from 'class-validator';\n\n/**\n * class UpdateIngredientDto\n *\n * @export\n * @class UpdateIngredientDto\n * @typedef {UpdateIngredientDto}\n * @implements {IUpdateIngredientDto}\n */\nexport class UpdateIngredientDto implements IUpdateIngredientDto {\n  /**\n   * name of the ingredient\n   *\n   * @type {?string} name\n   */\n  @IsString()\n  @IsOptional()\n  name?: string;\n  /**\n   * description of the ingredient\n   *\n   * @type {?string} description\n   */\n  @IsString()\n  @IsOptional()\n  description?: string;\n  /**\n   * photo url of the ingredient\n   *\n   * @type {?string} photoUrl\n   */\n  @IsString()\n  @IsOptional()\n  photoUrl?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateIngredientUseCase.html":{"url":"classes/UpdateIngredientUseCase.html","title":"class - UpdateIngredientUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateIngredientUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/use-cases/update/update-ingredient.use-case.ts\n        \n\n\n            \n                Description\n            \n            \n                update ingredient use case\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUseCase\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: IIngredientService)\n                    \n                \n                        \n                            \n                                Defined in src/application/use-cases/update/update-ingredient.use-case.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of UpdateIngredientUseCase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        IIngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ingredient service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(id: string, ingredient: IUpdateIngredientDto)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/update/update-ingredient.use-case.ts:31\n                \n            \n\n\n            \n                \n                    execute update ingredient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ningredient id\n\n\n                                    \n                                \n                                \n                                    ingredient\n                                    \n                                                IUpdateIngredientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ningredient\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \ningredient\n\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUseCase } from '@application/interface';\nimport { IUpdateIngredientDto } from '@domain/dto';\nimport { IngredientDomainModel } from '@domain/models';\nimport { IIngredientService } from '@domain/services';\nimport { Observable, switchMap } from 'rxjs';\n\n/**\n * update ingredient use case\n *\n * @export\n * @class UpdateIngredientUseCase\n * @typedef {UpdateIngredientUseCase}\n * @implements {IUseCase}\n */\nexport class UpdateIngredientUseCase implements IUseCase {\n  /**\n   * Creates an instance of UpdateIngredientUseCase.\n   *\n   * @constructor\n   * @param {IIngredientService} service ingredient service\n   */\n  constructor(private readonly service: IIngredientService) {}\n\n  /**\n   * execute update ingredient\n   *\n   * @param {string} id - ingredient id\n   * @param {IUpdateIngredientDto} ingredient - ingredient\n   * @returns {Observable} - ingredient\n   */\n  execute(\n    id: string,\n    ingredient: IUpdateIngredientDto,\n  ): Observable {\n    return this.service.findById(id).pipe(\n      switchMap((entity: IngredientDomainModel) => {\n        const update = new IngredientDomainModel();\n        update.name = ingredient.name || entity.name;\n        update.description = ingredient.description || entity.description;\n        update.photoUrl = ingredient.photoUrl || entity.photoUrl;\n        return this.service.update(id, update);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMealPlannerDto.html":{"url":"classes/UpdateMealPlannerDto.html","title":"class - UpdateMealPlannerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMealPlannerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/dto/update-meal-planner.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                interface IUpdateMealPlannerDto\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdateMealPlannerDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                amount\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                notes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AmountDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ValidateNested({each: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/update-meal-planner.dto.ts:35\n                        \n                    \n\n            \n                \n                    amount of the meal planner\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/update-meal-planner.dto.ts:26\n                        \n                    \n\n            \n                \n                    name of the meal planner\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/update-meal-planner.dto.ts:43\n                        \n                    \n\n            \n                \n                    notes of the meal planner\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IUpdateMealPlannerDto } from '@domain/dto';\nimport {\n  IsArray,\n  IsNumber,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\n\n/**\n * interface IUpdateMealPlannerDto\n *\n * @export\n * @class UpdateMealPlannerDto\n * @typedef {UpdateMealPlannerDto}\n * @implements {IUpdateMealPlannerDto}\n */\nexport class UpdateMealPlannerDto implements IUpdateMealPlannerDto {\n  /**\n   * name of the meal planner\n   *\n   * @type {?string} name\n   */\n  @IsOptional()\n  @IsString()\n  name?: string;\n  /**\n   * amount of the meal planner\n   *\n   * @type {?AmountDto[]} amount\n   */\n  @IsArray()\n  @ValidateNested({ each: true })\n  @IsOptional()\n  amount?: AmountDto[];\n  /**\n   * notes of the meal planner\n   *\n   * @type {?string} notes\n   */\n  @IsOptional()\n  @IsString()\n  notes?: string;\n}\n\n/**\n * class AmountDto\n *\n * @class AmountDto\n * @typedef {AmountDto}\n */\nclass AmountDto {\n  /**\n   * amount of the ingredient\n   *\n   * @type {number} amount\n   */\n  @IsNumber()\n  amount: number;\n  /**\n   * id of the ingredient\n   *\n   * @type {string} ingredientId\n   */\n  @IsString()\n  ingredientId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMealPlannerUseCase.html":{"url":"classes/UpdateMealPlannerUseCase.html","title":"class - UpdateMealPlannerUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMealPlannerUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/use-cases/update/update-meal-planner.use-case.ts\n        \n\n\n            \n                Description\n            \n            \n                update meal planner use case\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUseCase\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                            \n                                isExistIngredients\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: IMealPlannerService, ingredientService: IIngredientService)\n                    \n                \n                        \n                            \n                                Defined in src/application/use-cases/update/update-meal-planner.use-case.ts:24\n                            \n                        \n\n                \n                    \n                            Creates an instance of UpdateMealPlannerUseCase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        IMealPlannerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                meal planner service\n\n                                                        \n                                                \n                                                \n                                                        ingredientService\n                                                  \n                                                        \n                                                                        IIngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ingredient service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(_id: string, mealPlanner: ICreateMealPlannerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/update/update-meal-planner.use-case.ts:44\n                \n            \n\n\n            \n                \n                    execute update meal planner\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner id\n\n\n                                    \n                                \n                                \n                                    mealPlanner\n                                    \n                                                ICreateMealPlannerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nmeal planner\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExistIngredients\n                        \n                    \n                \n            \n            \n                \nisExistIngredients(mealPlanner: ICreateMealPlannerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/update/update-meal-planner.use-case.ts:75\n                \n            \n\n\n            \n                \n                    check if ingredients exist\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    mealPlanner\n                                    \n                                                ICreateMealPlannerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \ntrue if exist\n\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUseCase } from '@application/interface';\nimport { ICreateMealPlannerDto } from '@domain/dto';\nimport { MealPlannerDomainModel } from '@domain/models';\nimport { IIngredientService, IMealPlannerService } from '@domain/services';\nimport { NotFoundException } from '@nestjs/common';\nimport {\n  Observable,\n  catchError,\n  forkJoin,\n  map,\n  of,\n  switchMap,\n  throwError,\n} from 'rxjs';\n\n/**\n * update meal planner use case\n *\n * @export\n * @class UpdateMealPlannerUseCase\n * @typedef {UpdateMealPlannerUseCase}\n * @implements {IUseCase}\n */\nexport class UpdateMealPlannerUseCase implements IUseCase {\n  /**\n   * Creates an instance of UpdateMealPlannerUseCase.\n   *\n   * @constructor\n   * @param {IMealPlannerService} service meal planner service\n   * @param {IIngredientService} ingredientService ingredient service\n   */\n  constructor(\n    private readonly service: IMealPlannerService,\n    private readonly ingredientService: IIngredientService,\n  ) {}\n\n  /**\n   * execute update meal planner\n   *\n   * @param {string} _id - meal planner id\n   * @param {ICreateMealPlannerDto} mealPlanner - meal planner\n   * @returns {Observable} - meal planner\n   */\n  execute(\n    _id: string,\n    mealPlanner: ICreateMealPlannerDto,\n  ): Observable {\n    return this.service.findById(_id).pipe(\n      switchMap((entity) => {\n        const updateMealPlanner = new MealPlannerDomainModel();\n        updateMealPlanner.name = mealPlanner.name || entity.name;\n        updateMealPlanner.notes = mealPlanner.notes || entity.notes;\n        return mealPlanner.amount\n          ? this.isExistIngredients(mealPlanner).pipe(\n              switchMap((entidad) => {\n                updateMealPlanner.amount = mealPlanner.amount;\n                return entidad\n                  ? this.service.update(_id, updateMealPlanner)\n                  : throwError(\n                      () => new NotFoundException('Ingredient not found'),\n                    );\n              }),\n            )\n          : this.service.update(_id, updateMealPlanner);\n      }),\n    );\n  }\n\n  /**\n   * check if ingredients exist\n   *\n   * @param {ICreateMealPlannerDto} mealPlanner - meal planner\n   * @returns {Observable} - true if exist\n   */\n  isExistIngredients(mealPlanner: ICreateMealPlannerDto): Observable {\n    const ids = mealPlanner.amount.map((ingredient) => ingredient.ingredientId);\n    const observables = ids.map((id) =>\n      this.ingredientService.findById(id).pipe(\n        map((entity) => {\n          return entity !== null;\n        }),\n        catchError(() => of(false)),\n      ),\n    );\n\n    return forkJoin(observables).pipe(\n      map((results) =>\n        results.every((result) => {\n          return result;\n        }),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRecipeDto.html":{"url":"classes/UpdateRecipeDto.html","title":"class - UpdateRecipeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRecipeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/dto/update-recipe.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                interface IUpdateRecipesDto\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdateRecipesDto\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                ingredients\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                notes\n                            \n                            \n                                    Optional\n                                nutritionInfo\n                            \n                            \n                                    Optional\n                                photoUrl\n                            \n                            \n                                    Optional\n                                servings\n                            \n                            \n                                    Optional\n                                steps\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/update-recipe.dto.ts:43\n                        \n                    \n\n            \n                \n                    description of the recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IngredientDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ValidateNested({each: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/update-recipe.dto.ts:35\n                        \n                    \n\n            \n                \n                    list of ingredients\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/update-recipe.dto.ts:26\n                        \n                    \n\n            \n                \n                    name of the recipe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/update-recipe.dto.ts:67\n                        \n                    \n\n            \n                \n                    notes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        nutritionInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/update-recipe.dto.ts:83\n                        \n                    \n\n            \n                \n                    nutrition info\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        photoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/update-recipe.dto.ts:51\n                        \n                    \n\n            \n                \n                    url of the photo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        servings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/update-recipe.dto.ts:75\n                        \n                    \n\n            \n                \n                    number of servings\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        steps\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/dto/update-recipe.dto.ts:59\n                        \n                    \n\n            \n                \n                    list of steps\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IUpdateRecipesDto } from '@domain/dto';\nimport {\n  IsArray,\n  IsNumber,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\n\n/**\n * interface IUpdateRecipesDto\n *\n * @export\n * @class UpdateRecipeDto\n * @typedef {UpdateRecipeDto}\n * @implements {IUpdateRecipesDto}\n */\nexport class UpdateRecipeDto implements IUpdateRecipesDto {\n  /**\n   * name of the recipe\n   *\n   * @type {?string} name\n   */\n  @IsString()\n  @IsOptional()\n  name?: string;\n  /**\n   * list of ingredients\n   *\n   * @type {?IngredientDto[]} ingredients\n   */\n  @IsArray()\n  @ValidateNested({ each: true })\n  @IsOptional()\n  ingredients?: IngredientDto[];\n  /**\n   * description of the recipe\n   *\n   * @type {?string} description\n   */\n  @IsString()\n  @IsOptional()\n  description?: string;\n  /**\n   * url of the photo\n   *\n   * @type {?string} photoUrl\n   */\n  @IsString()\n  @IsOptional()\n  photoUrl?: string;\n  /**\n   * list of steps\n   *\n   * @type {?string[]} steps\n   */\n  @IsString({ each: true })\n  @IsOptional()\n  steps?: string[];\n  /**\n   * notes\n   *\n   * @type {?string} notes\n   */\n  @IsString()\n  @IsOptional()\n  notes?: string;\n  /**\n   * number of servings\n   *\n   * @type {?number} servings\n   */\n  @IsNumber()\n  @IsOptional()\n  servings?: number;\n  /**\n   * nutrition info\n   *\n   * @type {?string} nutritionInfo\n   */\n  @IsString()\n  @IsOptional()\n  nutritionInfo?: string;\n}\n\n/**\n * class for ingredient dto\n *\n * @class IngredientDto\n * @typedef {IngredientDto}\n */\nclass IngredientDto {\n  /**\n   * amount of ingredient\n   *\n   * @type {number} amount\n   */\n  @IsNumber()\n  amount: number;\n  /**\n   * id of ingredient\n   *\n   * @type {string} ingredientId\n   */\n  @IsString()\n  ingredientId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRecipeUseCase.html":{"url":"classes/UpdateRecipeUseCase.html","title":"class - UpdateRecipeUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRecipeUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/application/use-cases/update/update-recipe.use-case.ts\n        \n\n\n            \n                Description\n            \n            \n                update recipe use case\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUseCase\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                            \n                                getRecipe\n                            \n                            \n                                isExistIngredients\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: IRecipeService, ingredientService: IIngredientService)\n                    \n                \n                        \n                            \n                                Defined in src/application/use-cases/update/update-recipe.use-case.ts:24\n                            \n                        \n\n                \n                    \n                            Creates an instance of UpdateRecipeUseCase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        IRecipeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                recipe service\n\n                                                        \n                                                \n                                                \n                                                        ingredientService\n                                                  \n                                                        \n                                                                        IIngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ingredient service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(_id: string, recipe: IUpdateRecipesDto)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/update/update-recipe.use-case.ts:44\n                \n            \n\n\n            \n                \n                    execute update recipe\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrecipe id\n\n\n                                    \n                                \n                                \n                                    recipe\n                                    \n                                                IUpdateRecipesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrecipe\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nrecipe\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRecipe\n                        \n                    \n                \n            \n            \n                \ngetRecipe(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/update/update-recipe.use-case.ts:80\n                \n            \n\n\n            \n                \n                    Description placeholder\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrecipe id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nrecipe\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExistIngredients\n                        \n                    \n                \n            \n            \n                \nisExistIngredients(recipe: IUpdateRecipesDto)\n                \n            \n\n\n            \n                \n                    Defined in src/application/use-cases/update/update-recipe.use-case.ts:90\n                \n            \n\n\n            \n                \n                    Description placeholder\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    recipe\n                                    \n                                                IUpdateRecipesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrecipe\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \nboolean\n\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUseCase } from '@application/interface';\nimport { IUpdateRecipesDto } from '@domain/dto';\nimport { RecipeDomainModel } from '@domain/models';\nimport { IIngredientService, IRecipeService } from '@domain/services';\nimport { NotFoundException } from '@nestjs/common';\nimport {\n  Observable,\n  catchError,\n  forkJoin,\n  map,\n  of,\n  switchMap,\n  throwError,\n} from 'rxjs';\n\n/**\n * update recipe use case\n *\n * @export\n * @class UpdateRecipeUseCase\n * @typedef {UpdateRecipeUseCase}\n * @implements {IUseCase}\n */\nexport class UpdateRecipeUseCase implements IUseCase {\n  /**\n   * Creates an instance of UpdateRecipeUseCase.\n   *\n   * @constructor\n   * @param {IRecipeService} service recipe service\n   * @param {IIngredientService} ingredientService ingredient service\n   */\n  constructor(\n    private readonly service: IRecipeService,\n    private readonly ingredientService: IIngredientService,\n  ) {}\n\n  /**\n   * execute update recipe\n   *\n   * @param {string} _id - recipe id\n   * @param {IUpdateRecipesDto} recipe - recipe\n   * @returns {Observable} - recipe\n   */\n  execute(\n    _id: string,\n    recipe: IUpdateRecipesDto,\n  ): Observable {\n    return this.getRecipe(_id).pipe(\n      switchMap((entity) => {\n        const update = new RecipeDomainModel();\n        update.name = recipe.name || entity.name;\n        update.description = recipe.description || entity.description;\n        update.photoUrl = recipe.photoUrl || entity.photoUrl;\n        update.notes = recipe.notes || entity.notes;\n        update.steps = recipe.steps || entity.steps;\n        update.servings = recipe.servings || entity.servings;\n        update.nutritionInfo = recipe.nutritionInfo || entity.nutritionInfo;\n        return recipe.ingredients\n          ? this.isExistIngredients(recipe).pipe(\n              switchMap((entidad) => {\n                update.ingredients = recipe.ingredients;\n                return entidad\n                  ? this.service.update(_id, update)\n                  : throwError(\n                      () => new NotFoundException('Ingredient not found'),\n                    );\n              }),\n            )\n          : this.service.update(_id, update);\n      }),\n    );\n  }\n\n  /**\n   * Description placeholder\n   *\n   * @param {string} _id - recipe id\n   * @returns {Observable} - recipe\n   */\n  getRecipe(_id: string): Observable {\n    return this.service.findById(_id);\n  }\n\n  /**\n   * Description placeholder\n   *\n   * @param {IUpdateRecipesDto} recipe - recipe\n   * @returns {Observable} - boolean\n   */\n  isExistIngredients(recipe: IUpdateRecipesDto): Observable {\n    const ids = recipe.ingredients.map((ingredient) => ingredient.ingredientId);\n\n    const observables = ids.map((id) =>\n      this.ingredientService.findById(id).pipe(\n        map((entity) => {\n          return entity !== null;\n        }),\n        catchError(() => of(false)),\n      ),\n    );\n\n    return forkJoin(observables).pipe(\n      map((results) =>\n        results.every((result) => {\n          return result;\n        }),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDomainModel.html":{"url":"classes/UserDomainModel.html","title":"class - UserDomainModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDomainModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/models/user.domain-model.ts\n        \n\n\n            \n                Description\n            \n            \n                class for user domain model\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUserDomainModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                email\n                            \n                            \n                                googleId\n                            \n                            \n                                    Optional\n                                mealPlannerId\n                            \n                            \n                                name\n                            \n                            \n                                photoUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/user.domain-model.ts:18\n                        \n                    \n\n            \n                \n                    id of user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/user.domain-model.ts:36\n                        \n                    \n\n            \n                \n                    email of user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        googleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/user.domain-model.ts:48\n                        \n                    \n\n            \n                \n                    google id of user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mealPlannerId\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/domain/models/user.domain-model.ts:24\n                        \n                    \n\n            \n                \n                    id of meal planner\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/user.domain-model.ts:30\n                        \n                    \n\n            \n                \n                    name of user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/models/user.domain-model.ts:42\n                        \n                    \n\n            \n                \n                    photo url of user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IUserDomainModel } from './interfaces/user.domain-model.interface';\nimport { MealPlannerDomainModel } from './meal-planner.domain-model';\n\n/**\n * class for user domain model\n *\n * @export\n * @class UserDomainModel\n * @typedef {UserDomainModel}\n * @implements {IUserDomainModel}\n */\nexport class UserDomainModel implements IUserDomainModel {\n  /**\n   * id of user\n   *\n   * @type {?string} _id - id of user\n   */\n  _id?: string;\n  /**\n   * id of meal planner\n   *\n   * @type {?MealPlannerDomainModel['_id']} mealPlannerId - id of meal planner\n   */\n  mealPlannerId?: MealPlannerDomainModel['_id'];\n  /**\n   * name of user\n   *\n   * @type {string} name\n   */\n  name: string;\n  /**\n   * email of user\n   *\n   * @type {string} email\n   */\n  email: string;\n  /**\n   * photo url of user\n   *\n   * @type {string} photoUrl\n   */\n  photoUrl: string;\n  /**\n   * google id of user\n   *\n   * @type {string} googleId\n   */\n  googleId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserModel.html":{"url":"classes/UserModel.html","title":"class - UserModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/models/user.model.ts\n        \n\n\n            \n                Description\n            \n            \n                class for user model\n\n            \n\n            \n                Extends\n            \n            \n                        UserDomainModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                email\n                            \n                            \n                                googleId\n                            \n                            \n                                    Optional\n                                mealPlannerId\n                            \n                            \n                                name\n                            \n                            \n                                photoUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         UserDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         UserDomainModel:18\n\n                        \n                    \n\n            \n                \n                    id of user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         UserDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         UserDomainModel:36\n\n                        \n                    \n\n            \n                \n                    email of user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        googleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         UserDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         UserDomainModel:48\n\n                        \n                    \n\n            \n                \n                    google id of user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mealPlannerId\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         UserDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         UserDomainModel:24\n\n                        \n                    \n\n            \n                \n                    id of meal planner\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         UserDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         UserDomainModel:30\n\n                        \n                    \n\n            \n                \n                    name of user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         UserDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         UserDomainModel:42\n\n                        \n                    \n\n            \n                \n                    photo url of user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserDomainModel } from '@domain/models';\n\n/**\n * class for user model\n *\n * @export\n * @class UserModel\n * @typedef {UserModel}\n * @extends {UserDomainModel}\n */\nexport class UserModel extends UserDomainModel {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserMongo.html":{"url":"classes/UserMongo.html","title":"class - UserMongo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserMongo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/persistence/database/mongo/schemas/user.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                class for user model\n\n            \n\n            \n                Extends\n            \n            \n                        UserModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                email\n                            \n                            \n                                googleId\n                            \n                            \n                                mealPlannerId\n                            \n                            \n                                name\n                            \n                            \n                                photoUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, auto: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         UserDomainModel:29\n\n                        \n                    \n\n            \n                \n                    id of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true, lowercase: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         UserDomainModel:45\n\n                        \n                    \n\n            \n                \n                    email of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        googleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         UserDomainModel:61\n\n                        \n                    \n\n            \n                \n                    google id of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mealPlannerId\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         UserDomainModel:72\n\n                        \n                    \n\n            \n                \n                    meal planner id of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         UserDomainModel:37\n\n                        \n                    \n\n            \n                \n                    name of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserDomainModel\n\n                            \n                        \n                    \n                        \n                                Defined in         UserDomainModel:53\n\n                        \n                    \n\n            \n                \n                    photo url of the user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserModel } from '@infrastructure/models';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, SchemaTypes } from 'mongoose';\nimport { MealPlannerMongo } from './meal-planner.schema';\n\n/**\n * class for user model\n *\n * @export\n * @class UserMongo\n * @typedef {UserMongo}\n * @extends {UserModel}\n */\n@Schema({\n  collection: 'users',\n  versionKey: false,\n  strict: false,\n})\nexport class UserMongo extends UserModel {\n  /**\n   * id of the user\n   *\n   * @type {?string} id of the user\n   */\n  @Prop({\n    type: SchemaTypes.ObjectId,\n    auto: true,\n  })\n  _id?: string;\n\n  /**\n   * name of the user\n   *\n   * @type {string} name of the user\n   */\n  @Prop({ type: String, required: true })\n  name: string;\n\n  /**\n   * email of the user\n   *\n   * @type {string} email of the user\n   */\n  @Prop({ type: String, required: true, unique: true, lowercase: true })\n  email: string;\n\n  /**\n   * photo url of the user\n   *\n   * @type {string} photo url of the user\n   */\n  @Prop({ type: String, required: true })\n  photoUrl: string;\n\n  /**\n   * google id of the user\n   *\n   * @type {string} google id of the user\n   */\n  @Prop({ type: String, required: true, unique: true })\n  googleId: string;\n\n  /**\n   * meal planner id of the user\n   *\n   * @type {MealPlannerMongo['_id']} meal planner id of the user\n   */\n  @Prop({\n    type: SchemaTypes.ObjectId,\n    ref: MealPlannerMongo.name,\n  })\n  mealPlannerId: MealPlannerMongo['_id'];\n}\n\n/**\n * schema for user model\n *\n * @type {*}\n */\nexport const UserSchema = SchemaFactory.createForClass(UserMongo);\n/**\n * type for user document\n *\n * @export\n * @typedef {UserDocument}\n */\nexport type UserDocument = HydratedDocument;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserMongoService.html":{"url":"injectables/UserMongoService.html","title":"injectable - UserMongoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserMongoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/persistence/database/mongo/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                User Mongo Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMealPlanner\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/persistence/database/mongo/services/user.service.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserMongoService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nuser repository\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMealPlanner\n                        \n                    \n                \n            \n            \n                \naddMealPlanner(userId: string, mealPlanner: MealPlannerMongo)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/services/user.service.ts:61\n                \n            \n\n\n            \n                \n                    update user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nuser id\n\n\n                                    \n                                \n                                \n                                    mealPlanner\n                                    \n                                                MealPlannerMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner entity\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nuser observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: UserMongo)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/services/user.service.ts:31\n                \n            \n\n\n            \n                \n                    create user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                UserMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nuser entity\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nuser observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/services/user.service.ts:50\n                \n            \n\n\n            \n                \n                    delete user by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nuser id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nuser observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/services/user.service.ts:40\n                \n            \n\n\n            \n                \n                    find user by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nuser id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nuser observable\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IUserService } from '@domain/services/user.service';\nimport { Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { UserRepository } from '../repositories';\nimport { MealPlannerMongo } from '../schemas';\nimport { UserMongo } from '../schemas/user.schema';\n\n/**\n * User Mongo Service\n *\n * @export\n * @class UserMongoService\n * @typedef {UserMongoService}\n * @implements {IUserService}\n */\n@Injectable()\nexport class UserMongoService implements IUserService {\n  /**\n   * Creates an instance of UserMongoService.\n   *\n   * @constructor\n   * @param {UserRepository} userRepository - user repository\n   */\n  constructor(private readonly userRepository: UserRepository) {}\n  /**\n   * create user\n   *\n   * @param {UserMongo} entity - user entity\n   * @returns {Observable} - user observable\n   */\n  create(entity: UserMongo): Observable {\n    return this.userRepository.create(entity);\n  }\n  /**\n   * find user by id\n   *\n   * @param {string} id - user id\n   * @returns {Observable} - user observable\n   */\n  findById(id: string): Observable {\n    return this.userRepository.findById(id);\n  }\n\n  /**\n   * delete user by id\n   *\n   * @param {string} id - user id\n   * @returns {Observable} - user observable\n   */\n  delete(id: string): Observable {\n    return this.userRepository.delete(id);\n  }\n\n  /**\n   * update user\n   *\n   * @param {string} userId - user id\n   * @param {MealPlannerMongo} mealPlanner - meal planner entity\n   * @returns {Observable} - user observable\n   */\n  addMealPlanner(\n    userId: string,\n    mealPlanner: MealPlannerMongo,\n  ): Observable {\n    return this.userRepository.addMealPlanner(userId, mealPlanner);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepository.html":{"url":"injectables/UserRepository.html","title":"injectable - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/persistence/database/mongo/repositories/user.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                class user repository\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMealPlanner\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Model)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/persistence/database/mongo/repositories/user.repository.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserRepository.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nuser repository\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMealPlanner\n                        \n                    \n                \n            \n            \n                \naddMealPlanner(_id: string, entity: MealPlannerMongo)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/user.repository.ts:63\n                \n            \n\n\n            \n                \n                    add meal planner to user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nuser id\n\n\n                                    \n                                \n                                \n                                    entity\n                                    \n                                                MealPlannerMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner entity\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nuser observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: UserMongo)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/user.repository.ts:34\n                \n            \n\n\n            \n                \n                    create user repository\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                UserMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nuser entity\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nuser observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/user.repository.ts:52\n                \n            \n\n\n            \n                \n                    delete user by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nuser id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nuser observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/persistence/database/mongo/repositories/user.repository.ts:43\n                \n            \n\n\n            \n                \n                    find user by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nuser id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nuser observable\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IBaseRepository, MealPlannerMongo } from '@infrastructure/persistence';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Observable, from } from 'rxjs';\nimport { UserDocument, UserMongo } from '../schemas/user.schema';\n\n/**\n * class user repository\n *\n * @export\n * @class UserRepository\n * @typedef {UserRepository}\n * @implements {IBaseRepository}\n */\n@Injectable()\nexport class UserRepository implements IBaseRepository {\n  /**\n   * Creates an instance of UserRepository.\n   *\n   * @constructor\n   * @param {Model} repository - user repository\n   */\n  constructor(\n    @InjectModel(UserMongo.name)\n    private readonly repository: Model,\n  ) {}\n  /**\n   * create user repository\n   *\n   * @param {UserMongo} entity - user entity\n   * @returns {Observable} - user observable\n   */\n  create(entity: UserMongo): Observable {\n    return from(this.repository.create(entity));\n  }\n  /**\n   * find user by id\n   *\n   * @param {string} id - user id\n   * @returns {Observable} - user observable\n   */\n  findById(id: string): Observable {\n    return from(this.repository.findOne({ googleId: id }));\n  }\n  /**\n   * delete user by id\n   *\n   * @param {string} _id  - user id\n   * @returns {Observable} - user observable\n   */\n  delete(_id: string): Observable {\n    return from(this.repository.findByIdAndDelete(_id));\n  }\n\n  /**\n   * add meal planner to user\n   *\n   * @param {string} _id - user id\n   * @param {MealPlannerMongo} entity - meal planner entity\n   * @returns {Observable} - user observable\n   */\n  addMealPlanner(_id: string, entity: MealPlannerMongo): Observable {\n    return from(\n      this.repository\n        .findOneAndUpdate({ _id }, { mealPlannerId: entity._id }, { new: true })\n        .exec(),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the user service\n\n            \n\n            \n                Extends\n            \n            \n                        UserMongoService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMealPlanner\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMealPlanner\n                        \n                    \n                \n            \n            \n                \naddMealPlanner(userId: string, mealPlanner: MealPlannerMongo)\n                \n            \n\n\n            \n                \n                    Inherited from         UserMongoService\n\n                \n            \n            \n                \n                        Defined in         UserMongoService:61\n\n                \n            \n\n\n            \n                \n                    update user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nuser id\n\n\n                                    \n                                \n                                \n                                    mealPlanner\n                                    \n                                                MealPlannerMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmeal planner entity\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nuser observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: UserMongo)\n                \n            \n\n\n            \n                \n                    Inherited from         UserMongoService\n\n                \n            \n            \n                \n                        Defined in         UserMongoService:31\n\n                \n            \n\n\n            \n                \n                    create user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                UserMongo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nuser entity\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nuser observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         UserMongoService\n\n                \n            \n            \n                \n                        Defined in         UserMongoService:50\n\n                \n            \n\n\n            \n                \n                    delete user by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nuser id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nuser observable\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         UserMongoService\n\n                \n            \n            \n                \n                        Defined in         UserMongoService:40\n\n                \n            \n\n\n            \n                \n                    find user by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nuser id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nuser observable\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserMongoService } from '../persistence/database/mongo/services/user.service';\n\n/**\n * interface for the user service\n *\n * @export\n * @class UserService\n * @typedef {UserService}\n * @extends {UserMongoService}\n */\n@Injectable()\nexport class UserService extends UserMongoService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateMongoId.html":{"url":"injectables/ValidateMongoId.html","title":"injectable - ValidateMongoId","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidateMongoId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/utils/pipes/mongo-id.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                validate mongo id\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/utils/pipes/mongo-id.pipe.ts:26\n                \n            \n\n\n            \n                \n                    transform\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nvalue\n\n\n                                    \n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmetadata\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ArgumentMetadata,\n  BadRequestException,\n  Injectable,\n  PipeTransform,\n} from '@nestjs/common';\nimport { ObjectId } from 'mongodb';\n\n/**\n * validate mongo id\n *\n * @export\n * @class ValidateMongoId\n * @typedef {ValidateMongoId}\n * @implements {PipeTransform}\n */\n@Injectable()\nexport class ValidateMongoId implements PipeTransform {\n  /**\n   * transform\n   *\n   * @param {string} value - value\n   * @param {ArgumentMetadata} metadata - metadata\n   * @returns {string}\n   */\n  transform(value: string, metadata: ArgumentMetadata): string {\n    return ObjectId.isValid(value) && String(new ObjectId(value)) === value\n      ? value\n      : (() => {\n          throw new BadRequestException('Invalid Mongo ID');\n        })();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/application/delegate/delegate.delegate.ts\n            \n            class\n            Delegate\n            \n                100 %\n                (21/21)\n            \n        \n        \n            \n                \n                src/application/interface/use-case.interface.ts\n            \n            interface\n            IUseCase\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/application/use-cases/create/create-ingredient.use-case.ts\n            \n            class\n            CreateIngredientUseCase\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/application/use-cases/create/create-meal-planner.use-case.ts\n            \n            class\n            CreateMealPlannerUseCase\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/application/use-cases/create/create-recipe.use-case.ts\n            \n            class\n            CreateRecipeUseCase\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/application/use-cases/create/create-user.use-case.ts\n            \n            class\n            CreateUserUseCase\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/application/use-cases/delete/delete-meal-planner.use-case.ts\n            \n            class\n            DeleteMealPlannerUseCase\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/application/use-cases/delete/delete-recipe.use-case.ts\n            \n            class\n            DeleteRecipeUseCase\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/application/use-cases/delete/delete-user.use-case.ts\n            \n            class\n            DeleteUserUseCase\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/application/use-cases/get/get-all-ingredient.use-case.ts\n            \n            class\n            GetAllIngredientUseCase\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/application/use-cases/get/get-all-recipes.use-case.ts\n            \n            class\n            GetAllRecipesUseCase\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/application/use-cases/get/get-ingredient-id.use-case.ts\n            \n            class\n            GetIngredientUseCase\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/application/use-cases/get/get-ingredient-name.use-case.ts\n            \n            class\n            GetIngredientByNameUseCase\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/application/use-cases/get/get-meal-planner.use-case.ts\n            \n            class\n            GetMealPlannerUseCase\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/application/use-cases/get/get-recipe.use-case.ts\n            \n            class\n            GetRecipeUseCase\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/application/use-cases/get/get-user.use-case.ts\n            \n            class\n            GetUserUseCase\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/application/use-cases/update/update-ingredient.use-case.ts\n            \n            class\n            UpdateIngredientUseCase\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/application/use-cases/update/update-meal-planner.use-case.ts\n            \n            class\n            UpdateMealPlannerUseCase\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/application/use-cases/update/update-recipe.use-case.ts\n            \n            class\n            UpdateRecipeUseCase\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/domain/dto/create-meal-planner.dto.ts\n            \n            interface\n            ICreateMealPlannerDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/domain/dto/create-recipe.dto.ts\n            \n            interface\n            ICreateRecipeDto\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/domain/dto/create-user.dto.ts\n            \n            interface\n            ICreateUserDto\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/domain/dto/update-ingredient.dto.ts\n            \n            interface\n            IUpdateIngredientDto\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/domain/dto/update-meal-planner.dto.ts\n            \n            interface\n            IUpdateMealPlannerDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/domain/dto/update-recipes.dto.ts\n            \n            interface\n            IUpdateRecipesDto\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/domain/models/ingredient.domain-model.ts\n            \n            class\n            IngredientDomainModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/domain/models/interfaces/ingredient.domain-model.interface.ts\n            \n            interface\n            IIngredientDomainModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/domain/models/interfaces/meal-planner.domain-model.interface.ts\n            \n            interface\n            IMealPlannerDomainModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/domain/models/interfaces/recipes.domain-model.interface.ts\n            \n            interface\n            IRecipeDomainModel\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/domain/models/interfaces/user.domain-model.interface.ts\n            \n            interface\n            IUserDomainModel\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/domain/models/meal-planner.domain-model.ts\n            \n            class\n            MealPlannerDomainModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/domain/models/recipes.domain-model.ts\n            \n            class\n            RecipeDomainModel\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/domain/models/user.domain-model.ts\n            \n            class\n            UserDomainModel\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/domain/services/auth.service.ts\n            \n            interface\n            IAuthService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/domain/services/ingredient.service.ts\n            \n            interface\n            IIngredientService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/domain/services/meal-planner.service.ts\n            \n            interface\n            IMealPlannerService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/domain/services/recipes.service.ts\n            \n            interface\n            IRecipeService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/domain/services/user.service.ts\n            \n            interface\n            IUserService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/infrastructure/controllers/kitchen-recipes.controller.ts\n            \n            controller\n            KitchenRecipesController\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/infrastructure/dto/create-ingredient.dto.ts\n            \n            class\n            CreateIngredientDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/infrastructure/dto/create-meal-planner.dto.ts\n            \n            class\n            AmountDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/infrastructure/dto/create-meal-planner.dto.ts\n            \n            class\n            CreateMealPlannerDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/infrastructure/dto/create-recipe.dto.ts\n            \n            class\n            CreateRecipeDto\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/infrastructure/dto/create-recipe.dto.ts\n            \n            class\n            Ingredients\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/infrastructure/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/infrastructure/dto/update-ingredient.dto.ts\n            \n            class\n            UpdateIngredientDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/infrastructure/dto/update-meal-planner.dto.ts\n            \n            class\n            AmountDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/infrastructure/dto/update-meal-planner.dto.ts\n            \n            class\n            UpdateMealPlannerDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/infrastructure/dto/update-recipe.dto.ts\n            \n            class\n            IngredientDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/infrastructure/dto/update-recipe.dto.ts\n            \n            class\n            UpdateRecipeDto\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/infrastructure/models/ingredient.model.ts\n            \n            class\n            IngredientModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/infrastructure/models/meal-planner.model.ts\n            \n            class\n            MealPlannerModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/infrastructure/models/recipes.model.ts\n            \n            class\n            RecipesModel\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/infrastructure/models/user.model.ts\n            \n            class\n            UserModel\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/infrastructure/persistence/database/mongo/config/mongo.config.ts\n            \n            injectable\n            MongooseConfigService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/infrastructure/persistence/database/mongo/repositories/Interface/base.interface.ts\n            \n            interface\n            IBaseRepository\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/infrastructure/persistence/database/mongo/repositories/Interface/find-all.interface.ts\n            \n            interface\n            IFindAll\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/infrastructure/persistence/database/mongo/repositories/Interface/update.interface.ts\n            \n            interface\n            IUpdateRepository\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/infrastructure/persistence/database/mongo/repositories/ingredient.repository.ts\n            \n            injectable\n            IngredientRepository\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/infrastructure/persistence/database/mongo/repositories/meal-planner.repository.ts\n            \n            injectable\n            MealPlannerRepository\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/infrastructure/persistence/database/mongo/repositories/recipe.repository.ts\n            \n            injectable\n            RecipeRepository\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/infrastructure/persistence/database/mongo/repositories/user.repository.ts\n            \n            injectable\n            UserRepository\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/infrastructure/persistence/database/mongo/schemas/ingredient.schema.ts\n            \n            class\n            IngredientMongo\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/infrastructure/persistence/database/mongo/schemas/ingredient.schema.ts\n            \n            variable\n            IngredientsSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/infrastructure/persistence/database/mongo/schemas/meal-planner.schema.ts\n            \n            class\n            MealPlannerMongo\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/infrastructure/persistence/database/mongo/schemas/meal-planner.schema.ts\n            \n            variable\n            MealPlannerSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/infrastructure/persistence/database/mongo/schemas/recipe.schema.ts\n            \n            class\n            RecipeMongo\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/infrastructure/persistence/database/mongo/schemas/recipe.schema.ts\n            \n            variable\n            RecipesSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/infrastructure/persistence/database/mongo/schemas/user.schema.ts\n            \n            class\n            UserMongo\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/infrastructure/persistence/database/mongo/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/infrastructure/persistence/database/mongo/services/ingredient.service.ts\n            \n            injectable\n            IngredientMongoService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/infrastructure/persistence/database/mongo/services/meal-planner.service.ts\n            \n            injectable\n            MealPlannerMongoService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/infrastructure/persistence/database/mongo/services/recipe.service.ts\n            \n            injectable\n            RecipeMongoService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/infrastructure/persistence/database/mongo/services/user.service.ts\n            \n            injectable\n            UserMongoService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/infrastructure/services/ingredient.service.ts\n            \n            injectable\n            IngredientService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/infrastructure/services/meal-planner.service.ts\n            \n            injectable\n            MealPlannerService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/infrastructure/services/recipe..service.ts\n            \n            injectable\n            RecipeService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/infrastructure/services/secret.ts\n            \n            variable\n            JWTConstants\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/infrastructure/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/infrastructure/utils/exception-filters/jwt.exception-filter.ts\n            \n            class\n            JwtErrorExceptionFilter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/infrastructure/utils/exception-filters/mongo-server-error.exception-filter.ts\n            \n            class\n            MongoServerErrorExceptionFilter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/infrastructure/utils/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/infrastructure/utils/pipes/mongo-id.pipe.ts\n            \n            injectable\n            ValidateMongoId\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/infrastructure/utils/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.4.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.4.0\n        \n            @nestjs/jwt : ^10.0.3\n        \n            @nestjs/mongoose : ^9.2.2\n        \n            @nestjs/platform-express : ^9.4.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            mongodb : ^5.1.0\n        \n            mongoose : ^7.0.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    bootstrap the application\n\n\n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nAplicación de gestión de recetas\nEl software de gestión de recetas es una aplicación diseñada para ayudar a los usuarios a organizar y administrar sus recetas de cocina. Los usuarios pueden acceder a la aplicación a través de un sitio web o aplicación móvil, donde pueden ingresar y almacenar sus recetas en una base de datos. Además, la aplicación puede permitir a los usuarios buscar recetas por ingredientes, crear listas de compras para los ingredientes necesarios y planificar menús semanales. La aplicación también puede incluir características de personalización, como la capacidad de ajustar las porciones de las recetas y agregar notas y comentarios a cada receta. Además, algunos software de gestión de recetas pueden proporcionar información nutricional sobre las recetas para ayudar a los usuarios a hacer elecciones saludables y controlar su ingesta de calorías. Esto puede ser especialmente útil para las personas que quieren mantener un seguimiento de su dieta o para aquellas que buscan cocinar de manera más eficiente y planificada.\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfrastructureModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_InfrastructureModule\n\n\n\ncluster_InfrastructureModule_imports\n\n\n\ncluster_InfrastructureModule_exports\n\n\n\ncluster_InfrastructureModule_providers\n\n\n\ncluster_MongoModule\n\n\n\ncluster_MongoModule_exports\n\n\n\ncluster_MongoModule_providers\n\n\n\n\nInfrastructureModule\n\nInfrastructureModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nInfrastructureModule->AppModule\n\n\n\n\n\nIngredientService \n\nIngredientService \n\nIngredientService  -->\n\nInfrastructureModule->IngredientService \n\n\n\n\n\nMealPlannerService \n\nMealPlannerService \n\nMealPlannerService  -->\n\nInfrastructureModule->MealPlannerService \n\n\n\n\n\nRecipeService \n\nRecipeService \n\nRecipeService  -->\n\nInfrastructureModule->RecipeService \n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nInfrastructureModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nMongoModule\n\nMongoModule\n\nInfrastructureModule -->\n\nMongoModule->InfrastructureModule\n\n\n\n\n\nIngredientMongoService \n\nIngredientMongoService \n\nIngredientMongoService  -->\n\nMongoModule->IngredientMongoService \n\n\n\n\n\nIngredientRepository \n\nIngredientRepository \n\nIngredientRepository  -->\n\nMongoModule->IngredientRepository \n\n\n\n\n\nMealPlannerMongoService \n\nMealPlannerMongoService \n\nMealPlannerMongoService  -->\n\nMongoModule->MealPlannerMongoService \n\n\n\n\n\nMealPlannerRepository \n\nMealPlannerRepository \n\nMealPlannerRepository  -->\n\nMongoModule->MealPlannerRepository \n\n\n\n\n\nRecipeMongoService \n\nRecipeMongoService \n\nRecipeMongoService  -->\n\nMongoModule->RecipeMongoService \n\n\n\n\n\nRecipeRepository \n\nRecipeRepository \n\nRecipeRepository  -->\n\nMongoModule->RecipeRepository \n\n\n\n\n\nUserMongoService \n\nUserMongoService \n\nUserMongoService  -->\n\nMongoModule->UserMongoService \n\n\n\n\n\nUserRepository \n\nUserRepository \n\nUserRepository  -->\n\nMongoModule->UserRepository \n\n\n\n\n\nIngredientService\n\nIngredientService\n\nInfrastructureModule -->\n\nIngredientService->InfrastructureModule\n\n\n\n\n\nMealPlannerService\n\nMealPlannerService\n\nInfrastructureModule -->\n\nMealPlannerService->InfrastructureModule\n\n\n\n\n\nRecipeService\n\nRecipeService\n\nInfrastructureModule -->\n\nRecipeService->InfrastructureModule\n\n\n\n\n\nUserService\n\nUserService\n\nInfrastructureModule -->\n\nUserService->InfrastructureModule\n\n\n\n\n\nIngredientMongoService\n\nIngredientMongoService\n\nMongoModule -->\n\nIngredientMongoService->MongoModule\n\n\n\n\n\nIngredientRepository\n\nIngredientRepository\n\nMongoModule -->\n\nIngredientRepository->MongoModule\n\n\n\n\n\nMealPlannerMongoService\n\nMealPlannerMongoService\n\nMongoModule -->\n\nMealPlannerMongoService->MongoModule\n\n\n\n\n\nMealPlannerRepository\n\nMealPlannerRepository\n\nMongoModule -->\n\nMealPlannerRepository->MongoModule\n\n\n\n\n\nMongooseConfigService\n\nMongooseConfigService\n\nMongoModule -->\n\nMongooseConfigService->MongoModule\n\n\n\n\n\nRecipeMongoService\n\nRecipeMongoService\n\nMongoModule -->\n\nRecipeMongoService->MongoModule\n\n\n\n\n\nRecipeRepository\n\nRecipeRepository\n\nMongoModule -->\n\nRecipeRepository->MongoModule\n\n\n\n\n\nUserMongoService\n\nUserMongoService\n\nMongoModule -->\n\nUserMongoService->MongoModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nMongoModule -->\n\nUserRepository->MongoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    43 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    19 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ICreateIngredientDto   (src/.../create-ingredient.dto.ts)\n                        \n                        \n                            IngredientDocument   (src/.../ingredient.schema.ts)\n                        \n                        \n                            MealPlannerDocument   (src/.../meal-planner.schema.ts)\n                        \n                        \n                            RecipeDocument   (src/.../recipe.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/domain/dto/create-ingredient.dto.ts\n    \n    \n        \n            \n                \n                    \n                    ICreateIngredientDto\n                \n            \n            \n                \n                    create ingredient dto\n\n                \n            \n            \n                \n                            IIngredientDomainModel\n\n                \n            \n        \n    \n    src/infrastructure/persistence/database/mongo/schemas/ingredient.schema.ts\n    \n    \n        \n            \n                \n                    \n                    IngredientDocument\n                \n            \n            \n                \n                    Schema for Ingredient\n\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/infrastructure/persistence/database/mongo/schemas/meal-planner.schema.ts\n    \n    \n        \n            \n                \n                    \n                    MealPlannerDocument\n                \n            \n            \n                \n                    MealPlannerDocument\n\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/infrastructure/persistence/database/mongo/schemas/recipe.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RecipeDocument\n                \n            \n            \n                \n                    RecipeDocument\n\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/infrastructure/persistence/database/mongo/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                    type for user document\n\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IngredientsSchema   (src/.../ingredient.schema.ts)\n                        \n                        \n                            JWTConstants   (src/.../secret.ts)\n                        \n                        \n                            MealPlannerSchema   (src/.../meal-planner.schema.ts)\n                        \n                        \n                            RecipesSchema   (src/.../recipe.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/infrastructure/persistence/database/mongo/schemas/ingredient.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IngredientsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(IngredientMongo)\n                    \n                \n\n            \n                \n                    Schema for Ingredient\n\n                \n            \n\n        \n    \n\n    src/infrastructure/services/secret.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JWTConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: 'e91cfe58-eca0-4df9-abda-cddc0e7e63ea',\n}\n                    \n                \n\n            \n                \n                    secret.ts file\n\n                \n            \n\n        \n    \n\n    src/infrastructure/persistence/database/mongo/schemas/meal-planner.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MealPlannerSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(MealPlannerMongo)\n                    \n                \n\n            \n                \n                    MealPlannerSchema\n\n                \n            \n\n        \n    \n\n    src/infrastructure/persistence/database/mongo/schemas/recipe.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RecipesSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(RecipeMongo)\n                    \n                \n\n            \n                \n                    RecipesSchema\n\n                \n            \n\n        \n    \n\n    src/infrastructure/persistence/database/mongo/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(UserMongo)\n                    \n                \n\n            \n                \n                    schema for user model\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
